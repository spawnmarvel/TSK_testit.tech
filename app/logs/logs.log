[2017-11-21 19:47:00,965 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-11-21 19:47:01,512 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-11-21 19:47:01,512 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-11-21 19:47:01,512 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-11-21 19:47:18,992 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 19:47:18] "GET / HTTP/1.1" 200 -
[2017-11-21 19:47:23,086 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-21 19:47:23,086 : DEBUG : sqlalchemy_statments.py : 31 :              get_all() ] [(4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-21 19:47:23,086 : DEBUG : sqlalchemy_statments.py : 50 :           get_max_id() ] (4,)
[2017-11-21 19:47:23,102 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 19:47:23] "GET /note HTTP/1.1" 200 -
[2017-11-21 20:00:48,527 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-11-21 20:00:49,106 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-11-21 20:00:49,121 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-11-21 20:00:49,121 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-11-21 20:04:38,720 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:04:38] "GET / HTTP/1.1" 200 -
[2017-11-21 20:04:38,767 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:04:38] "GET /static/css/bootstrap.min.css HTTP/1.1" 200 -
[2017-11-21 20:04:38,767 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:04:38] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 200 -
[2017-11-21 20:04:38,783 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:04:38] "GET /static/js/bootstrap.min.js HTTP/1.1" 200 -
[2017-11-21 20:04:38,783 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:04:38] "GET /static/main.css HTTP/1.1" 200 -
[2017-11-21 20:04:38,830 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:04:38] "GET /favicon.ico HTTP/1.1" 404 -
[2017-11-21 20:04:45,033 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-21 20:04:45,033 : DEBUG : sqlalchemy_statments.py : 31 :              get_all() ] [(4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-21 20:04:45,033 : DEBUG : sqlalchemy_statments.py : 50 :           get_max_id() ] (4,)
[2017-11-21 20:04:45,080 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:04:45] "GET /note HTTP/1.1" 200 -
[2017-11-21 20:04:45,174 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:04:45] "GET /static/fonts/glyphicons-halflings-regular.woff2 HTTP/1.1" 200 -
[2017-11-21 20:05:44,909 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-21 20:05:44,909 : DEBUG : sqlalchemy_statments.py : 31 :              get_all() ] [(4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-21 20:05:44,909 : DEBUG : sqlalchemy_statments.py : 50 :           get_max_id() ] (4,)
[2017-11-21 20:05:44,925 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:05:44] "GET /note HTTP/1.1" 200 -
[2017-11-21 20:05:44,940 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:05:44] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-11-21 20:05:44,940 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:05:44] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-11-21 20:05:44,940 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:05:44] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-11-21 20:05:44,940 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:05:44] "GET /static/main.css HTTP/1.1" 304 -
[2017-11-21 20:06:21,039 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-21 20:06:21,039 : DEBUG : sqlalchemy_statments.py : 31 :              get_all() ] [(4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-21 20:06:21,039 : DEBUG : sqlalchemy_statments.py : 50 :           get_max_id() ] (4,)
[2017-11-21 20:06:21,055 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:06:21] "GET /note HTTP/1.1" 200 -
[2017-11-21 20:06:21,070 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:06:21] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-11-21 20:06:21,070 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:06:21] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-11-21 20:06:21,086 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:06:21] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-11-21 20:06:21,086 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:06:21] "GET /static/main.css HTTP/1.1" 304 -
[2017-11-21 20:08:37,397 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-21 20:08:37,397 : DEBUG : sqlalchemy_statments.py : 31 :              get_all() ] [(4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-21 20:08:37,397 : DEBUG : sqlalchemy_statments.py : 50 :           get_max_id() ] (4,)
[2017-11-21 20:08:37,412 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:08:37] "GET /note HTTP/1.1" 200 -
[2017-11-21 20:08:37,444 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:08:37] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-11-21 20:08:37,444 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:08:37] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-11-21 20:08:37,444 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:08:37] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-11-21 20:08:37,444 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:08:37] "GET /static/main.css HTTP/1.1" 304 -
[2017-11-21 20:09:11,599 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-21 20:09:11,599 : DEBUG : sqlalchemy_statments.py : 31 :              get_all() ] [(4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-21 20:09:11,614 : DEBUG : sqlalchemy_statments.py : 50 :           get_max_id() ] (4,)
[2017-11-21 20:09:11,614 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:09:11] "GET /note HTTP/1.1" 200 -
[2017-11-21 20:09:11,630 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:09:11] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-11-21 20:09:11,630 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:09:11] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-11-21 20:09:11,645 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:09:11] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-11-21 20:09:11,645 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:09:11] "GET /static/main.css HTTP/1.1" 304 -
[2017-11-21 20:10:23,711 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-21 20:10:23,712 : DEBUG : sqlalchemy_statments.py : 31 :              get_all() ] [(4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-21 20:10:23,712 : DEBUG : sqlalchemy_statments.py : 50 :           get_max_id() ] (4,)
[2017-11-21 20:10:23,718 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:10:23] "GET /note HTTP/1.1" 200 -
[2017-11-21 20:10:23,743 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:10:23] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-11-21 20:10:23,747 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:10:23] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-11-21 20:10:23,750 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:10:23] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-11-21 20:10:23,752 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:10:23] "GET /static/main.css HTTP/1.1" 304 -
[2017-11-21 20:11:01,550 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-11-21 20:11:01,598 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-11-21 20:11:02,338 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-11-21 20:11:02,342 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-11-21 20:11:02,351 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-11-21 20:11:24,475 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-11-21 20:11:24,513 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-11-21 20:11:25,208 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-11-21 20:11:25,221 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-11-21 20:11:25,240 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-11-21 20:11:25,307 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-21 20:11:25,308 : DEBUG : sqlalchemy_statments.py : 31 :              get_all() ] [(4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-21 20:11:25,309 : DEBUG : sqlalchemy_statments.py : 50 :           get_max_id() ] (4,)
[2017-11-21 20:11:25,329 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:11:25] "GET /note HTTP/1.1" 200 -
[2017-11-21 20:11:25,360 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:11:25] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-11-21 20:11:25,363 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:11:25] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-11-21 20:11:25,368 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:11:25] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-11-21 20:11:25,372 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:11:25] "GET /static/main.css HTTP/1.1" 304 -
[2017-11-21 20:11:26,658 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-21 20:11:26,658 : DEBUG : sqlalchemy_statments.py : 31 :              get_all() ] [(4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-21 20:11:26,659 : DEBUG : sqlalchemy_statments.py : 50 :           get_max_id() ] (4,)
[2017-11-21 20:11:26,659 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:11:26] "GET /note HTTP/1.1" 200 -
[2017-11-21 20:11:37,459 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-21 20:11:37,459 : DEBUG : sqlalchemy_statments.py : 31 :              get_all() ] [(4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-21 20:11:37,459 : DEBUG : sqlalchemy_statments.py : 50 :           get_max_id() ] (4,)
[2017-11-21 20:11:37,459 : INFO : views.py : 31 :             notes_db() ] post action
[2017-11-21 20:11:37,475 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:11:37] "POST /note HTTP/1.1" 400 -
[2017-11-21 20:12:04,844 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-21 20:12:04,844 : DEBUG : sqlalchemy_statments.py : 31 :              get_all() ] [(4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-21 20:12:04,844 : DEBUG : sqlalchemy_statments.py : 50 :           get_max_id() ] (4,)
[2017-11-21 20:12:04,844 : INFO : views.py : 31 :             notes_db() ] post action
[2017-11-21 20:12:04,844 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:12:04] "POST /note HTTP/1.1" 400 -
[2017-11-21 20:12:14,990 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-21 20:12:14,990 : DEBUG : sqlalchemy_statments.py : 31 :              get_all() ] [(4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-21 20:12:14,990 : DEBUG : sqlalchemy_statments.py : 50 :           get_max_id() ] (4,)
[2017-11-21 20:12:15,021 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:12:15] "GET /note HTTP/1.1" 200 -
[2017-11-21 20:12:24,819 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-21 20:12:24,835 : DEBUG : sqlalchemy_statments.py : 31 :              get_all() ] [(4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-21 20:12:24,835 : DEBUG : sqlalchemy_statments.py : 50 :           get_max_id() ] (4,)
[2017-11-21 20:12:24,835 : INFO : views.py : 31 :             notes_db() ] post action
[2017-11-21 20:12:24,835 : DEBUG : sqlalchemy_statments.py : 50 :           get_max_id() ] (4,)
[2017-11-21 20:12:24,835 : DEBUG : sqlalchemy_statments.py : 79 :               insert() ] Added 1 row to sqlite3, with id 5
[2017-11-21 20:12:24,835 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:12:24] "POST /note HTTP/1.1" 200 -
[2017-11-21 20:12:32,975 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-21 20:12:32,975 : DEBUG : sqlalchemy_statments.py : 31 :              get_all() ] [(5, 'eeeeeeeeeeeee', 'Programming', 'eeeeeeeeeeeeeeee', '2017-11-21 20:12:24.835071'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-21 20:12:32,975 : DEBUG : sqlalchemy_statments.py : 50 :           get_max_id() ] (5,)
[2017-11-21 20:12:32,975 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:12:32] "GET /note HTTP/1.1" 200 -
[2017-11-21 20:12:38,008 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-21 20:12:38,008 : DEBUG : sqlalchemy_statments.py : 31 :              get_all() ] [(5, 'eeeeeeeeeeeee', 'Programming', 'eeeeeeeeeeeeeeee', '2017-11-21 20:12:24.835071'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-21 20:12:38,008 : DEBUG : sqlalchemy_statments.py : 50 :           get_max_id() ] (5,)
[2017-11-21 20:12:38,008 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:12:38] "GET /note HTTP/1.1" 200 -
[2017-11-21 20:15:30,979 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-21 20:15:30,979 : DEBUG : sqlalchemy_statments.py : 31 :              get_all() ] [(5, 'eeeeeeeeeeeee', 'Programming', 'eeeeeeeeeeeeeeee', '2017-11-21 20:12:24.835071'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-21 20:15:30,979 : DEBUG : sqlalchemy_statments.py : 50 :           get_max_id() ] (5,)
[2017-11-21 20:15:30,994 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:15:30] "GET /note HTTP/1.1" 200 -
[2017-11-21 20:15:31,010 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:15:31] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-11-21 20:15:31,026 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:15:31] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-11-21 20:15:31,026 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:15:31] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-11-21 20:15:31,026 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:15:31] "GET /static/main.css HTTP/1.1" 304 -
[2017-11-21 20:15:35,917 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-21 20:15:35,917 : DEBUG : sqlalchemy_statments.py : 31 :              get_all() ] [(5, 'eeeeeeeeeeeee', 'Programming', 'eeeeeeeeeeeeeeee', '2017-11-21 20:12:24.835071'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-21 20:15:35,917 : DEBUG : sqlalchemy_statments.py : 50 :           get_max_id() ] (5,)
[2017-11-21 20:15:35,917 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:15:35] "GET /note HTTP/1.1" 200 -
[2017-11-21 20:15:40,542 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-21 20:15:40,542 : DEBUG : sqlalchemy_statments.py : 31 :              get_all() ] [(5, 'eeeeeeeeeeeee', 'Programming', 'eeeeeeeeeeeeeeee', '2017-11-21 20:12:24.835071'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-21 20:15:40,542 : DEBUG : sqlalchemy_statments.py : 50 :           get_max_id() ] (5,)
[2017-11-21 20:15:40,542 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:15:40] "GET /note HTTP/1.1" 200 -
[2017-11-21 20:15:56,819 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-21 20:15:56,819 : DEBUG : sqlalchemy_statments.py : 31 :              get_all() ] [(5, 'eeeeeeeeeeeee', 'Programming', 'eeeeeeeeeeeeeeee', '2017-11-21 20:12:24.835071'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-21 20:15:56,819 : DEBUG : sqlalchemy_statments.py : 50 :           get_max_id() ] (5,)
[2017-11-21 20:15:56,834 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:15:56] "GET /note HTTP/1.1" 200 -
[2017-11-21 20:16:21,939 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-21 20:16:21,939 : DEBUG : sqlalchemy_statments.py : 31 :              get_all() ] [(5, 'eeeeeeeeeeeee', 'Programming', 'eeeeeeeeeeeeeeee', '2017-11-21 20:12:24.835071'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-21 20:16:21,940 : DEBUG : sqlalchemy_statments.py : 50 :           get_max_id() ] (5,)
[2017-11-21 20:16:21,952 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:16:21] "GET /note HTTP/1.1" 200 -
[2017-11-21 20:16:21,975 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:16:21] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-11-21 20:16:21,977 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:16:21] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-11-21 20:16:21,983 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:16:21] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-11-21 20:16:21,986 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:16:21] "GET /static/main.css HTTP/1.1" 304 -
[2017-11-21 20:16:40,679 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-21 20:16:40,679 : DEBUG : sqlalchemy_statments.py : 31 :              get_all() ] [(5, 'eeeeeeeeeeeee', 'Programming', 'eeeeeeeeeeeeeeee', '2017-11-21 20:12:24.835071'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-21 20:16:40,679 : DEBUG : sqlalchemy_statments.py : 50 :           get_max_id() ] (5,)
[2017-11-21 20:16:40,679 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:16:40] "GET /note HTTP/1.1" 200 -
[2017-11-21 20:17:07,933 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-21 20:17:07,934 : DEBUG : sqlalchemy_statments.py : 31 :              get_all() ] [(5, 'eeeeeeeeeeeee', 'Programming', 'eeeeeeeeeeeeeeee', '2017-11-21 20:12:24.835071'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-21 20:17:07,935 : DEBUG : sqlalchemy_statments.py : 50 :           get_max_id() ] (5,)
[2017-11-21 20:17:07,945 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:17:07] "GET /note HTTP/1.1" 200 -
[2017-11-21 20:17:07,969 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:17:07] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-11-21 20:17:07,972 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:17:07] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-11-21 20:17:07,976 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:17:07] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-11-21 20:17:07,980 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:17:07] "GET /static/main.css HTTP/1.1" 304 -
[2017-11-21 20:17:35,519 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-21 20:17:35,519 : DEBUG : sqlalchemy_statments.py : 31 :              get_all() ] [(5, 'eeeeeeeeeeeee', 'Programming', 'eeeeeeeeeeeeeeee', '2017-11-21 20:12:24.835071'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-21 20:17:35,519 : DEBUG : sqlalchemy_statments.py : 50 :           get_max_id() ] (5,)
[2017-11-21 20:17:35,535 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:17:35] "GET /note HTTP/1.1" 200 -
[2017-11-21 20:17:35,550 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:17:35] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-11-21 20:17:35,550 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:17:35] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-11-21 20:17:35,550 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:17:35] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-11-21 20:17:35,566 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:17:35] "GET /static/main.css HTTP/1.1" 304 -
[2017-11-21 20:18:08,084 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-21 20:18:08,084 : DEBUG : sqlalchemy_statments.py : 31 :              get_all() ] [(5, 'eeeeeeeeeeeee', 'Programming', 'eeeeeeeeeeeeeeee', '2017-11-21 20:12:24.835071'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-21 20:18:08,084 : DEBUG : sqlalchemy_statments.py : 50 :           get_max_id() ] (5,)
[2017-11-21 20:18:08,100 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:18:08] "GET /note HTTP/1.1" 200 -
[2017-11-21 20:18:08,116 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:18:08] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-11-21 20:18:08,116 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:18:08] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-11-21 20:18:08,116 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:18:08] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-11-21 20:18:08,116 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:18:08] "GET /static/main.css HTTP/1.1" 304 -
[2017-11-21 20:18:18,398 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-21 20:18:18,399 : DEBUG : sqlalchemy_statments.py : 31 :              get_all() ] [(5, 'eeeeeeeeeeeee', 'Programming', 'eeeeeeeeeeeeeeee', '2017-11-21 20:12:24.835071'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-21 20:18:18,400 : DEBUG : sqlalchemy_statments.py : 50 :           get_max_id() ] (5,)
[2017-11-21 20:18:18,407 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:18:18] "GET /note HTTP/1.1" 200 -
[2017-11-21 20:18:18,425 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:18:18] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-11-21 20:18:18,428 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:18:18] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-11-21 20:18:18,434 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:18:18] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-11-21 20:18:18,437 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:18:18] "GET /static/main.css HTTP/1.1" 304 -
[2017-11-21 20:20:00,210 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-21 20:20:00,210 : DEBUG : sqlalchemy_statments.py : 31 :              get_all() ] [(5, 'eeeeeeeeeeeee', 'Programming', 'eeeeeeeeeeeeeeee', '2017-11-21 20:12:24.835071'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-21 20:20:00,210 : DEBUG : sqlalchemy_statments.py : 50 :           get_max_id() ] (5,)
[2017-11-21 20:20:00,226 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:20:00] "GET /note HTTP/1.1" 200 -
[2017-11-21 20:20:37,382 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-11-21 20:20:37,417 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-11-21 20:20:38,093 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-11-21 20:20:38,093 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-11-21 20:20:38,093 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-11-21 20:20:49,849 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-11-21 20:20:49,885 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-11-21 20:20:50,557 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-11-21 20:20:50,560 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-11-21 20:20:50,569 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-11-21 20:20:52,639 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-11-21 20:20:52,729 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-11-21 20:20:53,312 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-11-21 20:20:53,315 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-11-21 20:20:53,322 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-11-21 20:21:01,703 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-11-21 20:21:01,735 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-11-21 20:21:02,415 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-11-21 20:21:02,418 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-11-21 20:21:02,425 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-11-21 20:21:04,485 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-11-21 20:21:04,567 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-11-21 20:21:05,109 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-11-21 20:21:05,125 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-11-21 20:21:05,125 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-11-21 20:21:12,055 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-21 20:21:12,055 : DEBUG : sqlalchemy_statments.py : 31 :              get_all() ] [(5, 'eeeeeeeeeeeee', 'Programming', 'eeeeeeeeeeeeeeee', '2017-11-21 20:12:24.835071'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-21 20:21:12,055 : DEBUG : sqlalchemy_statments.py : 50 :           get_max_id() ] (5,)
[2017-11-21 20:21:12,055 : INFO : views.py : 31 :             notes_db() ] post action
[2017-11-21 20:21:12,055 : DEBUG : sqlalchemy_statments.py : 50 :           get_max_id() ] (5,)
[2017-11-21 20:21:12,071 : DEBUG : sqlalchemy_statments.py : 79 :               insert() ] Added 1 row to sqlite3, with id 6
[2017-11-21 20:21:12,086 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:21:12] "POST /note HTTP/1.1" 200 -
[2017-11-21 20:21:14,604 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-21 20:21:14,604 : DEBUG : sqlalchemy_statments.py : 31 :              get_all() ] [(6, 'wwwwwwwwwwwwww', 'Python', 'wwwwwwwwwwwwwwwwww', '2017-11-21 20:21:12.055481'), (5, 'eeeeeeeeeeeee', 'Programming', 'eeeeeeeeeeeeeeee', '2017-11-21 20:12:24.835071'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-21 20:21:14,620 : DEBUG : sqlalchemy_statments.py : 50 :           get_max_id() ] (6,)
[2017-11-21 20:21:14,620 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:21:14] "GET /note HTTP/1.1" 200 -
[2017-11-21 20:21:26,433 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-21 20:21:26,433 : DEBUG : sqlalchemy_statments.py : 31 :              get_all() ] [(6, 'wwwwwwwwwwwwww', 'Python', 'wwwwwwwwwwwwwwwwww', '2017-11-21 20:21:12.055481'), (5, 'eeeeeeeeeeeee', 'Programming', 'eeeeeeeeeeeeeeee', '2017-11-21 20:12:24.835071'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-21 20:21:26,433 : DEBUG : sqlalchemy_statments.py : 50 :           get_max_id() ] (6,)
[2017-11-21 20:21:26,433 : INFO : views.py : 31 :             notes_db() ] post action
[2017-11-21 20:21:26,433 : DEBUG : sqlalchemy_statments.py : 50 :           get_max_id() ] (6,)
[2017-11-21 20:21:26,433 : DEBUG : sqlalchemy_statments.py : 79 :               insert() ] Added 1 row to sqlite3, with id 7
[2017-11-21 20:21:26,433 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:21:26] "POST /note HTTP/1.1" 200 -
[2017-11-21 20:21:28,123 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-21 20:21:28,139 : DEBUG : sqlalchemy_statments.py : 31 :              get_all() ] [(7, 'yyyyyyyyyyy', 'Csharp', 'yyyyyyyyyyyyyyyy', '2017-11-21 20:21:26.433949'), (6, 'wwwwwwwwwwwwww', 'Python', 'wwwwwwwwwwwwwwwwww', '2017-11-21 20:21:12.055481'), (5, 'eeeeeeeeeeeee', 'Programming', 'eeeeeeeeeeeeeeee', '2017-11-21 20:12:24.835071'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-21 20:21:28,139 : DEBUG : sqlalchemy_statments.py : 50 :           get_max_id() ] (7,)
[2017-11-21 20:21:28,139 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:21:28] "GET /note HTTP/1.1" 200 -
[2017-11-21 20:21:32,280 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-21 20:21:32,295 : DEBUG : sqlalchemy_statments.py : 31 :              get_all() ] [(7, 'yyyyyyyyyyy', 'Csharp', 'yyyyyyyyyyyyyyyy', '2017-11-21 20:21:26.433949'), (6, 'wwwwwwwwwwwwww', 'Python', 'wwwwwwwwwwwwwwwwww', '2017-11-21 20:21:12.055481'), (5, 'eeeeeeeeeeeee', 'Programming', 'eeeeeeeeeeeeeeee', '2017-11-21 20:12:24.835071'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-21 20:21:32,295 : DEBUG : sqlalchemy_statments.py : 50 :           get_max_id() ] (7,)
[2017-11-21 20:21:32,295 : INFO : views.py : 31 :             notes_db() ] post action
[2017-11-21 20:21:32,295 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:21:32] "POST /note HTTP/1.1" 200 -
[2017-11-21 20:21:37,312 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-21 20:21:37,312 : DEBUG : sqlalchemy_statments.py : 31 :              get_all() ] [(7, 'yyyyyyyyyyy', 'Csharp', 'yyyyyyyyyyyyyyyy', '2017-11-21 20:21:26.433949'), (6, 'wwwwwwwwwwwwww', 'Python', 'wwwwwwwwwwwwwwwwww', '2017-11-21 20:21:12.055481'), (5, 'eeeeeeeeeeeee', 'Programming', 'eeeeeeeeeeeeeeee', '2017-11-21 20:12:24.835071'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-21 20:21:37,312 : DEBUG : sqlalchemy_statments.py : 50 :           get_max_id() ] (7,)
[2017-11-21 20:21:37,312 : INFO : views.py : 31 :             notes_db() ] post action
[2017-11-21 20:21:37,327 : DEBUG : sqlalchemy_statments.py : 99 :               delete() ] Delete 1 row, id 7.
[2017-11-21 20:21:37,327 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:21:37] "POST /note HTTP/1.1" 200 -
[2017-11-21 20:21:40,252 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-21 20:21:40,252 : DEBUG : sqlalchemy_statments.py : 31 :              get_all() ] [(6, 'wwwwwwwwwwwwww', 'Python', 'wwwwwwwwwwwwwwwwww', '2017-11-21 20:21:12.055481'), (5, 'eeeeeeeeeeeee', 'Programming', 'eeeeeeeeeeeeeeee', '2017-11-21 20:12:24.835071'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-21 20:21:40,252 : DEBUG : sqlalchemy_statments.py : 50 :           get_max_id() ] (6,)
[2017-11-21 20:21:40,252 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:21:40] "GET /note HTTP/1.1" 200 -
[2017-11-21 20:21:45,659 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-21 20:21:45,659 : DEBUG : sqlalchemy_statments.py : 31 :              get_all() ] [(6, 'wwwwwwwwwwwwww', 'Python', 'wwwwwwwwwwwwwwwwww', '2017-11-21 20:21:12.055481'), (5, 'eeeeeeeeeeeee', 'Programming', 'eeeeeeeeeeeeeeee', '2017-11-21 20:12:24.835071'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-21 20:21:45,659 : DEBUG : sqlalchemy_statments.py : 50 :           get_max_id() ] (6,)
[2017-11-21 20:21:45,659 : INFO : views.py : 31 :             notes_db() ] post action
[2017-11-21 20:21:45,659 : DEBUG : sqlalchemy_statments.py : 99 :               delete() ] Delete 1 row, id 6.
[2017-11-21 20:21:45,659 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:21:45] "POST /note HTTP/1.1" 200 -
[2017-11-21 20:21:47,223 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-21 20:21:47,223 : DEBUG : sqlalchemy_statments.py : 31 :              get_all() ] [(5, 'eeeeeeeeeeeee', 'Programming', 'eeeeeeeeeeeeeeee', '2017-11-21 20:12:24.835071'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-21 20:21:47,223 : DEBUG : sqlalchemy_statments.py : 50 :           get_max_id() ] (5,)
[2017-11-21 20:21:47,223 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:21:47] "GET /note HTTP/1.1" 200 -
[2017-11-21 20:21:52,146 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-21 20:21:52,146 : DEBUG : sqlalchemy_statments.py : 31 :              get_all() ] [(5, 'eeeeeeeeeeeee', 'Programming', 'eeeeeeeeeeeeeeee', '2017-11-21 20:12:24.835071'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-21 20:21:52,146 : DEBUG : sqlalchemy_statments.py : 50 :           get_max_id() ] (5,)
[2017-11-21 20:21:52,146 : INFO : views.py : 31 :             notes_db() ] post action
[2017-11-21 20:21:52,146 : DEBUG : sqlalchemy_statments.py : 99 :               delete() ] Delete 1 row, id 5.
[2017-11-21 20:21:52,146 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:21:52] "POST /note HTTP/1.1" 200 -
[2017-11-21 20:21:53,398 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-21 20:21:53,398 : DEBUG : sqlalchemy_statments.py : 31 :              get_all() ] [(4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-21 20:21:53,398 : DEBUG : sqlalchemy_statments.py : 50 :           get_max_id() ] (4,)
[2017-11-21 20:21:53,398 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:21:53] "GET /note HTTP/1.1" 200 -
[2017-11-21 20:22:09,681 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-21 20:22:09,681 : DEBUG : sqlalchemy_statments.py : 31 :              get_all() ] [(4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-21 20:22:09,681 : DEBUG : sqlalchemy_statments.py : 50 :           get_max_id() ] (4,)
[2017-11-21 20:22:09,681 : INFO : views.py : 31 :             notes_db() ] post action
[2017-11-21 20:22:09,681 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:22:09] "POST /note HTTP/1.1" 200 -
[2017-11-21 20:22:33,031 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-11-21 20:22:33,074 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-11-21 20:22:33,780 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-11-21 20:22:33,784 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-11-21 20:22:33,791 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-11-21 20:22:34,996 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-21 20:22:34,997 : DEBUG : sqlalchemy_statments.py : 31 :              get_all() ] [(4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-21 20:22:34,998 : DEBUG : sqlalchemy_statments.py : 50 :           get_max_id() ] (4,)
[2017-11-21 20:22:34,998 : INFO : views.py : 31 :             notes_db() ] post action
[2017-11-21 20:22:35,015 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:22:35] "POST /note HTTP/1.1" 200 -
[2017-11-21 20:22:37,704 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-21 20:22:37,704 : DEBUG : sqlalchemy_statments.py : 31 :              get_all() ] [(4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-21 20:22:37,704 : DEBUG : sqlalchemy_statments.py : 50 :           get_max_id() ] (4,)
[2017-11-21 20:22:37,704 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:22:37] "GET /note HTTP/1.1" 200 -
[2017-11-21 20:23:00,076 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-11-21 20:23:00,113 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-11-21 20:23:00,807 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-11-21 20:23:00,809 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-11-21 20:23:00,817 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-11-21 20:23:02,202 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-21 20:23:02,203 : DEBUG : sqlalchemy_statments.py : 31 :              get_all() ] [(4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-21 20:23:02,204 : DEBUG : sqlalchemy_statments.py : 50 :           get_max_id() ] (4,)
[2017-11-21 20:23:02,204 : INFO : views.py : 31 :             notes_db() ] post action
[2017-11-21 20:23:02,221 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:23:02] "POST /note HTTP/1.1" 200 -
[2017-11-21 20:23:13,220 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-21 20:23:13,220 : DEBUG : sqlalchemy_statments.py : 31 :              get_all() ] [(4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-21 20:23:13,220 : DEBUG : sqlalchemy_statments.py : 50 :           get_max_id() ] (4,)
[2017-11-21 20:23:13,220 : INFO : views.py : 31 :             notes_db() ] post action
[2017-11-21 20:23:13,220 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:23:13] "POST /note HTTP/1.1" 200 -
[2017-11-21 20:23:19,783 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-21 20:23:19,783 : DEBUG : sqlalchemy_statments.py : 31 :              get_all() ] [(4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-21 20:23:19,783 : DEBUG : sqlalchemy_statments.py : 50 :           get_max_id() ] (4,)
[2017-11-21 20:23:19,783 : INFO : views.py : 31 :             notes_db() ] post action
[2017-11-21 20:23:19,783 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:23:19] "POST /note HTTP/1.1" 200 -
[2017-11-21 20:23:30,956 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-21 20:23:30,956 : DEBUG : sqlalchemy_statments.py : 31 :              get_all() ] [(4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-21 20:23:30,956 : DEBUG : sqlalchemy_statments.py : 50 :           get_max_id() ] (4,)
[2017-11-21 20:23:30,956 : INFO : views.py : 31 :             notes_db() ] post action
[2017-11-21 20:23:30,956 : DEBUG : sqlalchemy_statments.py : 50 :           get_max_id() ] (4,)
[2017-11-21 20:23:30,972 : DEBUG : sqlalchemy_statments.py : 79 :               insert() ] Added 1 row to sqlite3, with id 5
[2017-11-21 20:23:30,972 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:23:30] "POST /note HTTP/1.1" 200 -
[2017-11-21 20:23:33,788 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-21 20:23:33,788 : DEBUG : sqlalchemy_statments.py : 31 :              get_all() ] [(5, 'wwwwww', 'Programming', 'wwwwwww', '2017-11-21 20:23:30.956522'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-21 20:23:33,788 : DEBUG : sqlalchemy_statments.py : 50 :           get_max_id() ] (5,)
[2017-11-21 20:23:33,788 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:23:33] "GET /note HTTP/1.1" 200 -
[2017-11-21 20:23:37,854 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-11-21 20:23:37,901 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-11-21 20:23:38,435 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-11-21 20:23:38,450 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-11-21 20:23:38,450 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-11-21 20:23:50,134 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-21 20:23:50,134 : DEBUG : sqlalchemy_statments.py : 31 :              get_all() ] [(5, 'wwwwww', 'Programming', 'wwwwwww', '2017-11-21 20:23:30.956522'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-21 20:23:50,134 : DEBUG : sqlalchemy_statments.py : 50 :           get_max_id() ] (5,)
[2017-11-21 20:23:50,150 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:23:50] "GET /note HTTP/1.1" 200 -
[2017-11-21 20:23:50,165 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:23:50] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-11-21 20:23:50,165 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:23:50] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-11-21 20:23:50,181 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:23:50] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-11-21 20:23:50,181 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:23:50] "GET /static/main.css HTTP/1.1" 304 -
[2017-11-21 20:23:59,979 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-21 20:23:59,979 : DEBUG : sqlalchemy_statments.py : 31 :              get_all() ] [(5, 'wwwwww', 'Programming', 'wwwwwww', '2017-11-21 20:23:30.956522'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-21 20:23:59,979 : DEBUG : sqlalchemy_statments.py : 50 :           get_max_id() ] (5,)
[2017-11-21 20:23:59,979 : INFO : views.py : 31 :             notes_db() ] post action
[2017-11-21 20:23:59,979 : DEBUG : sqlalchemy_statments.py : 50 :           get_max_id() ] (5,)
[2017-11-21 20:23:59,994 : DEBUG : sqlalchemy_statments.py : 79 :               insert() ] Added 1 row to sqlite3, with id 6
[2017-11-21 20:23:59,994 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:23:59] "POST /note HTTP/1.1" 200 -
[2017-11-21 20:24:01,623 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-21 20:24:01,623 : DEBUG : sqlalchemy_statments.py : 31 :              get_all() ] [(6, 'wwwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:23:59.979252'), (5, 'wwwwww', 'Programming', 'wwwwwww', '2017-11-21 20:23:30.956522'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-21 20:24:01,623 : DEBUG : sqlalchemy_statments.py : 50 :           get_max_id() ] (6,)
[2017-11-21 20:24:01,623 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:24:01] "GET /note HTTP/1.1" 200 -
[2017-11-21 20:24:04,920 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-21 20:24:04,920 : DEBUG : sqlalchemy_statments.py : 31 :              get_all() ] [(6, 'wwwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:23:59.979252'), (5, 'wwwwww', 'Programming', 'wwwwwww', '2017-11-21 20:23:30.956522'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-21 20:24:04,920 : DEBUG : sqlalchemy_statments.py : 50 :           get_max_id() ] (6,)
[2017-11-21 20:24:04,920 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:24:04] "GET /note HTTP/1.1" 200 -
[2017-11-21 20:26:21,124 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-11-21 20:26:21,175 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-11-21 20:26:21,763 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-11-21 20:26:21,766 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-11-21 20:26:21,774 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-11-21 20:28:18,808 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-11-21 20:28:18,843 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-11-21 20:28:19,407 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-11-21 20:28:19,409 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-11-21 20:28:19,416 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-11-21 20:28:55,749 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:28:55] "GET / HTTP/1.1" 200 -
[2017-11-21 20:28:58,499 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-21 20:28:58,499 : DEBUG : sqlalchemy_statments.py : 31 :              get_all() ] [(6, 'wwwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:23:59.979252'), (5, 'wwwwww', 'Programming', 'wwwwwww', '2017-11-21 20:23:30.956522'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-21 20:28:58,499 : DEBUG : sqlalchemy_statments.py : 50 :           get_max_id() ] (6,)
[2017-11-21 20:28:58,515 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:28:58] "GET /note HTTP/1.1" 200 -
[2017-11-21 20:29:11,469 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-21 20:29:11,469 : DEBUG : sqlalchemy_statments.py : 31 :              get_all() ] [(6, 'wwwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:23:59.979252'), (5, 'wwwwww', 'Programming', 'wwwwwww', '2017-11-21 20:23:30.956522'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-21 20:29:11,469 : DEBUG : sqlalchemy_statments.py : 50 :           get_max_id() ] (6,)
[2017-11-21 20:29:11,469 : INFO : views.py : 31 :             notes_db() ] post action
[2017-11-21 20:29:11,469 : DEBUG : sqlalchemy_statments.py : 50 :           get_max_id() ] (6,)
[2017-11-21 20:29:11,469 : DEBUG : sqlalchemy_statments.py : 79 :               insert() ] Added 1 row to sqlite3, with id 7
[2017-11-21 20:29:11,469 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:29:11] "POST /note HTTP/1.1" 200 -
[2017-11-21 20:29:13,756 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-21 20:29:13,772 : DEBUG : sqlalchemy_statments.py : 31 :              get_all() ] [(7, 'wwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwww', '2017-11-21 20:29:11.469973'), (6, 'wwwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:23:59.979252'), (5, 'wwwwww', 'Programming', 'wwwwwww', '2017-11-21 20:23:30.956522'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-21 20:29:13,772 : DEBUG : sqlalchemy_statments.py : 50 :           get_max_id() ] (7,)
[2017-11-21 20:29:13,772 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:29:13] "GET /note HTTP/1.1" 200 -
[2017-11-21 20:30:35,425 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-11-21 20:30:35,456 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-11-21 20:30:36,153 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-11-21 20:30:36,156 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-11-21 20:30:36,163 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-11-21 20:30:37,914 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-21 20:30:37,914 : DEBUG : sqlalchemy_statments.py : 31 :              get_all() ] [(7, 'wwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwww', '2017-11-21 20:29:11.469973'), (6, 'wwwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:23:59.979252'), (5, 'wwwwww', 'Programming', 'wwwwwww', '2017-11-21 20:23:30.956522'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-21 20:30:37,914 : DEBUG : sqlalchemy_statments.py : 50 :           get_max_id() ] (7,)
[2017-11-21 20:30:37,929 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:30:37] "GET /note HTTP/1.1" 200 -
[2017-11-21 20:30:37,945 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:30:37] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-11-21 20:30:37,945 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:30:37] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-11-21 20:30:37,961 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:30:37] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-11-21 20:30:37,961 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:30:37] "GET /static/main.css HTTP/1.1" 304 -
[2017-11-21 20:30:51,712 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-21 20:30:51,712 : DEBUG : sqlalchemy_statments.py : 31 :              get_all() ] [(7, 'wwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwww', '2017-11-21 20:29:11.469973'), (6, 'wwwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:23:59.979252'), (5, 'wwwwww', 'Programming', 'wwwwwww', '2017-11-21 20:23:30.956522'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-21 20:30:51,712 : DEBUG : sqlalchemy_statments.py : 50 :           get_max_id() ] (7,)
[2017-11-21 20:30:51,712 : INFO : views.py : 31 :             notes_db() ] post action
[2017-11-21 20:30:51,712 : DEBUG : sqlalchemy_statments.py : 50 :           get_max_id() ] (7,)
[2017-11-21 20:30:51,728 : DEBUG : sqlalchemy_statments.py : 79 :               insert() ] Added 1 row to sqlite3, with id 8
[2017-11-21 20:30:51,728 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:30:51] "POST /note HTTP/1.1" 200 -
[2017-11-21 20:30:53,228 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-21 20:30:53,243 : DEBUG : sqlalchemy_statments.py : 31 :              get_all() ] [(8, 'wwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:30:51.712545'), (7, 'wwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwww', '2017-11-21 20:29:11.469973'), (6, 'wwwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:23:59.979252'), (5, 'wwwwww', 'Programming', 'wwwwwww', '2017-11-21 20:23:30.956522'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-21 20:30:53,243 : DEBUG : sqlalchemy_statments.py : 50 :           get_max_id() ] (8,)
[2017-11-21 20:30:53,243 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:30:53] "GET /note HTTP/1.1" 200 -
[2017-11-21 20:30:59,760 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-21 20:30:59,760 : DEBUG : sqlalchemy_statments.py : 31 :              get_all() ] [(8, 'wwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:30:51.712545'), (7, 'wwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwww', '2017-11-21 20:29:11.469973'), (6, 'wwwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:23:59.979252'), (5, 'wwwwww', 'Programming', 'wwwwwww', '2017-11-21 20:23:30.956522'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-21 20:30:59,760 : DEBUG : sqlalchemy_statments.py : 50 :           get_max_id() ] (8,)
[2017-11-21 20:30:59,760 : INFO : views.py : 31 :             notes_db() ] post action
[2017-11-21 20:30:59,760 : DEBUG : sqlalchemy_statments.py : 50 :           get_max_id() ] (8,)
[2017-11-21 20:30:59,760 : DEBUG : sqlalchemy_statments.py : 79 :               insert() ] Added 1 row to sqlite3, with id 9
[2017-11-21 20:30:59,775 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:30:59] "POST /note HTTP/1.1" 200 -
[2017-11-21 20:31:08,932 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-11-21 20:31:08,963 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-11-21 20:31:09,636 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-11-21 20:31:09,641 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-11-21 20:31:09,650 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-11-21 20:31:09,997 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-21 20:31:09,998 : DEBUG : sqlalchemy_statments.py : 31 :              get_all() ] [(9, 'wwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwwwwwww', '2017-11-21 20:30:59.760297'), (8, 'wwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:30:51.712545'), (7, 'wwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwww', '2017-11-21 20:29:11.469973'), (6, 'wwwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:23:59.979252'), (5, 'wwwwww', 'Programming', 'wwwwwww', '2017-11-21 20:23:30.956522'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-21 20:31:09,998 : DEBUG : sqlalchemy_statments.py : 50 :           get_max_id() ] (9,)
[2017-11-21 20:31:10,020 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:31:10] "GET /note HTTP/1.1" 200 -
[2017-11-21 20:31:16,880 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-21 20:31:16,880 : DEBUG : sqlalchemy_statments.py : 31 :              get_all() ] [(9, 'wwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwwwwwww', '2017-11-21 20:30:59.760297'), (8, 'wwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:30:51.712545'), (7, 'wwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwww', '2017-11-21 20:29:11.469973'), (6, 'wwwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:23:59.979252'), (5, 'wwwwww', 'Programming', 'wwwwwww', '2017-11-21 20:23:30.956522'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-21 20:31:16,880 : DEBUG : sqlalchemy_statments.py : 50 :           get_max_id() ] (9,)
[2017-11-21 20:31:16,880 : INFO : views.py : 31 :             notes_db() ] post action
[2017-11-21 20:31:16,880 : DEBUG : sqlalchemy_statments.py : 50 :           get_max_id() ] (9,)
[2017-11-21 20:31:16,896 : DEBUG : sqlalchemy_statments.py : 79 :               insert() ] Added 1 row to sqlite3, with id 10
[2017-11-21 20:31:16,896 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:31:16] "POST /note HTTP/1.1" 200 -
[2017-11-21 20:31:20,305 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-21 20:31:20,305 : DEBUG : sqlalchemy_statments.py : 31 :              get_all() ] [(10, 'wwwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwwwwwwww', '2017-11-21 20:31:16.880625'), (9, 'wwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwwwwwww', '2017-11-21 20:30:59.760297'), (8, 'wwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:30:51.712545'), (7, 'wwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwww', '2017-11-21 20:29:11.469973'), (6, 'wwwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:23:59.979252'), (5, 'wwwwww', 'Programming', 'wwwwwww', '2017-11-21 20:23:30.956522'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-21 20:31:20,305 : DEBUG : sqlalchemy_statments.py : 50 :           get_max_id() ] (10,)
[2017-11-21 20:31:20,320 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:31:20] "GET /note HTTP/1.1" 200 -
[2017-11-21 20:31:24,389 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-11-21 20:31:24,452 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-11-21 20:31:25,038 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-11-21 20:31:25,041 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-11-21 20:31:25,048 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-11-21 20:32:59,998 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:32:59] "GET /py HTTP/1.1" 200 -
[2017-11-21 20:33:00,029 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:33:00] "GET /static/img/import_cls/app_form_mod.jpg HTTP/1.1" 200 -
[2017-11-21 20:33:00,029 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:33:00] "GET /static/img/import_cls/add_init.jpg HTTP/1.1" 200 -
[2017-11-21 20:37:31,966 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:37:31] "GET /py HTTP/1.1" 200 -
[2017-11-21 20:37:31,982 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:37:31] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-11-21 20:37:31,982 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:37:31] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-11-21 20:37:31,998 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:37:31] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-11-21 20:37:31,998 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:37:31] "GET /static/main.css HTTP/1.1" 304 -
[2017-11-21 20:37:32,029 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:37:32] "GET /static/img/import_cls/app_form_mod.jpg HTTP/1.1" 304 -
[2017-11-21 20:37:32,029 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:37:32] "GET /static/img/import_cls/add_init.jpg HTTP/1.1" 304 -
[2017-11-21 20:37:40,014 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-21 20:37:40,014 : DEBUG : sqlalchemy_statments.py : 31 :              get_all() ] [(10, 'wwwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwwwwwwww', '2017-11-21 20:31:16.880625'), (9, 'wwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwwwwwww', '2017-11-21 20:30:59.760297'), (8, 'wwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:30:51.712545'), (7, 'wwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwww', '2017-11-21 20:29:11.469973'), (6, 'wwwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:23:59.979252'), (5, 'wwwwww', 'Programming', 'wwwwwww', '2017-11-21 20:23:30.956522'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-21 20:37:40,030 : DEBUG : sqlalchemy_statments.py : 50 :           get_max_id() ] (10,)
[2017-11-21 20:37:40,077 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:37:40] "GET /note HTTP/1.1" 200 -
[2017-11-21 20:37:42,874 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-21 20:37:42,874 : DEBUG : sqlalchemy_statments.py : 31 :              get_all() ] [(10, 'wwwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwwwwwwww', '2017-11-21 20:31:16.880625'), (9, 'wwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwwwwwww', '2017-11-21 20:30:59.760297'), (8, 'wwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:30:51.712545'), (7, 'wwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwww', '2017-11-21 20:29:11.469973'), (6, 'wwwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:23:59.979252'), (5, 'wwwwww', 'Programming', 'wwwwwww', '2017-11-21 20:23:30.956522'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-21 20:37:42,874 : DEBUG : sqlalchemy_statments.py : 50 :           get_max_id() ] (10,)
[2017-11-21 20:37:42,874 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:37:42] "GET /note HTTP/1.1" 200 -
[2017-11-21 20:37:42,905 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:37:42] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-11-21 20:37:42,905 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:37:42] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-11-21 20:37:42,905 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:37:42] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-11-21 20:37:42,905 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:37:42] "GET /static/main.css HTTP/1.1" 304 -
[2017-11-21 20:38:45,968 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-21 20:38:45,968 : DEBUG : sqlalchemy_statments.py : 31 :              get_all() ] [(10, 'wwwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwwwwwwww', '2017-11-21 20:31:16.880625'), (9, 'wwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwwwwwww', '2017-11-21 20:30:59.760297'), (8, 'wwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:30:51.712545'), (7, 'wwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwww', '2017-11-21 20:29:11.469973'), (6, 'wwwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:23:59.979252'), (5, 'wwwwww', 'Programming', 'wwwwwww', '2017-11-21 20:23:30.956522'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-21 20:38:45,968 : DEBUG : sqlalchemy_statments.py : 50 :           get_max_id() ] (10,)
[2017-11-21 20:38:45,984 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:38:45] "GET /note HTTP/1.1" 200 -
[2017-11-21 20:38:45,999 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:38:45] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-11-21 20:38:45,999 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:38:45] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-11-21 20:38:45,999 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:38:45] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-11-21 20:38:46,015 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:38:46] "GET /static/main.css HTTP/1.1" 304 -
[2017-11-21 20:38:59,637 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-21 20:38:59,637 : DEBUG : sqlalchemy_statments.py : 31 :              get_all() ] [(10, 'wwwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwwwwwwww', '2017-11-21 20:31:16.880625'), (9, 'wwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwwwwwww', '2017-11-21 20:30:59.760297'), (8, 'wwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:30:51.712545'), (7, 'wwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwww', '2017-11-21 20:29:11.469973'), (6, 'wwwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:23:59.979252'), (5, 'wwwwww', 'Programming', 'wwwwwww', '2017-11-21 20:23:30.956522'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-21 20:38:59,637 : DEBUG : sqlalchemy_statments.py : 50 :           get_max_id() ] (10,)
[2017-11-21 20:38:59,637 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:38:59] "GET /note HTTP/1.1" 200 -
[2017-11-21 20:38:59,653 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:38:59] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-11-21 20:38:59,669 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:38:59] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-11-21 20:38:59,669 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:38:59] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-11-21 20:38:59,669 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:38:59] "GET /static/main.css HTTP/1.1" 304 -
[2017-11-21 20:39:16,303 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-21 20:39:16,304 : DEBUG : sqlalchemy_statments.py : 31 :              get_all() ] [(10, 'wwwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwwwwwwww', '2017-11-21 20:31:16.880625'), (9, 'wwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwwwwwww', '2017-11-21 20:30:59.760297'), (8, 'wwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:30:51.712545'), (7, 'wwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwww', '2017-11-21 20:29:11.469973'), (6, 'wwwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:23:59.979252'), (5, 'wwwwww', 'Programming', 'wwwwwww', '2017-11-21 20:23:30.956522'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-21 20:39:16,305 : DEBUG : sqlalchemy_statments.py : 50 :           get_max_id() ] (10,)
[2017-11-21 20:39:16,314 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:39:16] "GET /note HTTP/1.1" 200 -
[2017-11-21 20:39:16,333 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:39:16] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-11-21 20:39:16,335 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:39:16] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-11-21 20:39:16,340 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:39:16] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-11-21 20:39:16,343 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:39:16] "GET /static/main.css HTTP/1.1" 304 -
[2017-11-21 20:39:37,858 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-21 20:39:37,858 : DEBUG : sqlalchemy_statments.py : 31 :              get_all() ] [(10, 'wwwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwwwwwwww', '2017-11-21 20:31:16.880625'), (9, 'wwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwwwwwww', '2017-11-21 20:30:59.760297'), (8, 'wwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:30:51.712545'), (7, 'wwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwww', '2017-11-21 20:29:11.469973'), (6, 'wwwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:23:59.979252'), (5, 'wwwwww', 'Programming', 'wwwwwww', '2017-11-21 20:23:30.956522'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-21 20:39:37,858 : DEBUG : sqlalchemy_statments.py : 50 :           get_max_id() ] (10,)
[2017-11-21 20:39:37,874 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:39:37] "GET /note HTTP/1.1" 200 -
[2017-11-21 20:39:37,890 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:39:37] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-11-21 20:39:37,890 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:39:37] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-11-21 20:39:37,905 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:39:37] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-11-21 20:39:37,905 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:39:37] "GET /static/main.css HTTP/1.1" 304 -
[2017-11-21 20:39:52,220 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-21 20:39:52,220 : DEBUG : sqlalchemy_statments.py : 31 :              get_all() ] [(10, 'wwwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwwwwwwww', '2017-11-21 20:31:16.880625'), (9, 'wwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwwwwwww', '2017-11-21 20:30:59.760297'), (8, 'wwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:30:51.712545'), (7, 'wwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwww', '2017-11-21 20:29:11.469973'), (6, 'wwwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:23:59.979252'), (5, 'wwwwww', 'Programming', 'wwwwwww', '2017-11-21 20:23:30.956522'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-21 20:39:52,220 : DEBUG : sqlalchemy_statments.py : 50 :           get_max_id() ] (10,)
[2017-11-21 20:39:52,236 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:39:52] "GET /note HTTP/1.1" 200 -
[2017-11-21 20:39:52,252 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:39:52] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-11-21 20:39:52,252 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:39:52] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-11-21 20:39:52,252 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:39:52] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-11-21 20:39:52,252 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:39:52] "GET /static/main.css HTTP/1.1" 304 -
[2017-11-21 20:40:08,603 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-21 20:40:08,603 : DEBUG : sqlalchemy_statments.py : 31 :              get_all() ] [(10, 'wwwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwwwwwwww', '2017-11-21 20:31:16.880625'), (9, 'wwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwwwwwww', '2017-11-21 20:30:59.760297'), (8, 'wwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:30:51.712545'), (7, 'wwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwww', '2017-11-21 20:29:11.469973'), (6, 'wwwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:23:59.979252'), (5, 'wwwwww', 'Programming', 'wwwwwww', '2017-11-21 20:23:30.956522'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-21 20:40:08,603 : DEBUG : sqlalchemy_statments.py : 50 :           get_max_id() ] (10,)
[2017-11-21 20:40:08,619 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:40:08] "GET /note HTTP/1.1" 200 -
[2017-11-21 20:40:08,635 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:40:08] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-11-21 20:40:08,635 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:40:08] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-11-21 20:40:08,635 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:40:08] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-11-21 20:40:08,650 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:40:08] "GET /static/main.css HTTP/1.1" 304 -
[2017-11-21 20:40:17,078 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-21 20:40:17,078 : DEBUG : sqlalchemy_statments.py : 31 :              get_all() ] [(10, 'wwwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwwwwwwww', '2017-11-21 20:31:16.880625'), (9, 'wwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwwwwwww', '2017-11-21 20:30:59.760297'), (8, 'wwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:30:51.712545'), (7, 'wwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwww', '2017-11-21 20:29:11.469973'), (6, 'wwwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:23:59.979252'), (5, 'wwwwww', 'Programming', 'wwwwwww', '2017-11-21 20:23:30.956522'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-21 20:40:17,078 : DEBUG : sqlalchemy_statments.py : 50 :           get_max_id() ] (10,)
[2017-11-21 20:40:17,094 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:40:17] "GET /note HTTP/1.1" 200 -
[2017-11-21 20:40:17,110 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:40:17] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-11-21 20:40:17,110 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:40:17] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-11-21 20:40:17,110 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:40:17] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-11-21 20:40:17,110 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:40:17] "GET /static/main.css HTTP/1.1" 304 -
[2017-11-21 20:40:26,589 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-21 20:40:26,589 : DEBUG : sqlalchemy_statments.py : 31 :              get_all() ] [(10, 'wwwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwwwwwwww', '2017-11-21 20:31:16.880625'), (9, 'wwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwwwwwww', '2017-11-21 20:30:59.760297'), (8, 'wwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:30:51.712545'), (7, 'wwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwww', '2017-11-21 20:29:11.469973'), (6, 'wwwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:23:59.979252'), (5, 'wwwwww', 'Programming', 'wwwwwww', '2017-11-21 20:23:30.956522'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-21 20:40:26,589 : DEBUG : sqlalchemy_statments.py : 50 :           get_max_id() ] (10,)
[2017-11-21 20:40:26,589 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:40:26] "GET /note HTTP/1.1" 200 -
[2017-11-21 20:40:26,620 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:40:26] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-11-21 20:40:26,620 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:40:26] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-11-21 20:40:26,620 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:40:26] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-11-21 20:40:26,620 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:40:26] "GET /static/main.css HTTP/1.1" 304 -
[2017-11-21 20:40:49,168 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-21 20:40:49,169 : DEBUG : sqlalchemy_statments.py : 31 :              get_all() ] [(10, 'wwwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwwwwwwww', '2017-11-21 20:31:16.880625'), (9, 'wwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwwwwwww', '2017-11-21 20:30:59.760297'), (8, 'wwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:30:51.712545'), (7, 'wwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwww', '2017-11-21 20:29:11.469973'), (6, 'wwwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:23:59.979252'), (5, 'wwwwww', 'Programming', 'wwwwwww', '2017-11-21 20:23:30.956522'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-21 20:40:49,169 : DEBUG : sqlalchemy_statments.py : 50 :           get_max_id() ] (10,)
[2017-11-21 20:40:49,177 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:40:49] "GET /note HTTP/1.1" 200 -
[2017-11-21 20:40:49,179 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:40:49] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-11-21 20:40:49,195 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:40:49] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-11-21 20:40:49,195 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:40:49] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-11-21 20:40:49,195 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:40:49] "GET /static/main.css HTTP/1.1" 304 -
[2017-11-21 20:40:59,993 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-21 20:40:59,993 : DEBUG : sqlalchemy_statments.py : 31 :              get_all() ] [(10, 'wwwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwwwwwwww', '2017-11-21 20:31:16.880625'), (9, 'wwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwwwwwww', '2017-11-21 20:30:59.760297'), (8, 'wwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:30:51.712545'), (7, 'wwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwww', '2017-11-21 20:29:11.469973'), (6, 'wwwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:23:59.979252'), (5, 'wwwwww', 'Programming', 'wwwwwww', '2017-11-21 20:23:30.956522'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-21 20:40:59,993 : DEBUG : sqlalchemy_statments.py : 50 :           get_max_id() ] (10,)
[2017-11-21 20:41:00,008 : INFO : views.py : 31 :             notes_db() ] post action
[2017-11-21 20:41:00,008 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:41:00] "POST /note HTTP/1.1" 200 -
[2017-11-21 20:41:48,280 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-21 20:41:48,280 : DEBUG : sqlalchemy_statments.py : 31 :              get_all() ] [(10, 'wwwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwwwwwwww', '2017-11-21 20:31:16.880625'), (9, 'wwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwwwwwww', '2017-11-21 20:30:59.760297'), (8, 'wwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:30:51.712545'), (7, 'wwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwww', '2017-11-21 20:29:11.469973'), (6, 'wwwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:23:59.979252'), (5, 'wwwwww', 'Programming', 'wwwwwww', '2017-11-21 20:23:30.956522'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-21 20:41:48,280 : DEBUG : sqlalchemy_statments.py : 50 :           get_max_id() ] (10,)
[2017-11-21 20:41:48,280 : INFO : views.py : 31 :             notes_db() ] post action
[2017-11-21 20:41:48,280 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:41:48] "POST /note HTTP/1.1" 200 -
[2017-11-21 20:41:48,311 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:41:48] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-11-21 20:41:48,311 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:41:48] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-11-21 20:41:48,311 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:41:48] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-11-21 20:41:48,311 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:41:48] "GET /static/main.css HTTP/1.1" 304 -
[2017-11-21 20:42:07,474 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-21 20:42:07,474 : DEBUG : sqlalchemy_statments.py : 31 :              get_all() ] [(10, 'wwwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwwwwwwww', '2017-11-21 20:31:16.880625'), (9, 'wwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwwwwwww', '2017-11-21 20:30:59.760297'), (8, 'wwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:30:51.712545'), (7, 'wwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwww', '2017-11-21 20:29:11.469973'), (6, 'wwwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:23:59.979252'), (5, 'wwwwww', 'Programming', 'wwwwwww', '2017-11-21 20:23:30.956522'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-21 20:42:07,474 : DEBUG : sqlalchemy_statments.py : 50 :           get_max_id() ] (10,)
[2017-11-21 20:42:07,474 : INFO : views.py : 31 :             notes_db() ] post action
[2017-11-21 20:42:07,489 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:42:07] "POST /note HTTP/1.1" 200 -
[2017-11-21 20:42:07,505 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:42:07] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-11-21 20:42:07,521 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:42:07] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-11-21 20:42:07,521 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:42:07] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-11-21 20:42:07,521 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:42:07] "GET /static/main.css HTTP/1.1" 304 -
[2017-11-21 20:42:29,906 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-21 20:42:29,906 : DEBUG : sqlalchemy_statments.py : 31 :              get_all() ] [(10, 'wwwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwwwwwwww', '2017-11-21 20:31:16.880625'), (9, 'wwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwwwwwww', '2017-11-21 20:30:59.760297'), (8, 'wwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:30:51.712545'), (7, 'wwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwww', '2017-11-21 20:29:11.469973'), (6, 'wwwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:23:59.979252'), (5, 'wwwwww', 'Programming', 'wwwwwww', '2017-11-21 20:23:30.956522'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-21 20:42:29,906 : DEBUG : sqlalchemy_statments.py : 50 :           get_max_id() ] (10,)
[2017-11-21 20:42:29,906 : INFO : views.py : 31 :             notes_db() ] post action
[2017-11-21 20:42:29,921 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:42:29] "POST /note HTTP/1.1" 200 -
[2017-11-21 20:42:29,953 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:42:29] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-11-21 20:42:29,953 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:42:29] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-11-21 20:42:29,953 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:42:29] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-11-21 20:42:29,953 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:42:29] "GET /static/main.css HTTP/1.1" 304 -
[2017-11-21 20:42:42,330 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-21 20:42:42,330 : DEBUG : sqlalchemy_statments.py : 31 :              get_all() ] [(10, 'wwwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwwwwwwww', '2017-11-21 20:31:16.880625'), (9, 'wwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwwwwwww', '2017-11-21 20:30:59.760297'), (8, 'wwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:30:51.712545'), (7, 'wwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwww', '2017-11-21 20:29:11.469973'), (6, 'wwwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:23:59.979252'), (5, 'wwwwww', 'Programming', 'wwwwwww', '2017-11-21 20:23:30.956522'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-21 20:42:42,330 : DEBUG : sqlalchemy_statments.py : 50 :           get_max_id() ] (10,)
[2017-11-21 20:42:42,330 : INFO : views.py : 31 :             notes_db() ] post action
[2017-11-21 20:42:42,330 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:42:42] "POST /note HTTP/1.1" 200 -
[2017-11-21 20:42:49,284 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-21 20:42:49,284 : DEBUG : sqlalchemy_statments.py : 31 :              get_all() ] [(10, 'wwwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwwwwwwww', '2017-11-21 20:31:16.880625'), (9, 'wwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwwwwwww', '2017-11-21 20:30:59.760297'), (8, 'wwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:30:51.712545'), (7, 'wwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwww', '2017-11-21 20:29:11.469973'), (6, 'wwwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:23:59.979252'), (5, 'wwwwww', 'Programming', 'wwwwwww', '2017-11-21 20:23:30.956522'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-21 20:42:49,284 : DEBUG : sqlalchemy_statments.py : 50 :           get_max_id() ] (10,)
[2017-11-21 20:42:49,284 : INFO : views.py : 31 :             notes_db() ] post action
[2017-11-21 20:42:49,284 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:42:49] "POST /note HTTP/1.1" 200 -
[2017-11-21 20:42:49,972 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-21 20:42:49,972 : DEBUG : sqlalchemy_statments.py : 31 :              get_all() ] [(10, 'wwwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwwwwwwww', '2017-11-21 20:31:16.880625'), (9, 'wwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwwwwwww', '2017-11-21 20:30:59.760297'), (8, 'wwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:30:51.712545'), (7, 'wwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwww', '2017-11-21 20:29:11.469973'), (6, 'wwwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:23:59.979252'), (5, 'wwwwww', 'Programming', 'wwwwwww', '2017-11-21 20:23:30.956522'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-21 20:42:49,972 : DEBUG : sqlalchemy_statments.py : 50 :           get_max_id() ] (10,)
[2017-11-21 20:42:49,972 : INFO : views.py : 31 :             notes_db() ] post action
[2017-11-21 20:42:49,972 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:42:49] "POST /note HTTP/1.1" 200 -
[2017-11-21 20:42:53,207 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-21 20:42:53,207 : DEBUG : sqlalchemy_statments.py : 31 :              get_all() ] [(10, 'wwwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwwwwwwww', '2017-11-21 20:31:16.880625'), (9, 'wwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwwwwwww', '2017-11-21 20:30:59.760297'), (8, 'wwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:30:51.712545'), (7, 'wwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwww', '2017-11-21 20:29:11.469973'), (6, 'wwwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:23:59.979252'), (5, 'wwwwww', 'Programming', 'wwwwwww', '2017-11-21 20:23:30.956522'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-21 20:42:53,207 : DEBUG : sqlalchemy_statments.py : 50 :           get_max_id() ] (10,)
[2017-11-21 20:42:53,207 : INFO : views.py : 31 :             notes_db() ] post action
[2017-11-21 20:42:53,207 : DEBUG : sqlalchemy_statments.py : 99 :               delete() ] Delete 1 row, id 10.
[2017-11-21 20:42:53,207 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:42:53] "POST /note HTTP/1.1" 200 -
[2017-11-21 20:42:54,741 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-21 20:42:54,741 : DEBUG : sqlalchemy_statments.py : 31 :              get_all() ] [(9, 'wwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwwwwwww', '2017-11-21 20:30:59.760297'), (8, 'wwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:30:51.712545'), (7, 'wwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwww', '2017-11-21 20:29:11.469973'), (6, 'wwwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:23:59.979252'), (5, 'wwwwww', 'Programming', 'wwwwwww', '2017-11-21 20:23:30.956522'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-21 20:42:54,741 : DEBUG : sqlalchemy_statments.py : 50 :           get_max_id() ] (9,)
[2017-11-21 20:42:54,741 : INFO : views.py : 31 :             notes_db() ] post action
[2017-11-21 20:42:54,741 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:42:54] "POST /note HTTP/1.1" 200 -
[2017-11-21 20:42:55,616 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-21 20:42:55,616 : DEBUG : sqlalchemy_statments.py : 31 :              get_all() ] [(9, 'wwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwwwwwww', '2017-11-21 20:30:59.760297'), (8, 'wwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:30:51.712545'), (7, 'wwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwww', '2017-11-21 20:29:11.469973'), (6, 'wwwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:23:59.979252'), (5, 'wwwwww', 'Programming', 'wwwwwww', '2017-11-21 20:23:30.956522'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-21 20:42:55,616 : DEBUG : sqlalchemy_statments.py : 50 :           get_max_id() ] (9,)
[2017-11-21 20:42:55,616 : INFO : views.py : 31 :             notes_db() ] post action
[2017-11-21 20:42:55,616 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:42:55] "POST /note HTTP/1.1" 200 -
[2017-11-21 20:42:55,788 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-21 20:42:55,788 : DEBUG : sqlalchemy_statments.py : 31 :              get_all() ] [(9, 'wwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwwwwwww', '2017-11-21 20:30:59.760297'), (8, 'wwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:30:51.712545'), (7, 'wwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwww', '2017-11-21 20:29:11.469973'), (6, 'wwwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:23:59.979252'), (5, 'wwwwww', 'Programming', 'wwwwwww', '2017-11-21 20:23:30.956522'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-21 20:42:55,788 : DEBUG : sqlalchemy_statments.py : 50 :           get_max_id() ] (9,)
[2017-11-21 20:42:55,788 : INFO : views.py : 31 :             notes_db() ] post action
[2017-11-21 20:42:55,788 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:42:55] "POST /note HTTP/1.1" 200 -
[2017-11-21 20:42:55,960 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-21 20:42:55,960 : DEBUG : sqlalchemy_statments.py : 31 :              get_all() ] [(9, 'wwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwwwwwww', '2017-11-21 20:30:59.760297'), (8, 'wwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:30:51.712545'), (7, 'wwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwww', '2017-11-21 20:29:11.469973'), (6, 'wwwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:23:59.979252'), (5, 'wwwwww', 'Programming', 'wwwwwww', '2017-11-21 20:23:30.956522'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-21 20:42:55,975 : DEBUG : sqlalchemy_statments.py : 50 :           get_max_id() ] (9,)
[2017-11-21 20:42:55,975 : INFO : views.py : 31 :             notes_db() ] post action
[2017-11-21 20:42:55,975 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:42:55] "POST /note HTTP/1.1" 200 -
[2017-11-21 20:42:56,132 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-21 20:42:56,132 : DEBUG : sqlalchemy_statments.py : 31 :              get_all() ] [(9, 'wwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwwwwwww', '2017-11-21 20:30:59.760297'), (8, 'wwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:30:51.712545'), (7, 'wwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwww', '2017-11-21 20:29:11.469973'), (6, 'wwwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:23:59.979252'), (5, 'wwwwww', 'Programming', 'wwwwwww', '2017-11-21 20:23:30.956522'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-21 20:42:56,132 : DEBUG : sqlalchemy_statments.py : 50 :           get_max_id() ] (9,)
[2017-11-21 20:42:56,132 : INFO : views.py : 31 :             notes_db() ] post action
[2017-11-21 20:42:56,132 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:42:56] "POST /note HTTP/1.1" 200 -
[2017-11-21 20:42:56,304 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-21 20:42:56,319 : DEBUG : sqlalchemy_statments.py : 31 :              get_all() ] [(9, 'wwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwwwwwww', '2017-11-21 20:30:59.760297'), (8, 'wwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:30:51.712545'), (7, 'wwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwww', '2017-11-21 20:29:11.469973'), (6, 'wwwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:23:59.979252'), (5, 'wwwwww', 'Programming', 'wwwwwww', '2017-11-21 20:23:30.956522'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-21 20:42:56,319 : DEBUG : sqlalchemy_statments.py : 50 :           get_max_id() ] (9,)
[2017-11-21 20:42:56,319 : INFO : views.py : 31 :             notes_db() ] post action
[2017-11-21 20:42:56,319 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:42:56] "POST /note HTTP/1.1" 200 -
[2017-11-21 20:43:03,914 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-21 20:43:03,929 : DEBUG : sqlalchemy_statments.py : 31 :              get_all() ] [(9, 'wwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwwwwwww', '2017-11-21 20:30:59.760297'), (8, 'wwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:30:51.712545'), (7, 'wwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwww', '2017-11-21 20:29:11.469973'), (6, 'wwwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:23:59.979252'), (5, 'wwwwww', 'Programming', 'wwwwwww', '2017-11-21 20:23:30.956522'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-21 20:43:03,929 : DEBUG : sqlalchemy_statments.py : 50 :           get_max_id() ] (9,)
[2017-11-21 20:43:03,929 : INFO : views.py : 31 :             notes_db() ] post action
[2017-11-21 20:43:03,929 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:43:03] "POST /note HTTP/1.1" 200 -
[2017-11-21 20:43:07,430 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-21 20:43:07,430 : DEBUG : sqlalchemy_statments.py : 31 :              get_all() ] [(9, 'wwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwwwwwww', '2017-11-21 20:30:59.760297'), (8, 'wwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:30:51.712545'), (7, 'wwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwww', '2017-11-21 20:29:11.469973'), (6, 'wwwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:23:59.979252'), (5, 'wwwwww', 'Programming', 'wwwwwww', '2017-11-21 20:23:30.956522'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-21 20:43:07,430 : DEBUG : sqlalchemy_statments.py : 50 :           get_max_id() ] (9,)
[2017-11-21 20:43:07,430 : INFO : views.py : 31 :             notes_db() ] post action
[2017-11-21 20:43:07,445 : DEBUG : sqlalchemy_statments.py : 99 :               delete() ] Delete 1 row, id 9.
[2017-11-21 20:43:07,445 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:43:07] "POST /note HTTP/1.1" 200 -
[2017-11-21 20:43:11,823 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-21 20:43:11,823 : DEBUG : sqlalchemy_statments.py : 31 :              get_all() ] [(8, 'wwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:30:51.712545'), (7, 'wwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwww', '2017-11-21 20:29:11.469973'), (6, 'wwwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:23:59.979252'), (5, 'wwwwww', 'Programming', 'wwwwwww', '2017-11-21 20:23:30.956522'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-21 20:43:11,839 : DEBUG : sqlalchemy_statments.py : 50 :           get_max_id() ] (8,)
[2017-11-21 20:43:11,839 : INFO : views.py : 31 :             notes_db() ] post action
[2017-11-21 20:43:11,839 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:43:11] "POST /note HTTP/1.1" 200 -
[2017-11-21 20:43:13,542 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-21 20:43:13,542 : DEBUG : sqlalchemy_statments.py : 31 :              get_all() ] [(8, 'wwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:30:51.712545'), (7, 'wwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwww', '2017-11-21 20:29:11.469973'), (6, 'wwwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:23:59.979252'), (5, 'wwwwww', 'Programming', 'wwwwwww', '2017-11-21 20:23:30.956522'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-21 20:43:13,542 : DEBUG : sqlalchemy_statments.py : 50 :           get_max_id() ] (8,)
[2017-11-21 20:43:13,542 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:43:13] "GET /note HTTP/1.1" 200 -
[2017-11-21 20:43:14,401 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-21 20:43:14,401 : DEBUG : sqlalchemy_statments.py : 31 :              get_all() ] [(8, 'wwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:30:51.712545'), (7, 'wwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwww', '2017-11-21 20:29:11.469973'), (6, 'wwwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:23:59.979252'), (5, 'wwwwww', 'Programming', 'wwwwwww', '2017-11-21 20:23:30.956522'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-21 20:43:14,401 : DEBUG : sqlalchemy_statments.py : 50 :           get_max_id() ] (8,)
[2017-11-21 20:43:14,417 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:43:14] "GET /note HTTP/1.1" 200 -
[2017-11-21 20:43:15,636 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-21 20:43:15,636 : DEBUG : sqlalchemy_statments.py : 31 :              get_all() ] [(8, 'wwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:30:51.712545'), (7, 'wwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwww', '2017-11-21 20:29:11.469973'), (6, 'wwwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:23:59.979252'), (5, 'wwwwww', 'Programming', 'wwwwwww', '2017-11-21 20:23:30.956522'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-21 20:43:15,636 : DEBUG : sqlalchemy_statments.py : 50 :           get_max_id() ] (8,)
[2017-11-21 20:43:15,636 : INFO : views.py : 31 :             notes_db() ] post action
[2017-11-21 20:43:15,636 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:43:15] "POST /note HTTP/1.1" 200 -
[2017-11-21 20:43:16,042 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-21 20:43:16,042 : DEBUG : sqlalchemy_statments.py : 31 :              get_all() ] [(8, 'wwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:30:51.712545'), (7, 'wwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwww', '2017-11-21 20:29:11.469973'), (6, 'wwwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:23:59.979252'), (5, 'wwwwww', 'Programming', 'wwwwwww', '2017-11-21 20:23:30.956522'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-21 20:43:16,042 : DEBUG : sqlalchemy_statments.py : 50 :           get_max_id() ] (8,)
[2017-11-21 20:43:16,042 : INFO : views.py : 31 :             notes_db() ] post action
[2017-11-21 20:43:16,042 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:43:16] "POST /note HTTP/1.1" 200 -
[2017-11-21 20:43:16,277 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-21 20:43:16,277 : DEBUG : sqlalchemy_statments.py : 31 :              get_all() ] [(8, 'wwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:30:51.712545'), (7, 'wwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwww', '2017-11-21 20:29:11.469973'), (6, 'wwwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:23:59.979252'), (5, 'wwwwww', 'Programming', 'wwwwwww', '2017-11-21 20:23:30.956522'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-21 20:43:16,277 : DEBUG : sqlalchemy_statments.py : 50 :           get_max_id() ] (8,)
[2017-11-21 20:43:16,277 : INFO : views.py : 31 :             notes_db() ] post action
[2017-11-21 20:43:16,277 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:43:16] "POST /note HTTP/1.1" 200 -
[2017-11-21 20:43:46,548 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-21 20:43:46,548 : DEBUG : sqlalchemy_statments.py : 31 :              get_all() ] [(8, 'wwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:30:51.712545'), (7, 'wwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwww', '2017-11-21 20:29:11.469973'), (6, 'wwwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:23:59.979252'), (5, 'wwwwww', 'Programming', 'wwwwwww', '2017-11-21 20:23:30.956522'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-21 20:43:46,548 : DEBUG : sqlalchemy_statments.py : 50 :           get_max_id() ] (8,)
[2017-11-21 20:43:46,548 : INFO : views.py : 31 :             notes_db() ] post action
[2017-11-21 20:43:46,548 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:43:46] "POST /note HTTP/1.1" 200 -
[2017-11-21 20:43:46,563 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:43:46] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-11-21 20:43:46,563 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:43:46] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-11-21 20:43:46,579 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:43:46] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-11-21 20:43:46,579 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:43:46] "GET /static/main.css HTTP/1.1" 304 -
[2017-11-21 20:43:56,064 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-21 20:43:56,064 : DEBUG : sqlalchemy_statments.py : 31 :              get_all() ] [(8, 'wwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:30:51.712545'), (7, 'wwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwww', '2017-11-21 20:29:11.469973'), (6, 'wwwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:23:59.979252'), (5, 'wwwwww', 'Programming', 'wwwwwww', '2017-11-21 20:23:30.956522'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-21 20:43:56,064 : DEBUG : sqlalchemy_statments.py : 50 :           get_max_id() ] (8,)
[2017-11-21 20:43:56,064 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:43:56] "GET /note HTTP/1.1" 200 -
[2017-11-21 20:43:56,924 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-21 20:43:56,924 : DEBUG : sqlalchemy_statments.py : 31 :              get_all() ] [(8, 'wwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:30:51.712545'), (7, 'wwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwww', '2017-11-21 20:29:11.469973'), (6, 'wwwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:23:59.979252'), (5, 'wwwwww', 'Programming', 'wwwwwww', '2017-11-21 20:23:30.956522'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-21 20:43:56,924 : DEBUG : sqlalchemy_statments.py : 50 :           get_max_id() ] (8,)
[2017-11-21 20:43:56,924 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:43:56] "GET /note HTTP/1.1" 200 -
[2017-11-21 20:44:57,007 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-21 20:44:57,022 : DEBUG : sqlalchemy_statments.py : 31 :              get_all() ] [(8, 'wwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:30:51.712545'), (7, 'wwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwww', '2017-11-21 20:29:11.469973'), (6, 'wwwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:23:59.979252'), (5, 'wwwwww', 'Programming', 'wwwwwww', '2017-11-21 20:23:30.956522'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-21 20:44:57,022 : DEBUG : sqlalchemy_statments.py : 50 :           get_max_id() ] (8,)
[2017-11-21 20:44:57,022 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:44:57] "GET /note HTTP/1.1" 200 -
[2017-11-21 20:46:03,931 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-11-21 20:46:04,462 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-11-21 20:46:04,462 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-11-21 20:46:04,478 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-11-21 20:46:14,291 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:46:14] "GET / HTTP/1.1" 200 -
[2017-11-21 20:46:26,871 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-21 20:46:26,871 : DEBUG : sqlalchemy_statments.py : 31 :              get_all() ] [(8, 'wwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:30:51.712545'), (7, 'wwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwww', '2017-11-21 20:29:11.469973'), (6, 'wwwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:23:59.979252'), (5, 'wwwwww', 'Programming', 'wwwwwww', '2017-11-21 20:23:30.956522'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-21 20:46:26,871 : DEBUG : sqlalchemy_statments.py : 50 :           get_max_id() ] (8,)
[2017-11-21 20:46:26,918 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:46:26] "GET /note HTTP/1.1" 200 -
[2017-11-21 20:46:28,715 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-21 20:46:28,715 : DEBUG : sqlalchemy_statments.py : 31 :              get_all() ] [(8, 'wwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:30:51.712545'), (7, 'wwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwww', '2017-11-21 20:29:11.469973'), (6, 'wwwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:23:59.979252'), (5, 'wwwwww', 'Programming', 'wwwwwww', '2017-11-21 20:23:30.956522'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-21 20:46:28,730 : DEBUG : sqlalchemy_statments.py : 50 :           get_max_id() ] (8,)
[2017-11-21 20:46:28,730 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:46:28] "GET /note HTTP/1.1" 200 -
[2017-11-21 20:46:34,559 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-21 20:46:34,559 : DEBUG : sqlalchemy_statments.py : 31 :              get_all() ] [(8, 'wwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:30:51.712545'), (7, 'wwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwww', '2017-11-21 20:29:11.469973'), (6, 'wwwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:23:59.979252'), (5, 'wwwwww', 'Programming', 'wwwwwww', '2017-11-21 20:23:30.956522'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-21 20:46:34,559 : DEBUG : sqlalchemy_statments.py : 50 :           get_max_id() ] (8,)
[2017-11-21 20:46:34,559 : INFO : views.py : 31 :             notes_db() ] post action
[2017-11-21 20:46:34,559 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:46:34] "POST /note HTTP/1.1" 200 -
[2017-11-21 20:46:38,935 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-21 20:46:38,935 : DEBUG : sqlalchemy_statments.py : 31 :              get_all() ] [(8, 'wwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:30:51.712545'), (7, 'wwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwww', '2017-11-21 20:29:11.469973'), (6, 'wwwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:23:59.979252'), (5, 'wwwwww', 'Programming', 'wwwwwww', '2017-11-21 20:23:30.956522'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-21 20:46:38,935 : DEBUG : sqlalchemy_statments.py : 50 :           get_max_id() ] (8,)
[2017-11-21 20:46:38,935 : INFO : views.py : 31 :             notes_db() ] post action
[2017-11-21 20:46:38,950 : DEBUG : sqlalchemy_statments.py : 99 :               delete() ] Delete 1 row, id 8.
[2017-11-21 20:46:38,950 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:46:38] "POST /note HTTP/1.1" 200 -
[2017-11-21 20:46:41,466 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-21 20:46:41,466 : DEBUG : sqlalchemy_statments.py : 31 :              get_all() ] [(7, 'wwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwww', '2017-11-21 20:29:11.469973'), (6, 'wwwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:23:59.979252'), (5, 'wwwwww', 'Programming', 'wwwwwww', '2017-11-21 20:23:30.956522'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-21 20:46:41,466 : DEBUG : sqlalchemy_statments.py : 50 :           get_max_id() ] (7,)
[2017-11-21 20:46:41,466 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:46:41] "GET /note HTTP/1.1" 200 -
[2017-11-21 20:46:50,608 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-21 20:46:50,608 : DEBUG : sqlalchemy_statments.py : 31 :              get_all() ] [(7, 'wwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwww', '2017-11-21 20:29:11.469973'), (6, 'wwwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:23:59.979252'), (5, 'wwwwww', 'Programming', 'wwwwwww', '2017-11-21 20:23:30.956522'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-21 20:46:50,608 : DEBUG : sqlalchemy_statments.py : 50 :           get_max_id() ] (7,)
[2017-11-21 20:46:50,608 : INFO : views.py : 31 :             notes_db() ] post action
[2017-11-21 20:46:50,608 : DEBUG : sqlalchemy_statments.py : 50 :           get_max_id() ] (7,)
[2017-11-21 20:46:50,608 : DEBUG : sqlalchemy_statments.py : 79 :               insert() ] Added 1 row to sqlite3, with id 8
[2017-11-21 20:46:50,608 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:46:50] "POST /note HTTP/1.1" 200 -
[2017-11-21 20:46:52,467 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-21 20:46:52,467 : DEBUG : sqlalchemy_statments.py : 31 :              get_all() ] [(8, 'wwwwwwwwwwwwww', 'Html', 'wwwwwwwwwwwwwwwwww', '2017-11-21 20:46:50.608313'), (7, 'wwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwww', '2017-11-21 20:29:11.469973'), (6, 'wwwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:23:59.979252'), (5, 'wwwwww', 'Programming', 'wwwwwww', '2017-11-21 20:23:30.956522'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-21 20:46:52,467 : DEBUG : sqlalchemy_statments.py : 50 :           get_max_id() ] (8,)
[2017-11-21 20:46:52,467 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 20:46:52] "GET /note HTTP/1.1" 200 -
[2017-11-21 21:18:40,558 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-11-21 21:18:41,134 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-11-21 21:18:41,139 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-11-21 21:18:41,148 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-11-21 21:18:54,082 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 21:18:54] "GET / HTTP/1.1" 200 -
[2017-11-21 21:18:54,129 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 21:18:54] "GET /static/css/bootstrap.min.css HTTP/1.1" 200 -
[2017-11-21 21:18:54,129 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 21:18:54] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 200 -
[2017-11-21 21:18:54,129 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 21:18:54] "GET /static/js/bootstrap.min.js HTTP/1.1" 200 -
[2017-11-21 21:18:54,129 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 21:18:54] "GET /static/main.css HTTP/1.1" 200 -
[2017-11-21 21:18:54,191 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 21:18:54] "GET /favicon.ico HTTP/1.1" 404 -
[2017-11-21 22:49:19,246 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-11-21 22:49:19,793 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-11-21 22:49:19,793 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-11-21 22:49:19,793 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-11-21 22:49:28,560 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 22:49:28] "GET / HTTP/1.1" 200 -
[2017-11-21 22:49:28,591 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 22:49:28] "GET /static/css/bootstrap.min.css HTTP/1.1" 200 -
[2017-11-21 22:49:28,607 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 22:49:28] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 200 -
[2017-11-21 22:49:28,607 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 22:49:28] "GET /static/js/bootstrap.min.js HTTP/1.1" 200 -
[2017-11-21 22:49:28,607 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 22:49:28] "GET /static/main.css HTTP/1.1" 200 -
[2017-11-21 22:49:28,669 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 22:49:28] "GET /favicon.ico HTTP/1.1" 404 -
[2017-11-21 22:49:35,029 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-21 22:49:35,029 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(8, 'wwwwwwwwwwwwww', 'Html', 'wwwwwwwwwwwwwwwwww', '2017-11-21 20:46:50.608313'), (7, 'wwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwww', '2017-11-21 20:29:11.469973'), (6, 'wwwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:23:59.979252'), (5, 'wwwwww', 'Programming', 'wwwwwww', '2017-11-21 20:23:30.956522'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-21 22:49:35,029 : DEBUG : sqlalchemy_statments.py : 55 :           get_max_id() ] (8,)
[2017-11-21 22:49:35,060 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 22:49:35] "GET /note HTTP/1.1" 200 -
[2017-11-21 22:49:35,154 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 22:49:35] "GET /static/fonts/glyphicons-halflings-regular.woff2 HTTP/1.1" 200 -
[2017-11-21 22:49:36,467 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-21 22:49:36,467 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(8, 'wwwwwwwwwwwwww', 'Html', 'wwwwwwwwwwwwwwwwww', '2017-11-21 20:46:50.608313'), (7, 'wwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwww', '2017-11-21 20:29:11.469973'), (6, 'wwwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:23:59.979252'), (5, 'wwwwww', 'Programming', 'wwwwwww', '2017-11-21 20:23:30.956522'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-21 22:49:36,467 : DEBUG : sqlalchemy_statments.py : 55 :           get_max_id() ] (8,)
[2017-11-21 22:49:36,467 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 22:49:36] "GET /note HTTP/1.1" 200 -
[2017-11-21 22:49:37,420 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-21 22:49:37,420 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(8, 'wwwwwwwwwwwwww', 'Html', 'wwwwwwwwwwwwwwwwww', '2017-11-21 20:46:50.608313'), (7, 'wwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwww', '2017-11-21 20:29:11.469973'), (6, 'wwwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:23:59.979252'), (5, 'wwwwww', 'Programming', 'wwwwwww', '2017-11-21 20:23:30.956522'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-21 22:49:37,420 : DEBUG : sqlalchemy_statments.py : 55 :           get_max_id() ] (8,)
[2017-11-21 22:49:37,420 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 22:49:37] "GET /note HTTP/1.1" 200 -
[2017-11-21 22:49:40,530 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-21 22:49:40,530 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(8, 'wwwwwwwwwwwwww', 'Html', 'wwwwwwwwwwwwwwwwww', '2017-11-21 20:46:50.608313'), (7, 'wwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwww', '2017-11-21 20:29:11.469973'), (6, 'wwwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:23:59.979252'), (5, 'wwwwww', 'Programming', 'wwwwwww', '2017-11-21 20:23:30.956522'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-21 22:49:40,530 : DEBUG : sqlalchemy_statments.py : 55 :           get_max_id() ] (8,)
[2017-11-21 22:49:40,530 : INFO : views.py : 31 :             notes_db() ] post action
[2017-11-21 22:49:40,530 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 22:49:40] "POST /note HTTP/1.1" 200 -
[2017-11-21 22:49:44,374 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-21 22:49:44,374 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(8, 'wwwwwwwwwwwwww', 'Html', 'wwwwwwwwwwwwwwwwww', '2017-11-21 20:46:50.608313'), (7, 'wwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwww', '2017-11-21 20:29:11.469973'), (6, 'wwwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:23:59.979252'), (5, 'wwwwww', 'Programming', 'wwwwwww', '2017-11-21 20:23:30.956522'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-21 22:49:44,374 : DEBUG : sqlalchemy_statments.py : 55 :           get_max_id() ] (8,)
[2017-11-21 22:49:44,374 : INFO : views.py : 31 :             notes_db() ] post action
[2017-11-21 22:49:44,390 : DEBUG : sqlalchemy_statments.py : 106 :               delete() ] Delete 1 row, id 8.
[2017-11-21 22:49:44,390 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 22:49:44] "POST /note HTTP/1.1" 200 -
[2017-11-21 22:49:46,346 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-21 22:49:46,346 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(7, 'wwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwww', '2017-11-21 20:29:11.469973'), (6, 'wwwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:23:59.979252'), (5, 'wwwwww', 'Programming', 'wwwwwww', '2017-11-21 20:23:30.956522'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-21 22:49:46,346 : DEBUG : sqlalchemy_statments.py : 55 :           get_max_id() ] (7,)
[2017-11-21 22:49:46,346 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 22:49:46] "GET /note HTTP/1.1" 200 -
[2017-11-21 22:49:58,691 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-21 22:49:58,691 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(7, 'wwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwww', '2017-11-21 20:29:11.469973'), (6, 'wwwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:23:59.979252'), (5, 'wwwwww', 'Programming', 'wwwwwww', '2017-11-21 20:23:30.956522'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-21 22:49:58,691 : DEBUG : sqlalchemy_statments.py : 55 :           get_max_id() ] (7,)
[2017-11-21 22:49:58,691 : INFO : views.py : 31 :             notes_db() ] post action
[2017-11-21 22:49:58,691 : DEBUG : sqlalchemy_statments.py : 55 :           get_max_id() ] (7,)
[2017-11-21 22:49:58,691 : DEBUG : sqlalchemy_statments.py : 85 :               insert() ] Added 1 row to sqlite3, with id 8
[2017-11-21 22:49:58,691 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 22:49:58] "POST /note HTTP/1.1" 200 -
[2017-11-21 22:50:00,382 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-21 22:50:00,382 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(8, 'wwwwwwwwwwwwwwww', 'Linux', 'wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww', '2017-11-21 22:49:58.691370'), (7, 'wwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwww', '2017-11-21 20:29:11.469973'), (6, 'wwwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:23:59.979252'), (5, 'wwwwww', 'Programming', 'wwwwwww', '2017-11-21 20:23:30.956522'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-21 22:50:00,382 : DEBUG : sqlalchemy_statments.py : 55 :           get_max_id() ] (8,)
[2017-11-21 22:50:00,382 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [21/Nov/2017 22:50:00] "GET /note HTTP/1.1" 200 -
[2017-11-22 22:02:04,074 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-11-22 22:02:04,676 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-11-22 22:02:04,676 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-11-22 22:02:04,691 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-11-22 22:02:13,073 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [22/Nov/2017 22:02:13] "GET /py HTTP/1.1" 200 -
[2017-11-22 22:02:13,104 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [22/Nov/2017 22:02:13] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-11-22 22:02:13,104 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [22/Nov/2017 22:02:13] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-11-22 22:02:13,104 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [22/Nov/2017 22:02:13] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-11-22 22:02:13,104 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [22/Nov/2017 22:02:13] "GET /static/main.css HTTP/1.1" 304 -
[2017-11-22 22:02:13,104 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [22/Nov/2017 22:02:13] "GET /static/img/import_cls/app_form_mod.jpg HTTP/1.1" 200 -
[2017-11-22 22:02:13,120 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [22/Nov/2017 22:02:13] "GET /static/img/import_cls/add_init.jpg HTTP/1.1" 200 -
[2017-11-22 22:02:20,120 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-22 22:02:20,120 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(8, 'wwwwwwwwwwwwwwww', 'Linux', 'wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww', '2017-11-21 22:49:58.691370'), (7, 'wwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwww', '2017-11-21 20:29:11.469973'), (6, 'wwwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:23:59.979252'), (5, 'wwwwww', 'Programming', 'wwwwwww', '2017-11-21 20:23:30.956522'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-22 22:02:20,120 : DEBUG : sqlalchemy_statments.py : 55 :           get_max_id() ] (8,)
[2017-11-22 22:02:20,136 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [22/Nov/2017 22:02:20] "GET /note HTTP/1.1" 200 -
[2017-11-22 22:02:22,199 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-22 22:02:22,199 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(8, 'wwwwwwwwwwwwwwww', 'Linux', 'wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww', '2017-11-21 22:49:58.691370'), (7, 'wwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwww', '2017-11-21 20:29:11.469973'), (6, 'wwwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:23:59.979252'), (5, 'wwwwww', 'Programming', 'wwwwwww', '2017-11-21 20:23:30.956522'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-22 22:02:22,199 : DEBUG : sqlalchemy_statments.py : 55 :           get_max_id() ] (8,)
[2017-11-22 22:02:22,199 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [22/Nov/2017 22:02:22] "GET /note HTTP/1.1" 200 -
[2017-11-22 22:02:25,027 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-22 22:02:25,027 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(8, 'wwwwwwwwwwwwwwww', 'Linux', 'wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww', '2017-11-21 22:49:58.691370'), (7, 'wwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwww', '2017-11-21 20:29:11.469973'), (6, 'wwwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:23:59.979252'), (5, 'wwwwww', 'Programming', 'wwwwwww', '2017-11-21 20:23:30.956522'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-22 22:02:25,027 : DEBUG : sqlalchemy_statments.py : 55 :           get_max_id() ] (8,)
[2017-11-22 22:02:25,027 : INFO : views.py : 31 :             notes_db() ] post action
[2017-11-22 22:02:25,027 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [22/Nov/2017 22:02:25] "POST /note HTTP/1.1" 200 -
[2017-11-22 22:02:31,559 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-22 22:02:31,559 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(8, 'wwwwwwwwwwwwwwww', 'Linux', 'wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww', '2017-11-21 22:49:58.691370'), (7, 'wwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwww', '2017-11-21 20:29:11.469973'), (6, 'wwwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:23:59.979252'), (5, 'wwwwww', 'Programming', 'wwwwwww', '2017-11-21 20:23:30.956522'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-22 22:02:31,559 : DEBUG : sqlalchemy_statments.py : 55 :           get_max_id() ] (8,)
[2017-11-22 22:02:31,559 : INFO : views.py : 31 :             notes_db() ] post action
[2017-11-22 22:02:31,559 : DEBUG : sqlalchemy_statments.py : 106 :               delete() ] Delete 1 row, id 8.
[2017-11-22 22:02:31,559 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [22/Nov/2017 22:02:31] "POST /note HTTP/1.1" 200 -
[2017-11-22 22:02:33,703 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-22 22:02:33,703 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(7, 'wwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwww', '2017-11-21 20:29:11.469973'), (6, 'wwwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:23:59.979252'), (5, 'wwwwww', 'Programming', 'wwwwwww', '2017-11-21 20:23:30.956522'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-22 22:02:33,718 : DEBUG : sqlalchemy_statments.py : 55 :           get_max_id() ] (7,)
[2017-11-22 22:02:33,718 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [22/Nov/2017 22:02:33] "GET /note HTTP/1.1" 200 -
[2017-11-22 22:02:38,797 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-22 22:02:38,797 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(7, 'wwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwww', '2017-11-21 20:29:11.469973'), (6, 'wwwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:23:59.979252'), (5, 'wwwwww', 'Programming', 'wwwwwww', '2017-11-21 20:23:30.956522'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-22 22:02:38,812 : DEBUG : sqlalchemy_statments.py : 55 :           get_max_id() ] (7,)
[2017-11-22 22:02:38,812 : INFO : views.py : 31 :             notes_db() ] post action
[2017-11-22 22:02:38,812 : DEBUG : sqlalchemy_statments.py : 55 :           get_max_id() ] (7,)
[2017-11-22 22:02:38,812 : DEBUG : sqlalchemy_statments.py : 85 :               insert() ] Added 1 row to sqlite3, with id 8
[2017-11-22 22:02:38,812 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [22/Nov/2017 22:02:38] "POST /note HTTP/1.1" 200 -
[2017-11-22 22:02:40,284 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-22 22:02:40,284 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(8, 'wwwwwwwww', 'Programming', 'wwwwwwww', '2017-11-22 22:02:38.812969'), (7, 'wwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwww', '2017-11-21 20:29:11.469973'), (6, 'wwwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:23:59.979252'), (5, 'wwwwww', 'Programming', 'wwwwwww', '2017-11-21 20:23:30.956522'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-22 22:02:40,284 : DEBUG : sqlalchemy_statments.py : 55 :           get_max_id() ] (8,)
[2017-11-22 22:02:40,284 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [22/Nov/2017 22:02:40] "GET /note HTTP/1.1" 200 -
[2017-11-22 22:02:42,706 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [22/Nov/2017 22:02:42] "GET /py HTTP/1.1" 200 -
[2017-11-22 22:03:30,583 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [22/Nov/2017 22:03:30] "GET /py HTTP/1.1" 200 -
[2017-11-22 22:03:30,598 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [22/Nov/2017 22:03:30] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-11-22 22:03:30,614 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [22/Nov/2017 22:03:30] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-11-22 22:03:30,614 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [22/Nov/2017 22:03:30] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-11-22 22:03:30,614 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [22/Nov/2017 22:03:30] "GET /static/main.css HTTP/1.1" 304 -
[2017-11-22 22:03:30,645 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [22/Nov/2017 22:03:30] "GET /static/img/import_cls/app_form_mod.jpg HTTP/1.1" 304 -
[2017-11-22 22:03:30,645 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [22/Nov/2017 22:03:30] "GET /static/img/import_cls/add_init.jpg HTTP/1.1" 304 -
[2017-11-22 22:03:37,578 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [22/Nov/2017 22:03:37] "GET /py HTTP/1.1" 200 -
[2017-11-22 22:03:37,596 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [22/Nov/2017 22:03:37] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-11-22 22:03:37,598 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [22/Nov/2017 22:03:37] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-11-22 22:03:37,602 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [22/Nov/2017 22:03:37] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-11-22 22:03:37,606 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [22/Nov/2017 22:03:37] "GET /static/main.css HTTP/1.1" 304 -
[2017-11-22 22:03:37,635 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [22/Nov/2017 22:03:37] "GET /static/img/import_cls/app_form_mod.jpg HTTP/1.1" 304 -
[2017-11-22 22:03:37,635 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [22/Nov/2017 22:03:37] "GET /static/img/import_cls/add_init.jpg HTTP/1.1" 304 -
[2017-11-22 22:03:48,945 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [22/Nov/2017 22:03:48] "GET /py HTTP/1.1" 200 -
[2017-11-22 22:03:48,963 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [22/Nov/2017 22:03:48] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-11-22 22:03:48,963 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [22/Nov/2017 22:03:48] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-11-22 22:03:48,963 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [22/Nov/2017 22:03:48] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-11-22 22:03:48,963 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [22/Nov/2017 22:03:48] "GET /static/main.css HTTP/1.1" 304 -
[2017-11-22 22:03:49,009 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [22/Nov/2017 22:03:49] "GET /static/img/import_cls/app_form_mod.jpg HTTP/1.1" 304 -
[2017-11-22 22:03:49,009 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [22/Nov/2017 22:03:49] "GET /static/img/import_cls/add_init.jpg HTTP/1.1" 304 -
[2017-11-22 22:04:06,181 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [22/Nov/2017 22:04:06] "GET /py HTTP/1.1" 200 -
[2017-11-22 22:04:06,197 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [22/Nov/2017 22:04:06] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-11-22 22:04:06,197 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [22/Nov/2017 22:04:06] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-11-22 22:04:06,212 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [22/Nov/2017 22:04:06] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-11-22 22:04:06,212 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [22/Nov/2017 22:04:06] "GET /static/main.css HTTP/1.1" 304 -
[2017-11-22 22:04:06,244 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [22/Nov/2017 22:04:06] "GET /static/img/import_cls/app_form_mod.jpg HTTP/1.1" 304 -
[2017-11-22 22:04:06,244 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [22/Nov/2017 22:04:06] "GET /static/img/import_cls/add_init.jpg HTTP/1.1" 304 -
[2017-11-22 22:05:18,067 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_form\\views.py', reloading
[2017-11-22 22:05:18,114 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-11-22 22:05:19,817 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-11-22 22:05:19,819 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-11-22 22:05:19,827 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-11-22 22:06:19,053 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_form\\views.py', reloading
[2017-11-22 22:06:19,090 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-11-22 22:06:19,803 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-11-22 22:06:19,806 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-11-22 22:06:19,814 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-11-22 22:06:48,368 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-11-22 22:06:48,424 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-11-22 22:06:49,017 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-11-22 22:06:49,019 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-11-22 22:06:49,027 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-11-22 22:07:00,990 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-22 22:07:00,990 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(8, 'wwwwwwwww', 'Programming', 'wwwwwwww', '2017-11-22 22:02:38.812969'), (7, 'wwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwww', '2017-11-21 20:29:11.469973'), (6, 'wwwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:23:59.979252'), (5, 'wwwwww', 'Programming', 'wwwwwww', '2017-11-21 20:23:30.956522'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-22 22:07:01,005 : DEBUG : sqlalchemy_statments.py : 55 :           get_max_id() ] (8,)
[2017-11-22 22:07:01,083 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [22/Nov/2017 22:07:01] "GET /note HTTP/1.1" 200 -
[2017-11-22 22:07:02,427 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-22 22:07:02,427 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(8, 'wwwwwwwww', 'Programming', 'wwwwwwww', '2017-11-22 22:02:38.812969'), (7, 'wwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwww', '2017-11-21 20:29:11.469973'), (6, 'wwwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:23:59.979252'), (5, 'wwwwww', 'Programming', 'wwwwwww', '2017-11-21 20:23:30.956522'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-22 22:07:02,427 : DEBUG : sqlalchemy_statments.py : 55 :           get_max_id() ] (8,)
[2017-11-22 22:07:02,427 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [22/Nov/2017 22:07:02] "GET /note HTTP/1.1" 200 -
[2017-11-22 22:12:21,546 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-11-22 22:12:22,077 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-11-22 22:12:22,077 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-11-22 22:12:22,092 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-11-22 22:12:36,574 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-11-22 22:12:37,106 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-11-22 22:12:37,121 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-11-22 22:12:37,121 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-11-22 22:12:42,406 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\config.py', reloading
[2017-11-22 22:12:42,438 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-11-22 22:12:43,072 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-11-22 22:12:43,075 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-11-22 22:12:43,082 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-11-22 22:14:19,152 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-11-22 22:14:19,684 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-11-22 22:14:19,684 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-11-22 22:14:19,684 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-11-22 22:14:29,240 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [22/Nov/2017 22:14:29] "GET / HTTP/1.1" 200 -
[2017-11-22 22:14:30,662 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [22/Nov/2017 22:14:30] "GET /about HTTP/1.1" 200 -
[2017-11-22 22:14:32,381 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-22 22:14:32,381 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(8, 'wwwwwwwww', 'Programming', 'wwwwwwww', '2017-11-22 22:02:38.812969'), (7, 'wwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwww', '2017-11-21 20:29:11.469973'), (6, 'wwwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:23:59.979252'), (5, 'wwwwww', 'Programming', 'wwwwwww', '2017-11-21 20:23:30.956522'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-22 22:14:32,381 : DEBUG : sqlalchemy_statments.py : 55 :           get_max_id() ] (8,)
[2017-11-22 22:14:32,397 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [22/Nov/2017 22:14:32] "GET /note HTTP/1.1" 200 -
[2017-11-22 22:14:36,319 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [22/Nov/2017 22:14:36] "GET /static/fonts/glyphicons-halflings-regular.woff2 HTTP/1.1" 304 -
[2017-11-22 22:14:36,350 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [22/Nov/2017 22:14:36] "GET /boot HTTP/1.1" 200 -
[2017-11-22 22:14:36,366 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [22/Nov/2017 22:14:36] "GET /static/fonts/glyphicons-halflings-regular.woff HTTP/1.1" 200 -
[2017-11-22 22:14:37,913 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [22/Nov/2017 22:14:37] "GET /form HTTP/1.1" 200 -
[2017-11-22 22:14:39,788 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [22/Nov/2017 22:14:39] "GET /grafana HTTP/1.1" 200 -
[2017-11-22 22:14:39,804 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [22/Nov/2017 22:14:39] "GET /static/img/grafana/grafana_start.jpg HTTP/1.1" 200 -
[2017-11-22 22:14:42,398 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [22/Nov/2017 22:14:42] "GET /static/img/grafana/grafana_dash.jpg HTTP/1.1" 200 -
[2017-11-22 22:14:42,398 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [22/Nov/2017 22:14:42] "GET /static/img/grafana/table_postgre.jpg HTTP/1.1" 200 -
[2017-11-22 22:14:42,414 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [22/Nov/2017 22:14:42] "GET /static/img/grafana/grafana_datasource.jpg HTTP/1.1" 200 -
[2017-11-22 22:14:42,414 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [22/Nov/2017 22:14:42] "GET /static/img/grafana/grafana_panel.jpg HTTP/1.1" 200 -
[2017-11-22 22:14:42,414 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [22/Nov/2017 22:14:42] "GET /static/img/grafana/grafana_query.jpg HTTP/1.1" 200 -
[2017-11-22 22:14:42,429 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [22/Nov/2017 22:14:42] "GET /static/img/grafana/grafana_result.jpg HTTP/1.1" 200 -
[2017-11-22 22:14:42,445 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [22/Nov/2017 22:14:42] "GET /octopus HTTP/1.1" 200 -
[2017-11-22 22:14:44,164 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-22 22:14:44,164 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(8, 'wwwwwwwww', 'Programming', 'wwwwwwww', '2017-11-22 22:02:38.812969'), (7, 'wwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwww', '2017-11-21 20:29:11.469973'), (6, 'wwwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:23:59.979252'), (5, 'wwwwww', 'Programming', 'wwwwwww', '2017-11-21 20:23:30.956522'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-22 22:14:44,164 : DEBUG : sqlalchemy_statments.py : 55 :           get_max_id() ] (8,)
[2017-11-22 22:14:44,164 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [22/Nov/2017 22:14:44] "GET /note HTTP/1.1" 200 -
[2017-11-22 22:14:44,226 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [22/Nov/2017 22:14:44] "GET /static/fonts/glyphicons-halflings-regular.woff2 HTTP/1.1" 304 -
[2017-11-22 22:14:48,492 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-22 22:14:48,492 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(8, 'wwwwwwwww', 'Programming', 'wwwwwwww', '2017-11-22 22:02:38.812969'), (7, 'wwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwww', '2017-11-21 20:29:11.469973'), (6, 'wwwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:23:59.979252'), (5, 'wwwwww', 'Programming', 'wwwwwww', '2017-11-21 20:23:30.956522'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-22 22:14:48,492 : DEBUG : sqlalchemy_statments.py : 55 :           get_max_id() ] (8,)
[2017-11-22 22:14:48,508 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [22/Nov/2017 22:14:48] "GET /note HTTP/1.1" 200 -
[2017-11-22 22:14:53,040 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-22 22:14:53,040 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(8, 'wwwwwwwww', 'Programming', 'wwwwwwww', '2017-11-22 22:02:38.812969'), (7, 'wwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwww', '2017-11-21 20:29:11.469973'), (6, 'wwwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:23:59.979252'), (5, 'wwwwww', 'Programming', 'wwwwwww', '2017-11-21 20:23:30.956522'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-22 22:14:53,040 : DEBUG : sqlalchemy_statments.py : 55 :           get_max_id() ] (8,)
[2017-11-22 22:14:53,040 : INFO : views.py : 31 :             notes_db() ] post action
[2017-11-22 22:14:53,040 : DEBUG : sqlalchemy_statments.py : 106 :               delete() ] Delete 1 row, id 8.
[2017-11-22 22:14:53,040 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [22/Nov/2017 22:14:53] "POST /note HTTP/1.1" 200 -
[2017-11-22 22:14:55,246 : INFO : views.py : 19 :             notes_db() ] started note db form
[2017-11-22 22:14:55,246 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(7, 'wwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwww', '2017-11-21 20:29:11.469973'), (6, 'wwwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:23:59.979252'), (5, 'wwwwww', 'Programming', 'wwwwwww', '2017-11-21 20:23:30.956522'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-22 22:14:55,246 : DEBUG : sqlalchemy_statments.py : 55 :           get_max_id() ] (7,)
[2017-11-22 22:14:55,246 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [22/Nov/2017 22:14:55] "GET /note HTTP/1.1" 200 -
[2017-11-25 13:33:53,068 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-11-25 13:33:53,599 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-11-25 13:33:53,599 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-11-25 13:33:53,599 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-11-25 13:34:08,766 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [25/Nov/2017 13:34:08] "GET / HTTP/1.1" 200 -
[2017-11-25 13:34:08,828 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [25/Nov/2017 13:34:08] "GET /static/css/bootstrap.min.css HTTP/1.1" 200 -
[2017-11-25 13:34:08,828 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [25/Nov/2017 13:34:08] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 200 -
[2017-11-25 13:34:08,828 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [25/Nov/2017 13:34:08] "GET /static/js/bootstrap.min.js HTTP/1.1" 200 -
[2017-11-25 13:34:08,844 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [25/Nov/2017 13:34:08] "GET /static/main.css HTTP/1.1" 200 -
[2017-11-25 13:34:08,906 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [25/Nov/2017 13:34:08] "GET /favicon.ico HTTP/1.1" 404 -
[2017-11-25 13:34:16,954 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [25/Nov/2017 13:34:16] "GET /about HTTP/1.1" 200 -
[2017-11-25 13:34:19,642 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [25/Nov/2017 13:34:19] "GET /form HTTP/1.1" 200 -
[2017-11-25 13:34:24,033 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [25/Nov/2017 13:34:24] "POST /form HTTP/1.1" 200 -
[2017-11-25 13:34:27,252 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [25/Nov/2017 13:34:27] "POST /form HTTP/1.1" 200 -
[2017-11-25 13:34:34,206 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [25/Nov/2017 13:34:34] "GET /files HTTP/1.1" 200 -
[2017-11-25 13:34:40,081 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [25/Nov/2017 13:34:40] "POST /files HTTP/1.1" 200 -
[2017-11-25 13:34:45,663 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [25/Nov/2017 13:34:45] "POST /files HTTP/1.1" 200 -
[2017-11-25 13:34:55,211 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [25/Nov/2017 13:34:55] "GET /contact HTTP/1.1" 200 -
[2017-11-25 13:34:56,601 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [25/Nov/2017 13:34:56] "POST /contact HTTP/1.1" 200 -
[2017-11-25 13:34:59,414 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [25/Nov/2017 13:34:59] "POST /contact HTTP/1.1" 200 -
[2017-11-25 13:35:02,227 : INFO : views.py : 22 :             notes_db() ] started note db form
[2017-11-25 13:35:02,227 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(7, 'wwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwww', '2017-11-21 20:29:11.469973'), (6, 'wwwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:23:59.979252'), (5, 'wwwwww', 'Programming', 'wwwwwww', '2017-11-21 20:23:30.956522'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-25 13:35:02,243 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [25/Nov/2017 13:35:02] "GET /note HTTP/1.1" 200 -
[2017-11-25 13:35:02,305 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [25/Nov/2017 13:35:02] "GET /static/fonts/glyphicons-halflings-regular.woff2 HTTP/1.1" 200 -
[2017-11-25 13:35:07,321 : INFO : views.py : 22 :             notes_db() ] started note db form
[2017-11-25 13:35:07,321 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(7, 'wwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwww', '2017-11-21 20:29:11.469973'), (6, 'wwwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:23:59.979252'), (5, 'wwwwww', 'Programming', 'wwwwwww', '2017-11-21 20:23:30.956522'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-25 13:35:07,337 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [25/Nov/2017 13:35:07] "GET /note HTTP/1.1" 200 -
[2017-11-25 13:35:12,009 : INFO : views.py : 22 :             notes_db() ] started note db form
[2017-11-25 13:35:12,009 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(7, 'wwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwww', '2017-11-21 20:29:11.469973'), (6, 'wwwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:23:59.979252'), (5, 'wwwwww', 'Programming', 'wwwwwww', '2017-11-21 20:23:30.956522'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-25 13:35:12,009 : INFO : views.py : 28 :             notes_db() ] post action
[2017-11-25 13:35:12,009 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [25/Nov/2017 13:35:12] "POST /note HTTP/1.1" 200 -
[2017-11-25 13:35:15,947 : INFO : views.py : 22 :             notes_db() ] started note db form
[2017-11-25 13:35:15,947 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(7, 'wwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwww', '2017-11-21 20:29:11.469973'), (6, 'wwwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:23:59.979252'), (5, 'wwwwww', 'Programming', 'wwwwwww', '2017-11-21 20:23:30.956522'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-25 13:35:15,947 : INFO : views.py : 28 :             notes_db() ] post action
[2017-11-25 13:35:15,963 : DEBUG : sqlalchemy_statments.py : 106 :               delete() ] Delete 1 row, id 7.
[2017-11-25 13:35:15,963 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [25/Nov/2017 13:35:15] "POST /note HTTP/1.1" 200 -
[2017-11-25 13:35:17,763 : INFO : views.py : 22 :             notes_db() ] started note db form
[2017-11-25 13:35:17,763 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(6, 'wwwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:23:59.979252'), (5, 'wwwwww', 'Programming', 'wwwwwww', '2017-11-21 20:23:30.956522'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-25 13:35:17,763 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [25/Nov/2017 13:35:17] "GET /note HTTP/1.1" 200 -
[2017-11-25 13:35:22,498 : INFO : views.py : 22 :             notes_db() ] started note db form
[2017-11-25 13:35:22,498 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(6, 'wwwwwwwwwwwwwwwww', 'Csharp', 'wwwwwwwwwwwwwwwwwwwww', '2017-11-21 20:23:59.979252'), (5, 'wwwwww', 'Programming', 'wwwwwww', '2017-11-21 20:23:30.956522'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-25 13:35:22,498 : INFO : views.py : 28 :             notes_db() ] post action
[2017-11-25 13:35:22,513 : DEBUG : sqlalchemy_statments.py : 106 :               delete() ] Delete 1 row, id 6.
[2017-11-25 13:35:22,513 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [25/Nov/2017 13:35:22] "POST /note HTTP/1.1" 200 -
[2017-11-25 13:35:24,344 : INFO : views.py : 22 :             notes_db() ] started note db form
[2017-11-25 13:35:24,344 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(5, 'wwwwww', 'Programming', 'wwwwwww', '2017-11-21 20:23:30.956522'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-25 13:35:24,344 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [25/Nov/2017 13:35:24] "GET /note HTTP/1.1" 200 -
[2017-11-25 13:35:25,907 : INFO : views.py : 22 :             notes_db() ] started note db form
[2017-11-25 13:35:25,907 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(5, 'wwwwww', 'Programming', 'wwwwwww', '2017-11-21 20:23:30.956522'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-25 13:35:25,907 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [25/Nov/2017 13:35:25] "GET /note HTTP/1.1" 200 -
[2017-11-25 13:35:26,969 : INFO : views.py : 22 :             notes_db() ] started note db form
[2017-11-25 13:35:26,969 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(5, 'wwwwww', 'Programming', 'wwwwwww', '2017-11-21 20:23:30.956522'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-25 13:35:26,969 : INFO : views.py : 28 :             notes_db() ] post action
[2017-11-25 13:35:26,969 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [25/Nov/2017 13:35:26] "POST /note HTTP/1.1" 200 -
[2017-11-25 13:35:38,017 : INFO : views.py : 22 :             notes_db() ] started note db form
[2017-11-25 13:35:38,017 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(5, 'wwwwww', 'Programming', 'wwwwwww', '2017-11-21 20:23:30.956522'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-25 13:35:38,017 : INFO : views.py : 28 :             notes_db() ] post action
[2017-11-25 13:35:38,017 : DEBUG : sqlalchemy_statments.py : 55 :           get_max_id() ] (5,)
[2017-11-25 13:35:38,017 : DEBUG : sqlalchemy_statments.py : 85 :               insert() ] Added 1 row to sqlite3, with id 6
[2017-11-25 13:35:38,017 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [25/Nov/2017 13:35:38] "POST /note HTTP/1.1" 200 -
[2017-11-25 13:35:39,551 : INFO : views.py : 22 :             notes_db() ] started note db form
[2017-11-25 13:35:39,551 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(6, '222222222222', 'Other', '222222222222222222', '2017-11-25 13:35:38.017994'), (5, 'wwwwww', 'Programming', 'wwwwwww', '2017-11-21 20:23:30.956522'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-25 13:35:39,551 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [25/Nov/2017 13:35:39] "GET /note HTTP/1.1" 200 -
[2017-11-25 13:36:33,851 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_form\\views.py', reloading
[2017-11-25 13:36:33,890 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-11-25 13:36:34,561 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-11-25 13:36:34,561 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-11-25 13:36:34,561 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-11-25 13:36:36,701 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_form\\views.py', reloading
[2017-11-25 13:36:36,732 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-11-25 13:36:37,294 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-11-25 13:36:37,296 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-11-25 13:36:37,296 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-11-25 13:37:01,608 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_form\\views.py', reloading
[2017-11-25 13:37:01,640 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-11-25 13:37:02,289 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-11-25 13:37:02,289 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-11-25 13:37:02,304 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-11-25 13:37:50,723 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_form\\views.py', reloading
[2017-11-25 13:37:50,757 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-11-25 13:37:51,373 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-11-25 13:37:51,377 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-11-25 13:37:51,388 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-11-25 13:37:55,458 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-11-25 13:37:56,005 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-11-25 13:37:56,005 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-11-25 13:37:56,021 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-11-25 13:38:14,913 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\run.py', reloading
[2017-11-25 13:38:15,002 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-11-25 13:38:15,755 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-11-25 13:38:15,764 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-11-25 13:38:15,780 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-11-25 13:38:21,376 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-11-25 13:38:21,907 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-11-25 13:38:21,907 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-11-25 13:38:21,907 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-11-25 13:39:04,230 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\__init__.py', reloading
[2017-11-25 13:39:04,257 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-11-25 13:39:04,930 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-11-25 13:39:04,933 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-11-25 13:39:04,942 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-11-25 13:39:42,941 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\__init__.py', reloading
[2017-11-25 13:39:42,972 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-11-25 13:43:27,722 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-11-25 13:43:28,245 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-11-25 13:43:28,245 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-11-25 13:43:28,261 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-11-25 13:43:40,121 : INFO : views.py : 22 :             notes_db() ] started note db form
[2017-11-25 13:43:40,121 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(6, '222222222222', 'Other', '222222222222222222', '2017-11-25 13:35:38.017994'), (5, 'wwwwww', 'Programming', 'wwwwwww', '2017-11-21 20:23:30.956522'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-25 13:43:40,137 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [25/Nov/2017 13:43:40] "GET /note HTTP/1.1" 200 -
[2017-11-25 13:43:43,747 : INFO : views.py : 22 :             notes_db() ] started note db form
[2017-11-25 13:43:43,747 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(6, '222222222222', 'Other', '222222222222222222', '2017-11-25 13:35:38.017994'), (5, 'wwwwww', 'Programming', 'wwwwwww', '2017-11-21 20:23:30.956522'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-25 13:43:43,747 : INFO : views.py : 28 :             notes_db() ] post action
[2017-11-25 13:43:43,747 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [25/Nov/2017 13:43:43] "POST /note HTTP/1.1" 200 -
[2017-11-25 13:43:48,528 : INFO : views.py : 22 :             notes_db() ] started note db form
[2017-11-25 13:43:48,528 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(6, '222222222222', 'Other', '222222222222222222', '2017-11-25 13:35:38.017994'), (5, 'wwwwww', 'Programming', 'wwwwwww', '2017-11-21 20:23:30.956522'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-25 13:43:48,528 : INFO : views.py : 28 :             notes_db() ] post action
[2017-11-25 13:43:48,528 : DEBUG : sqlalchemy_statments.py : 106 :               delete() ] Delete 1 row, id 6.
[2017-11-25 13:43:48,528 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [25/Nov/2017 13:43:48] "POST /note HTTP/1.1" 200 -
[2017-11-25 13:43:50,125 : INFO : views.py : 22 :             notes_db() ] started note db form
[2017-11-25 13:43:50,125 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(5, 'wwwwww', 'Programming', 'wwwwwww', '2017-11-21 20:23:30.956522'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-25 13:43:50,125 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [25/Nov/2017 13:43:50] "GET /note HTTP/1.1" 200 -
[2017-11-25 13:43:51,875 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [25/Nov/2017 13:43:51] "GET /about HTTP/1.1" 200 -
[2017-11-25 13:44:04,622 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [25/Nov/2017 13:44:04] "GET /form HTTP/1.1" 200 -
[2017-11-25 13:44:29,492 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_tips\\views.py', reloading
[2017-11-25 13:44:29,537 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-11-25 13:44:30,098 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-11-25 13:44:30,098 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-11-25 13:44:30,098 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-11-25 13:44:30,559 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [25/Nov/2017 13:44:30] "POST /form HTTP/1.1" 200 -
[2017-11-25 13:44:34,522 : INFO : views.py : 22 :             notes_db() ] started note db form
[2017-11-25 13:44:34,538 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(5, 'wwwwww', 'Programming', 'wwwwwww', '2017-11-21 20:23:30.956522'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-25 13:44:34,538 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [25/Nov/2017 13:44:34] "GET /note HTTP/1.1" 200 -
[2017-11-25 13:44:39,570 : INFO : views.py : 22 :             notes_db() ] started note db form
[2017-11-25 13:44:39,570 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(5, 'wwwwww', 'Programming', 'wwwwwww', '2017-11-21 20:23:30.956522'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-25 13:44:39,570 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [25/Nov/2017 13:44:39] "GET /note HTTP/1.1" 200 -
[2017-11-25 13:44:43,742 : INFO : views.py : 22 :             notes_db() ] started note db form
[2017-11-25 13:44:43,742 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(5, 'wwwwww', 'Programming', 'wwwwwww', '2017-11-21 20:23:30.956522'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-25 13:44:43,742 : INFO : views.py : 28 :             notes_db() ] post action
[2017-11-25 13:44:43,758 : DEBUG : sqlalchemy_statments.py : 106 :               delete() ] Delete 1 row, id 5.
[2017-11-25 13:44:43,758 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [25/Nov/2017 13:44:43] "POST /note HTTP/1.1" 200 -
[2017-11-25 13:44:45,885 : INFO : views.py : 22 :             notes_db() ] started note db form
[2017-11-25 13:44:45,885 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-25 13:44:45,885 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [25/Nov/2017 13:44:45] "GET /note HTTP/1.1" 200 -
[2017-11-25 13:52:37,355 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-11-25 13:52:37,899 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-11-25 13:52:37,899 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-11-25 13:52:37,915 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-11-25 13:52:59,217 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [25/Nov/2017 13:52:59] "GET / HTTP/1.1" 200 -
[2017-11-25 13:53:01,467 : INFO : views.py : 22 :             notes_db() ] started note db form
[2017-11-25 13:53:01,467 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-25 13:53:01,467 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [25/Nov/2017 13:53:01] "GET /note HTTP/1.1" 200 -
[2017-11-25 13:53:03,139 : INFO : views.py : 22 :             notes_db() ] started note db form
[2017-11-25 13:53:03,139 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-25 13:53:03,139 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [25/Nov/2017 13:53:03] "GET /note HTTP/1.1" 200 -
[2017-11-25 13:53:06,280 : INFO : views.py : 22 :             notes_db() ] started note db form
[2017-11-25 13:53:06,280 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-25 13:53:06,296 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [25/Nov/2017 13:53:06] "GET /note HTTP/1.1" 200 -
[2017-11-25 13:53:14,062 : INFO : views.py : 22 :             notes_db() ] started note db form
[2017-11-25 13:53:14,062 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-25 13:53:14,062 : INFO : views.py : 28 :             notes_db() ] post action
[2017-11-25 13:53:14,062 : DEBUG : sqlalchemy_statments.py : 55 :           get_max_id() ] (4,)
[2017-11-25 13:53:14,062 : DEBUG : sqlalchemy_statments.py : 85 :               insert() ] Added 1 row to sqlite3, with id 5
[2017-11-25 13:53:14,062 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [25/Nov/2017 13:53:14] "POST /note HTTP/1.1" 200 -
[2017-11-25 13:53:19,190 : INFO : views.py : 22 :             notes_db() ] started note db form
[2017-11-25 13:53:19,190 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-25 13:53:19,205 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [25/Nov/2017 13:53:19] "GET /note HTTP/1.1" 200 -
[2017-11-25 13:53:30,238 : INFO : views.py : 22 :             notes_db() ] started note db form
[2017-11-25 13:53:30,238 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-25 13:53:30,238 : INFO : views.py : 28 :             notes_db() ] post action
[2017-11-25 13:53:30,238 : DEBUG : sqlalchemy_statments.py : 55 :           get_max_id() ] (5,)
[2017-11-25 13:53:30,238 : DEBUG : sqlalchemy_statments.py : 85 :               insert() ] Added 1 row to sqlite3, with id 6
[2017-11-25 13:53:30,238 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [25/Nov/2017 13:53:30] "POST /note HTTP/1.1" 200 -
[2017-11-25 13:53:59,125 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-11-25 13:53:59,162 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-11-25 13:53:59,875 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-11-25 13:53:59,879 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-11-25 13:53:59,887 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-11-25 13:54:07,163 : INFO : views.py : 22 :             notes_db() ] started note db form
[2017-11-25 13:54:07,178 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-25 13:54:07,178 : INFO : views.py : 28 :             notes_db() ] post action
[2017-11-25 13:54:07,178 : DEBUG : sqlalchemy_statments.py : 55 :           get_max_id() ] (6,)
[2017-11-25 13:54:07,178 : DEBUG : sqlalchemy_statments.py : 85 :               insert() ] Added 1 row to sqlite3, with id 7
[2017-11-25 13:54:07,194 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [25/Nov/2017 13:54:07] "POST /note HTTP/1.1" 200 -
[2017-11-25 13:54:10,311 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-11-25 13:54:10,403 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-11-25 13:54:11,021 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-11-25 13:54:11,037 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-11-25 13:54:11,037 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-11-25 13:54:11,178 : INFO : views.py : 22 :             notes_db() ] started note db form
[2017-11-25 13:54:11,178 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-25 13:54:11,224 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [25/Nov/2017 13:54:11] "GET /note HTTP/1.1" 200 -
[2017-11-25 13:54:14,204 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-11-25 13:54:14,276 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-11-25 13:54:14,885 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-11-25 13:54:14,885 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-11-25 13:54:14,885 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-11-25 13:54:20,208 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-11-25 13:54:20,239 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-11-25 13:54:20,864 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-11-25 13:54:20,867 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-11-25 13:54:20,874 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-11-25 20:54:05,837 : INFO : views.py : 22 :             notes_db() ] started note db form
[2017-11-25 20:54:05,852 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-25 20:54:05,868 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [25/Nov/2017 20:54:05] "GET /note HTTP/1.1" 200 -
[2017-11-25 20:54:05,883 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [25/Nov/2017 20:54:05] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-11-25 20:54:05,883 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [25/Nov/2017 20:54:05] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-11-25 20:54:05,899 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [25/Nov/2017 20:54:05] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-11-25 20:54:05,899 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [25/Nov/2017 20:54:05] "GET /static/main.css HTTP/1.1" 304 -
[2017-11-25 20:55:07,664 : INFO : views.py : 22 :             notes_db() ] started note db form
[2017-11-25 20:55:07,664 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-25 20:55:07,664 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [25/Nov/2017 20:55:07] "GET /note HTTP/1.1" 200 -
[2017-11-25 20:55:07,679 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [25/Nov/2017 20:55:07] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-11-25 20:55:07,695 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [25/Nov/2017 20:55:07] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-11-25 20:55:07,695 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [25/Nov/2017 20:55:07] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-11-25 20:55:07,695 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [25/Nov/2017 20:55:07] "GET /static/main.css HTTP/1.1" 304 -
[2017-11-25 20:55:07,726 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [25/Nov/2017 20:55:07] "GET /static/fonts/glyphicons-halflings-regular.woff2 HTTP/1.1" 304 -
[2017-11-25 20:55:30,197 : INFO : views.py : 22 :             notes_db() ] started note db form
[2017-11-25 20:55:30,197 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-25 20:55:30,197 : INFO : views.py : 28 :             notes_db() ] post action
[2017-11-25 20:55:30,213 : DEBUG : sqlalchemy_statments.py : 55 :           get_max_id() ] (7,)
[2017-11-25 20:55:30,213 : DEBUG : sqlalchemy_statments.py : 85 :               insert() ] Added 1 row to sqlite3, with id 8
[2017-11-25 20:55:30,213 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [25/Nov/2017 20:55:30] "POST /note HTTP/1.1" 200 -
[2017-11-25 20:55:33,137 : INFO : views.py : 22 :             notes_db() ] started note db form
[2017-11-25 20:55:33,137 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-25 20:55:33,137 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [25/Nov/2017 20:55:33] "GET /note HTTP/1.1" 200 -
[2017-11-25 20:56:03,911 : INFO : views.py : 22 :             notes_db() ] started note db form
[2017-11-25 20:56:03,911 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-25 20:56:03,927 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [25/Nov/2017 20:56:03] "GET /note HTTP/1.1" 200 -
[2017-11-25 20:57:42,843 : INFO : views.py : 22 :             notes_db() ] started note db form
[2017-11-25 20:57:42,843 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-25 20:57:42,858 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [25/Nov/2017 20:57:42] "GET /note HTTP/1.1" 200 -
[2017-11-25 20:57:42,874 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [25/Nov/2017 20:57:42] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-11-25 20:57:42,874 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [25/Nov/2017 20:57:42] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-11-25 20:57:42,874 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [25/Nov/2017 20:57:42] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-11-25 20:57:42,874 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [25/Nov/2017 20:57:42] "GET /static/main.css HTTP/1.1" 304 -
[2017-11-25 20:58:08,782 : INFO : views.py : 22 :             notes_db() ] started note db form
[2017-11-25 20:58:08,782 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-25 20:58:08,798 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [25/Nov/2017 20:58:08] "GET /note HTTP/1.1" 200 -
[2017-11-25 20:58:23,314 : INFO : views.py : 22 :             notes_db() ] started note db form
[2017-11-25 20:58:23,314 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-11-25 20:58:23,314 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [25/Nov/2017 20:58:23] "GET /note HTTP/1.1" 200 -
[2017-11-25 20:58:23,329 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [25/Nov/2017 20:58:23] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-11-25 20:58:23,345 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [25/Nov/2017 20:58:23] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-11-25 20:58:23,345 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [25/Nov/2017 20:58:23] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-11-25 20:58:23,345 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [25/Nov/2017 20:58:23] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-01 23:13:17,318 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-01 23:13:17,869 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-01 23:13:17,869 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-01 23:13:17,884 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-01 23:13:34,191 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [01/Dec/2017 23:13:34] "GET / HTTP/1.1" 200 -
[2017-12-01 23:13:34,222 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [01/Dec/2017 23:13:34] "GET /static/css/bootstrap.min.css HTTP/1.1" 200 -
[2017-12-01 23:13:34,222 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [01/Dec/2017 23:13:34] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 200 -
[2017-12-01 23:13:34,222 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [01/Dec/2017 23:13:34] "GET /static/js/bootstrap.min.js HTTP/1.1" 200 -
[2017-12-01 23:13:34,238 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [01/Dec/2017 23:13:34] "GET /static/main.css HTTP/1.1" 200 -
[2017-12-01 23:13:34,285 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [01/Dec/2017 23:13:34] "GET /favicon.ico HTTP/1.1" 404 -
[2017-12-01 23:13:44,661 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [01/Dec/2017 23:13:44] "GET /grafana HTTP/1.1" 200 -
[2017-12-01 23:13:44,692 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [01/Dec/2017 23:13:44] "GET /static/img/grafana/grafana_start.jpg HTTP/1.1" 200 -
[2017-12-01 23:13:44,708 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [01/Dec/2017 23:13:44] "GET /static/img/grafana/grafana_dash.jpg HTTP/1.1" 200 -
[2017-12-01 23:13:44,708 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [01/Dec/2017 23:13:44] "GET /static/img/grafana/table_postgre.jpg HTTP/1.1" 200 -
[2017-12-01 23:13:44,708 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [01/Dec/2017 23:13:44] "GET /static/img/grafana/grafana_datasource.jpg HTTP/1.1" 200 -
[2017-12-01 23:13:44,723 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [01/Dec/2017 23:13:44] "GET /static/img/grafana/grafana_panel.jpg HTTP/1.1" 200 -
[2017-12-01 23:13:44,723 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [01/Dec/2017 23:13:44] "GET /static/img/grafana/grafana_query.jpg HTTP/1.1" 200 -
[2017-12-01 23:13:44,723 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [01/Dec/2017 23:13:44] "GET /static/img/grafana/grafana_result.jpg HTTP/1.1" 200 -
[2017-12-01 23:13:52,724 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [01/Dec/2017 23:13:52] "GET /grafana HTTP/1.1" 200 -
[2017-12-01 23:17:12,037 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_technology\\views.py', reloading
[2017-12-01 23:17:12,069 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-01 23:17:12,744 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-01 23:17:12,744 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-01 23:17:12,760 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-01 23:17:24,473 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\config.py', reloading
[2017-12-01 23:17:24,515 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-01 23:17:25,098 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-01 23:17:25,098 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-01 23:17:25,114 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-01 23:17:53,562 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_home\\views.py', reloading
[2017-12-01 23:17:53,600 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-01 23:17:54,174 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-01 23:17:54,177 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-01 23:17:54,185 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-01 23:17:56,303 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_home\\views.py', reloading
[2017-12-01 23:17:56,331 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-01 23:17:56,880 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-01 23:17:56,880 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-01 23:17:56,896 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-01 23:29:45,471 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_home\\views.py', reloading
[2017-12-01 23:29:45,553 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-01 23:29:46,197 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-01 23:29:46,197 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-01 23:29:46,213 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-01 23:30:27,451 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_home\\views.py', reloading
[2017-12-01 23:30:27,500 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-01 23:30:46,003 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-01 23:30:46,534 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-01 23:30:46,534 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-01 23:30:46,550 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-01 23:30:52,425 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [01/Dec/2017 23:30:52] "GET /sess HTTP/1.1" 500 -
[2017-12-01 23:30:52,457 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [01/Dec/2017 23:30:52] "GET /sess?__debugger__=yes&cmd=resource&f=style.css HTTP/1.1" 200 -
[2017-12-01 23:30:52,457 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [01/Dec/2017 23:30:52] "GET /sess?__debugger__=yes&cmd=resource&f=jquery.js HTTP/1.1" 200 -
[2017-12-01 23:30:52,504 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [01/Dec/2017 23:30:52] "GET /sess?__debugger__=yes&cmd=resource&f=debugger.js HTTP/1.1" 200 -
[2017-12-01 23:30:52,519 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [01/Dec/2017 23:30:52] "GET /sess?__debugger__=yes&cmd=resource&f=console.png HTTP/1.1" 200 -
[2017-12-01 23:30:52,566 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [01/Dec/2017 23:30:52] "GET /sess?__debugger__=yes&cmd=resource&f=ubuntu.ttf HTTP/1.1" 200 -
[2017-12-01 23:30:52,566 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [01/Dec/2017 23:30:52] "GET /sess?__debugger__=yes&cmd=resource&f=console.png HTTP/1.1" 200 -
[2017-12-01 23:31:04,446 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_home\\views.py', reloading
[2017-12-01 23:31:04,477 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-01 23:31:05,095 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-01 23:31:05,100 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-01 23:31:05,110 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-01 23:31:09,279 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_home\\views.py', reloading
[2017-12-01 23:31:09,316 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-01 23:31:09,987 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-01 23:31:09,991 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-01 23:31:10,002 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-01 23:31:19,900 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [01/Dec/2017 23:31:19] "GET /sess HTTP/1.1" 200 -
[2017-12-01 23:31:19,931 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [01/Dec/2017 23:31:19] "GET / HTTP/1.1" 200 -
[2017-12-01 23:31:23,510 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [01/Dec/2017 23:31:23] "GET /sess HTTP/1.1" 200 -
[2017-12-01 23:32:52,142 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_home\\views.py', reloading
[2017-12-01 23:32:52,177 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-01 23:32:52,845 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-01 23:32:52,850 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-01 23:32:52,858 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-01 23:32:58,118 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_home\\views.py', reloading
[2017-12-01 23:32:58,165 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-01 23:32:58,865 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-01 23:32:58,881 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-01 23:32:58,881 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-01 23:33:01,028 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_home\\views.py', reloading
[2017-12-01 23:33:01,088 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-01 23:33:01,668 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-01 23:33:01,668 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-01 23:33:01,668 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-01 23:40:02,620 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_home\\views.py', reloading
[2017-12-01 23:40:02,651 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-01 23:40:03,267 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-01 23:40:03,283 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-01 23:40:03,283 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-01 23:40:05,360 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_home\\views.py', reloading
[2017-12-01 23:40:05,406 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-01 23:40:05,971 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-01 23:40:05,971 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-01 23:40:05,971 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-01 23:40:09,048 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_home\\views.py', reloading
[2017-12-01 23:40:09,157 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-01 23:40:09,808 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-01 23:40:09,811 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-01 23:40:09,820 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-01 23:40:19,025 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [01/Dec/2017 23:40:19] "GET /login HTTP/1.1" 500 -
[2017-12-01 23:40:19,056 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [01/Dec/2017 23:40:19] "GET /login?__debugger__=yes&cmd=resource&f=style.css HTTP/1.1" 200 -
[2017-12-01 23:40:19,056 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [01/Dec/2017 23:40:19] "GET /login?__debugger__=yes&cmd=resource&f=jquery.js HTTP/1.1" 200 -
[2017-12-01 23:40:19,056 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [01/Dec/2017 23:40:19] "GET /login?__debugger__=yes&cmd=resource&f=debugger.js HTTP/1.1" 200 -
[2017-12-01 23:40:19,088 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [01/Dec/2017 23:40:19] "GET /login?__debugger__=yes&cmd=resource&f=console.png HTTP/1.1" 200 -
[2017-12-01 23:40:19,119 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [01/Dec/2017 23:40:19] "GET /login?__debugger__=yes&cmd=resource&f=ubuntu.ttf HTTP/1.1" 200 -
[2017-12-01 23:40:19,150 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [01/Dec/2017 23:40:19] "GET /login?__debugger__=yes&cmd=resource&f=console.png HTTP/1.1" 200 -
[2017-12-01 23:42:42,055 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_home\\views.py', reloading
[2017-12-01 23:42:42,100 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-01 23:42:42,710 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-01 23:42:42,713 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-01 23:42:42,721 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-01 23:42:54,263 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [01/Dec/2017 23:42:54] "GET /login HTTP/1.1" 200 -
[2017-12-01 23:42:54,263 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [01/Dec/2017 23:42:54] "GET / HTTP/1.1" 200 -
[2017-12-01 23:42:58,279 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [01/Dec/2017 23:42:58] "GET /login HTTP/1.1" 200 -
[2017-12-01 23:43:33,283 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [01/Dec/2017 23:43:33] "GET /login HTTP/1.1" 200 -
[2017-12-01 23:43:45,849 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [01/Dec/2017 23:43:45] "GET /login HTTP/1.1" 200 -
[2017-12-01 23:43:45,864 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [01/Dec/2017 23:43:45] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-01 23:43:45,880 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [01/Dec/2017 23:43:45] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-01 23:43:45,880 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [01/Dec/2017 23:43:45] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-01 23:43:45,880 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [01/Dec/2017 23:43:45] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-01 23:43:56,598 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [01/Dec/2017 23:43:56] "GET /login HTTP/1.1" 200 -
[2017-12-01 23:43:56,617 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [01/Dec/2017 23:43:56] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-01 23:43:56,619 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [01/Dec/2017 23:43:56] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-01 23:43:56,622 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [01/Dec/2017 23:43:56] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-01 23:43:56,625 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [01/Dec/2017 23:43:56] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-01 23:44:22,588 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [01/Dec/2017 23:44:22] "POST /login HTTP/1.1" 500 -
[2017-12-01 23:44:22,603 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [01/Dec/2017 23:44:22] "GET /login?__debugger__=yes&cmd=resource&f=style.css HTTP/1.1" 200 -
[2017-12-01 23:44:22,603 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [01/Dec/2017 23:44:22] "GET /login?__debugger__=yes&cmd=resource&f=jquery.js HTTP/1.1" 200 -
[2017-12-01 23:44:22,619 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [01/Dec/2017 23:44:22] "GET /login?__debugger__=yes&cmd=resource&f=debugger.js HTTP/1.1" 200 -
[2017-12-01 23:44:22,634 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [01/Dec/2017 23:44:22] "GET /login?__debugger__=yes&cmd=resource&f=ubuntu.ttf HTTP/1.1" 200 -
[2017-12-01 23:44:22,650 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [01/Dec/2017 23:44:22] "GET /login?__debugger__=yes&cmd=resource&f=console.png HTTP/1.1" 200 -
[2017-12-01 23:44:22,713 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [01/Dec/2017 23:44:22] "GET /login?__debugger__=yes&cmd=resource&f=console.png HTTP/1.1" 200 -
[2017-12-01 23:45:06,556 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_home\\views.py', reloading
[2017-12-01 23:45:06,571 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-01 23:45:07,230 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-01 23:45:07,230 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-01 23:45:07,245 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-01 23:45:18,836 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_home\\views.py', reloading
[2017-12-01 23:45:18,867 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-01 23:45:19,527 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-01 23:45:19,531 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-01 23:45:19,539 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-01 23:45:36,932 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [01/Dec/2017 23:45:36] "GET /login HTTP/1.1" 200 -
[2017-12-01 23:45:40,963 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [01/Dec/2017 23:45:40] "POST /login HTTP/1.1" 500 -
[2017-12-01 23:45:40,979 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [01/Dec/2017 23:45:40] "GET /login?__debugger__=yes&cmd=resource&f=style.css HTTP/1.1" 200 -
[2017-12-01 23:45:40,979 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [01/Dec/2017 23:45:40] "GET /login?__debugger__=yes&cmd=resource&f=jquery.js HTTP/1.1" 200 -
[2017-12-01 23:45:40,979 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [01/Dec/2017 23:45:40] "GET /login?__debugger__=yes&cmd=resource&f=debugger.js HTTP/1.1" 200 -
[2017-12-01 23:45:41,010 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [01/Dec/2017 23:45:41] "GET /login?__debugger__=yes&cmd=resource&f=console.png HTTP/1.1" 200 -
[2017-12-01 23:45:41,088 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [01/Dec/2017 23:45:41] "GET /login?__debugger__=yes&cmd=resource&f=console.png HTTP/1.1" 200 -
[2017-12-01 23:47:09,616 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_home\\views.py', reloading
[2017-12-01 23:47:09,650 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-01 23:47:10,330 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-01 23:47:10,334 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-01 23:47:10,342 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-01 23:47:39,358 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [01/Dec/2017 23:47:39] "GET /login HTTP/1.1" 200 -
[2017-12-01 23:47:42,014 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [01/Dec/2017 23:47:42] "POST /login HTTP/1.1" 500 -
[2017-12-01 23:47:42,030 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [01/Dec/2017 23:47:42] "GET /login?__debugger__=yes&cmd=resource&f=style.css HTTP/1.1" 200 -
[2017-12-01 23:47:42,030 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [01/Dec/2017 23:47:42] "GET /login?__debugger__=yes&cmd=resource&f=jquery.js HTTP/1.1" 200 -
[2017-12-01 23:47:42,030 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [01/Dec/2017 23:47:42] "GET /login?__debugger__=yes&cmd=resource&f=debugger.js HTTP/1.1" 200 -
[2017-12-01 23:47:42,061 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [01/Dec/2017 23:47:42] "GET /login?__debugger__=yes&cmd=resource&f=console.png HTTP/1.1" 200 -
[2017-12-01 23:47:42,139 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [01/Dec/2017 23:47:42] "GET /login?__debugger__=yes&cmd=resource&f=console.png HTTP/1.1" 200 -
[2017-12-01 23:47:51,359 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [01/Dec/2017 23:47:51] "GET /login HTTP/1.1" 200 -
[2017-12-01 23:47:55,781 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [01/Dec/2017 23:47:55] "POST /login HTTP/1.1" 500 -
[2017-12-01 23:47:55,797 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [01/Dec/2017 23:47:55] "GET /login?__debugger__=yes&cmd=resource&f=style.css HTTP/1.1" 200 -
[2017-12-01 23:47:55,797 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [01/Dec/2017 23:47:55] "GET /login?__debugger__=yes&cmd=resource&f=jquery.js HTTP/1.1" 200 -
[2017-12-01 23:47:55,812 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [01/Dec/2017 23:47:55] "GET /login?__debugger__=yes&cmd=resource&f=debugger.js HTTP/1.1" 200 -
[2017-12-01 23:47:55,844 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [01/Dec/2017 23:47:55] "GET /login?__debugger__=yes&cmd=resource&f=console.png HTTP/1.1" 200 -
[2017-12-01 23:47:55,906 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [01/Dec/2017 23:47:55] "GET /login?__debugger__=yes&cmd=resource&f=console.png HTTP/1.1" 200 -
[2017-12-01 23:50:11,234 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_home\\views.py', reloading
[2017-12-01 23:50:11,266 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-01 23:50:11,903 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-01 23:50:11,906 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-01 23:50:11,913 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-01 23:50:13,984 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_home\\views.py', reloading
[2017-12-01 23:50:14,038 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-01 23:50:14,656 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-01 23:50:14,659 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-01 23:50:14,669 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-01 23:50:31,537 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_home\\views.py', reloading
[2017-12-01 23:50:31,565 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-01 23:50:32,136 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-01 23:50:32,136 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-01 23:50:32,152 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-01 23:51:02,560 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_home\\views.py', reloading
[2017-12-01 23:51:02,600 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-01 23:51:03,173 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-01 23:51:03,176 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-01 23:51:03,184 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-01 23:51:06,337 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_home\\views.py', reloading
[2017-12-01 23:51:06,389 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-01 23:51:06,953 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-01 23:51:06,953 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-01 23:51:06,953 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-01 23:51:25,295 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [01/Dec/2017 23:51:25] "GET /login HTTP/1.1" 200 -
[2017-12-01 23:51:29,795 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [01/Dec/2017 23:51:29] "POST /login HTTP/1.1" 500 -
[2017-12-01 23:51:29,811 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [01/Dec/2017 23:51:29] "GET /login?__debugger__=yes&cmd=resource&f=style.css HTTP/1.1" 200 -
[2017-12-01 23:51:29,811 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [01/Dec/2017 23:51:29] "GET /login?__debugger__=yes&cmd=resource&f=jquery.js HTTP/1.1" 200 -
[2017-12-01 23:51:29,811 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [01/Dec/2017 23:51:29] "GET /login?__debugger__=yes&cmd=resource&f=debugger.js HTTP/1.1" 200 -
[2017-12-01 23:51:29,858 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [01/Dec/2017 23:51:29] "GET /login?__debugger__=yes&cmd=resource&f=console.png HTTP/1.1" 200 -
[2017-12-01 23:51:29,920 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [01/Dec/2017 23:51:29] "GET /login?__debugger__=yes&cmd=resource&f=console.png HTTP/1.1" 200 -
[2017-12-01 23:52:12,101 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_home\\views.py', reloading
[2017-12-01 23:52:12,154 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-01 23:52:12,799 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-01 23:52:12,804 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-01 23:52:12,814 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-01 23:52:20,320 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [01/Dec/2017 23:52:20] "GET /login HTTP/1.1" 200 -
[2017-12-01 23:52:23,508 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [01/Dec/2017 23:52:23] "POST /login HTTP/1.1" 500 -
[2017-12-01 23:52:23,539 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [01/Dec/2017 23:52:23] "GET /login?__debugger__=yes&cmd=resource&f=style.css HTTP/1.1" 200 -
[2017-12-01 23:52:23,539 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [01/Dec/2017 23:52:23] "GET /login?__debugger__=yes&cmd=resource&f=jquery.js HTTP/1.1" 200 -
[2017-12-01 23:52:23,539 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [01/Dec/2017 23:52:23] "GET /login?__debugger__=yes&cmd=resource&f=debugger.js HTTP/1.1" 200 -
[2017-12-01 23:52:23,571 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [01/Dec/2017 23:52:23] "GET /login?__debugger__=yes&cmd=resource&f=console.png HTTP/1.1" 200 -
[2017-12-01 23:52:23,633 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [01/Dec/2017 23:52:23] "GET /login?__debugger__=yes&cmd=resource&f=console.png HTTP/1.1" 200 -
[2017-12-01 23:53:42,213 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\__init__.py', reloading
[2017-12-01 23:53:42,253 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-01 23:53:42,877 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-01 23:53:42,881 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-01 23:53:42,888 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-01 23:53:48,636 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-01 23:53:49,168 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-01 23:53:49,168 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-01 23:53:49,183 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-01 23:53:57,466 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [01/Dec/2017 23:53:57] "GET /login HTTP/1.1" 200 -
[2017-12-01 23:54:00,872 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [01/Dec/2017 23:54:00] "POST /login HTTP/1.1" 500 -
[2017-12-01 23:54:00,888 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [01/Dec/2017 23:54:00] "GET /login?__debugger__=yes&cmd=resource&f=style.css HTTP/1.1" 200 -
[2017-12-01 23:54:00,888 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [01/Dec/2017 23:54:00] "GET /login?__debugger__=yes&cmd=resource&f=jquery.js HTTP/1.1" 200 -
[2017-12-01 23:54:00,904 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [01/Dec/2017 23:54:00] "GET /login?__debugger__=yes&cmd=resource&f=debugger.js HTTP/1.1" 200 -
[2017-12-01 23:54:00,935 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [01/Dec/2017 23:54:00] "GET /login?__debugger__=yes&cmd=resource&f=console.png HTTP/1.1" 200 -
[2017-12-01 23:54:00,997 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [01/Dec/2017 23:54:00] "GET /login?__debugger__=yes&cmd=resource&f=console.png HTTP/1.1" 200 -
[2017-12-01 23:54:08,081 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\__init__.py', reloading
[2017-12-01 23:54:08,117 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-01 23:54:08,820 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-01 23:54:08,824 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-01 23:54:08,831 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-01 23:56:57,050 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-01 23:56:57,596 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-01 23:56:57,596 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-01 23:56:57,612 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-01 23:57:08,479 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [01/Dec/2017 23:57:08] "GET /login HTTP/1.1" 200 -
[2017-12-01 23:57:12,354 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [01/Dec/2017 23:57:12] "POST /login HTTP/1.1" 500 -
[2017-12-01 23:57:12,370 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [01/Dec/2017 23:57:12] "GET /login?__debugger__=yes&cmd=resource&f=style.css HTTP/1.1" 200 -
[2017-12-01 23:57:12,370 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [01/Dec/2017 23:57:12] "GET /login?__debugger__=yes&cmd=resource&f=jquery.js HTTP/1.1" 200 -
[2017-12-01 23:57:12,370 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [01/Dec/2017 23:57:12] "GET /login?__debugger__=yes&cmd=resource&f=debugger.js HTTP/1.1" 200 -
[2017-12-01 23:57:12,401 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [01/Dec/2017 23:57:12] "GET /login?__debugger__=yes&cmd=resource&f=console.png HTTP/1.1" 200 -
[2017-12-01 23:57:12,479 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [01/Dec/2017 23:57:12] "GET /login?__debugger__=yes&cmd=resource&f=console.png HTTP/1.1" 200 -
[2017-12-02 00:00:13,237 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_home\\views.py', reloading
[2017-12-02 00:00:13,283 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-02 00:00:13,909 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-02 00:00:13,912 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-02 00:00:13,920 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-02 00:00:17,005 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_home\\views.py', reloading
[2017-12-02 00:00:17,036 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-02 00:00:17,687 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-02 00:00:17,687 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-02 00:00:17,703 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-02 00:00:19,858 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_home\\views.py', reloading
[2017-12-02 00:00:19,955 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-02 00:00:20,593 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-02 00:00:20,611 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-02 00:00:20,618 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-02 00:00:29,049 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_home\\views.py', reloading
[2017-12-02 00:00:29,135 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-02 00:00:29,795 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-02 00:00:29,799 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-02 00:00:29,808 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-02 00:00:56,077 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_home\\views.py', reloading
[2017-12-02 00:00:56,108 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-02 00:00:56,744 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-02 00:00:56,747 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-02 00:00:56,756 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-02 00:00:57,776 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_home\\views.py', reloading
[2017-12-02 00:00:57,812 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-02 00:00:58,421 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-02 00:00:58,423 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-02 00:00:58,431 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-02 00:01:10,249 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:01:10] "GET /login HTTP/1.1" 200 -
[2017-12-02 00:01:12,362 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:01:12] "POST /login HTTP/1.1" 200 -
[2017-12-02 00:02:20,988 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_home\\views.py', reloading
[2017-12-02 00:02:21,020 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-02 00:02:21,654 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-02 00:02:21,654 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-02 00:02:21,654 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-02 00:02:30,444 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:02:30] "GET /login HTTP/1.1" 200 -
[2017-12-02 00:02:31,569 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:02:31] "POST /login HTTP/1.1" 200 -
[2017-12-02 00:02:38,945 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:02:38] "POST /login HTTP/1.1" 200 -
[2017-12-02 00:03:11,379 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_home\\views.py', reloading
[2017-12-02 00:03:11,410 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-02 00:03:12,074 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-02 00:03:12,077 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-02 00:03:12,085 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-02 00:03:20,351 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:03:20] "GET /login HTTP/1.1" 200 -
[2017-12-02 00:03:22,117 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:03:22] "POST /login HTTP/1.1" 200 -
[2017-12-02 00:03:27,242 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:03:27] "POST /login HTTP/1.1" 200 -
[2017-12-02 00:03:36,290 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:03:36] "GET /login HTTP/1.1" 200 -
[2017-12-02 00:03:42,338 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:03:42] "POST /login HTTP/1.1" 200 -
[2017-12-02 00:05:57,641 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_home\\views.py', reloading
[2017-12-02 00:05:57,657 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-02 00:05:58,342 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-02 00:05:58,345 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-02 00:05:58,358 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-02 00:06:05,815 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:06:05] "GET /login HTTP/1.1" 200 -
[2017-12-02 00:06:10,456 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:06:10] "POST /login HTTP/1.1" 200 -
[2017-12-02 00:07:13,526 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_home\\views.py', reloading
[2017-12-02 00:07:13,557 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-02 00:07:14,252 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-02 00:07:14,255 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-02 00:07:14,264 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-02 00:07:22,326 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:07:22] "GET /login HTTP/1.1" 200 -
[2017-12-02 00:07:26,754 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:07:26] "POST /login HTTP/1.1" 200 -
[2017-12-02 00:07:53,393 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_home\\views.py', reloading
[2017-12-02 00:07:53,424 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-02 00:07:54,085 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-02 00:07:54,088 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-02 00:07:54,095 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-02 00:07:56,158 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_home\\views.py', reloading
[2017-12-02 00:07:56,195 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-02 00:07:56,781 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-02 00:07:56,785 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-02 00:07:56,798 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-02 00:08:02,993 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:08:02] "GET /login HTTP/1.1" 200 -
[2017-12-02 00:08:05,227 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:08:05] "POST /login HTTP/1.1" 200 -
[2017-12-02 00:08:09,540 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:08:09] "POST /login HTTP/1.1" 200 -
[2017-12-02 00:08:10,947 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:08:10] "POST /login HTTP/1.1" 200 -
[2017-12-02 00:08:11,900 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:08:11] "POST /login HTTP/1.1" 200 -
[2017-12-02 00:08:17,557 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:08:17] "POST /login HTTP/1.1" 200 -
[2017-12-02 00:08:30,949 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:08:30] "POST /login HTTP/1.1" 500 -
[2017-12-02 00:08:30,964 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:08:30] "GET /login?__debugger__=yes&cmd=resource&f=style.css HTTP/1.1" 200 -
[2017-12-02 00:08:30,964 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:08:30] "GET /login?__debugger__=yes&cmd=resource&f=jquery.js HTTP/1.1" 200 -
[2017-12-02 00:08:30,996 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:08:30] "GET /login?__debugger__=yes&cmd=resource&f=debugger.js HTTP/1.1" 200 -
[2017-12-02 00:08:31,011 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:08:31] "GET /login?__debugger__=yes&cmd=resource&f=console.png HTTP/1.1" 200 -
[2017-12-02 00:08:31,074 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:08:31] "GET /login?__debugger__=yes&cmd=resource&f=ubuntu.ttf HTTP/1.1" 200 -
[2017-12-02 00:08:31,089 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:08:31] "GET /login?__debugger__=yes&cmd=resource&f=console.png HTTP/1.1" 200 -
[2017-12-02 00:08:44,203 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_home\\views.py', reloading
[2017-12-02 00:08:44,241 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-02 00:08:44,839 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-02 00:08:44,842 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-02 00:08:44,852 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-02 00:08:51,983 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:08:51] "GET /login HTTP/1.1" 200 -
[2017-12-02 00:08:56,515 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:08:56] "POST /login HTTP/1.1" 302 -
[2017-12-02 00:08:56,530 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:08:56] "GET / HTTP/1.1" 200 -
[2017-12-02 00:09:05,328 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:09:05] "GET /login HTTP/1.1" 200 -
[2017-12-02 00:09:08,063 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:09:08] "POST /login HTTP/1.1" 200 -
[2017-12-02 00:09:09,157 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:09:09] "POST /login HTTP/1.1" 200 -
[2017-12-02 00:09:09,844 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:09:09] "POST /login HTTP/1.1" 200 -
[2017-12-02 00:09:10,829 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:09:10] "POST /login HTTP/1.1" 200 -
[2017-12-02 00:09:12,610 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:09:12] "POST /login HTTP/1.1" 200 -
[2017-12-02 00:09:13,751 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:09:13] "POST /login HTTP/1.1" 200 -
[2017-12-02 00:09:14,454 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:09:14] "POST /login HTTP/1.1" 200 -
[2017-12-02 00:09:14,876 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:09:14] "POST /login HTTP/1.1" 200 -
[2017-12-02 00:09:41,031 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:09:41] "POST /login HTTP/1.1" 200 -
[2017-12-02 00:09:41,062 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:09:41] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-02 00:09:41,062 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:09:41] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-02 00:09:41,062 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:09:41] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-02 00:09:41,062 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:09:41] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-02 00:09:50,843 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:09:50] "POST /login HTTP/1.1" 200 -
[2017-12-02 00:09:52,199 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:09:52] "POST /login HTTP/1.1" 200 -
[2017-12-02 00:10:39,965 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:10:39] "GET / HTTP/1.1" 200 -
[2017-12-02 00:10:39,997 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:10:39] "GET /static/css/bootstrap.min.css HTTP/1.1" 200 -
[2017-12-02 00:10:39,997 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:10:39] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 200 -
[2017-12-02 00:10:39,997 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:10:39] "GET /static/js/bootstrap.min.js HTTP/1.1" 200 -
[2017-12-02 00:10:39,997 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:10:39] "GET /static/main.css HTTP/1.1" 200 -
[2017-12-02 00:10:40,059 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:10:40] "GET /favicon.ico HTTP/1.1" 404 -
[2017-12-02 00:10:48,626 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:10:48] "GET /login HTTP/1.1" 200 -
[2017-12-02 00:10:50,329 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:10:50] "POST /login HTTP/1.1" 200 -
[2017-12-02 00:10:51,408 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:10:51] "POST /login HTTP/1.1" 200 -
[2017-12-02 00:10:56,658 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:10:56] "POST /login HTTP/1.1" 200 -
[2017-12-02 00:11:01,018 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:11:01] "POST /login HTTP/1.1" 200 -
[2017-12-02 00:11:33,854 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_home\\views.py', reloading
[2017-12-02 00:11:33,883 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-02 00:11:34,570 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-02 00:11:34,573 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-02 00:11:34,581 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-02 00:11:38,182 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:11:38] "POST /login HTTP/1.1" 200 -
[2017-12-02 00:11:38,214 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:11:38] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-02 00:11:38,214 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:11:38] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-02 00:11:38,214 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:11:38] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-02 00:11:38,214 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:11:38] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-02 00:11:40,183 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:11:40] "POST /login HTTP/1.1" 200 -
[2017-12-02 00:11:42,980 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:11:42] "POST /login HTTP/1.1" 200 -
[2017-12-02 00:11:43,902 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:11:43] "POST /login HTTP/1.1" 200 -
[2017-12-02 00:11:44,824 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:11:44] "POST /login HTTP/1.1" 200 -
[2017-12-02 00:11:45,636 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:11:45] "POST /login HTTP/1.1" 200 -
[2017-12-02 00:11:47,605 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:11:47] "POST /login HTTP/1.1" 200 -
[2017-12-02 00:11:47,808 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:11:47] "POST /login HTTP/1.1" 200 -
[2017-12-02 00:11:47,996 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:11:47] "POST /login HTTP/1.1" 200 -
[2017-12-02 00:11:48,152 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:11:48] "POST /login HTTP/1.1" 200 -
[2017-12-02 00:11:48,340 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:11:48] "POST /login HTTP/1.1" 200 -
[2017-12-02 00:11:48,543 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:11:48] "POST /login HTTP/1.1" 200 -
[2017-12-02 00:11:48,762 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:11:48] "POST /login HTTP/1.1" 200 -
[2017-12-02 00:11:48,965 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:11:48] "POST /login HTTP/1.1" 200 -
[2017-12-02 00:11:49,152 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:11:49] "POST /login HTTP/1.1" 200 -
[2017-12-02 00:11:49,371 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:11:49] "POST /login HTTP/1.1" 200 -
[2017-12-02 00:11:49,590 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:11:49] "POST /login HTTP/1.1" 200 -
[2017-12-02 00:11:49,793 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:11:49] "POST /login HTTP/1.1" 200 -
[2017-12-02 00:12:08,998 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:12:08] "POST /login HTTP/1.1" 200 -
[2017-12-02 00:12:12,420 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:12:12] "POST /login HTTP/1.1" 302 -
[2017-12-02 00:12:12,436 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:12:12] "GET / HTTP/1.1" 200 -
[2017-12-02 00:12:21,265 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:12:21] "GET /login HTTP/1.1" 200 -
[2017-12-02 00:12:31,891 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:12:31] "GET /login HTTP/1.1" 200 -
[2017-12-02 00:12:46,232 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_home\\views.py', reloading
[2017-12-02 00:12:46,256 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-02 00:12:46,949 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-02 00:12:46,952 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-02 00:12:46,962 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-02 00:12:48,163 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:12:48] "GET /login HTTP/1.1" 200 -
[2017-12-02 00:12:48,184 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:12:48] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-02 00:12:48,187 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:12:48] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-02 00:12:48,190 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:12:48] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-02 00:12:48,194 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:12:48] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-02 00:12:56,192 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:12:56] "GET /login HTTP/1.1" 200 -
[2017-12-02 00:13:40,017 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_home\\views.py', reloading
[2017-12-02 00:13:40,048 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-02 00:13:40,653 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-02 00:13:40,653 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-02 00:13:40,669 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-02 00:14:02,427 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:14:02] "GET /login HTTP/1.1" 200 -
[2017-12-02 00:14:02,454 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:14:02] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-02 00:14:02,457 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:14:02] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-02 00:14:02,459 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:14:02] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-02 00:14:02,462 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:14:02] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-02 00:14:04,004 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:14:04] "POST /login HTTP/1.1" 200 -
[2017-12-02 00:14:04,989 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:14:04] "POST /login HTTP/1.1" 200 -
[2017-12-02 00:14:08,176 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:14:08] "POST /login HTTP/1.1" 200 -
[2017-12-02 00:14:08,192 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:14:08] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-02 00:14:08,192 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:14:08] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-02 00:14:08,192 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:14:08] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-02 00:14:08,192 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:14:08] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-02 00:14:09,770 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:14:09] "POST /login HTTP/1.1" 200 -
[2017-12-02 00:14:12,989 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:14:12] "GET /login HTTP/1.1" 200 -
[2017-12-02 00:14:18,818 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:14:18] "POST /login HTTP/1.1" 200 -
[2017-12-02 00:14:20,568 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:14:20] "POST /login HTTP/1.1" 200 -
[2017-12-02 00:14:21,647 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:14:21] "POST /login HTTP/1.1" 200 -
[2017-12-02 00:14:52,560 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_home\\views.py', reloading
[2017-12-02 00:14:52,599 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-02 00:14:53,249 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-02 00:14:53,251 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-02 00:14:53,259 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-02 00:14:55,470 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:14:55] "POST /login HTTP/1.1" 200 -
[2017-12-02 00:14:55,486 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:14:55] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-02 00:14:55,486 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:14:55] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-02 00:14:55,486 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:14:55] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-02 00:14:55,486 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:14:55] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-02 00:14:57,330 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:14:57] "POST /login HTTP/1.1" 200 -
[2017-12-02 00:14:58,720 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:14:58] "POST /login HTTP/1.1" 200 -
[2017-12-02 00:14:59,767 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:14:59] "POST /login HTTP/1.1" 200 -
[2017-12-02 00:15:00,189 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:15:00] "POST /login HTTP/1.1" 200 -
[2017-12-02 00:15:00,392 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:15:00] "POST /login HTTP/1.1" 200 -
[2017-12-02 00:15:00,611 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:15:00] "POST /login HTTP/1.1" 200 -
[2017-12-02 00:15:00,799 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:15:00] "POST /login HTTP/1.1" 200 -
[2017-12-02 00:15:00,986 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:15:00] "POST /login HTTP/1.1" 200 -
[2017-12-02 00:15:01,174 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:15:01] "POST /login HTTP/1.1" 200 -
[2017-12-02 00:15:01,377 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:15:01] "POST /login HTTP/1.1" 200 -
[2017-12-02 00:15:01,565 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:15:01] "POST /login HTTP/1.1" 200 -
[2017-12-02 00:15:01,783 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:15:01] "POST /login HTTP/1.1" 200 -
[2017-12-02 00:15:02,002 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:15:02] "POST /login HTTP/1.1" 200 -
[2017-12-02 00:15:02,205 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:15:02] "POST /login HTTP/1.1" 200 -
[2017-12-02 00:15:02,424 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:15:02] "POST /login HTTP/1.1" 200 -
[2017-12-02 00:15:02,612 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:15:02] "POST /login HTTP/1.1" 200 -
[2017-12-02 00:15:02,783 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:15:02] "POST /login HTTP/1.1" 200 -
[2017-12-02 00:15:02,971 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:15:02] "POST /login HTTP/1.1" 200 -
[2017-12-02 00:15:03,158 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:15:03] "POST /login HTTP/1.1" 200 -
[2017-12-02 00:15:03,346 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:15:03] "POST /login HTTP/1.1" 200 -
[2017-12-02 00:15:06,503 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:15:06] "GET /login HTTP/1.1" 200 -
[2017-12-02 00:16:43,941 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_home\\views.py', reloading
[2017-12-02 00:16:44,023 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-02 00:17:29,614 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-02 00:17:30,153 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-02 00:17:30,153 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-02 00:17:30,153 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-02 00:17:38,389 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:17:38] "GET /login HTTP/1.1" 200 -
[2017-12-02 00:17:41,076 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:17:41] "POST /login HTTP/1.1" 200 -
[2017-12-02 00:17:43,686 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:17:43] "POST /login HTTP/1.1" 200 -
[2017-12-02 00:17:44,780 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:17:44] "POST /login HTTP/1.1" 200 -
[2017-12-02 00:18:11,311 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_home\\views.py', reloading
[2017-12-02 00:18:11,364 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-02 00:18:11,912 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-02 00:18:11,928 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-02 00:18:11,928 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-02 00:18:25,557 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_home\\views.py', reloading
[2017-12-02 00:18:25,588 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-02 00:18:26,223 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-02 00:18:26,226 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-02 00:18:26,235 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-02 00:18:29,349 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_home\\views.py', reloading
[2017-12-02 00:18:29,429 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-02 00:18:29,976 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-02 00:18:29,976 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-02 00:18:29,991 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-02 00:18:37,382 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_home\\views.py', reloading
[2017-12-02 00:18:37,416 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-02 00:18:38,060 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-02 00:18:38,063 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-02 00:18:38,073 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-02 00:18:39,604 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:18:39] "POST /login HTTP/1.1" 200 -
[2017-12-02 00:18:41,121 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:18:41] "POST /login HTTP/1.1" 200 -
[2017-12-02 00:18:41,923 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:18:41] "POST /login HTTP/1.1" 200 -
[2017-12-02 00:18:42,127 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:18:42] "POST /login HTTP/1.1" 200 -
[2017-12-02 00:18:42,330 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:18:42] "POST /login HTTP/1.1" 200 -
[2017-12-02 00:18:42,517 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:18:42] "POST /login HTTP/1.1" 200 -
[2017-12-02 00:18:46,283 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:18:46] "POST /login HTTP/1.1" 200 -
[2017-12-02 00:18:47,533 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:18:47] "POST /login HTTP/1.1" 200 -
[2017-12-02 00:18:48,205 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:18:48] "POST /login HTTP/1.1" 200 -
[2017-12-02 00:18:53,565 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:18:53] "POST /login HTTP/1.1" 302 -
[2017-12-02 00:18:53,581 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:18:53] "GET / HTTP/1.1" 200 -
[2017-12-02 00:19:00,535 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:19:00] "GET /login HTTP/1.1" 200 -
[2017-12-02 00:19:10,880 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_home\\views.py', reloading
[2017-12-02 00:19:10,927 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-02 00:19:11,522 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-02 00:19:11,522 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-02 00:19:11,522 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-02 00:19:50,660 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_home\\views.py', reloading
[2017-12-02 00:19:50,696 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-02 00:19:51,297 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-02 00:19:51,300 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-02 00:19:51,307 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-02 00:19:57,508 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_home\\views.py', reloading
[2017-12-02 00:19:57,558 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-02 00:19:58,170 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-02 00:19:58,170 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-02 00:19:58,170 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-02 00:19:58,217 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:19:58] "POST /login HTTP/1.1" 200 -
[2017-12-02 00:20:02,597 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:20:02] "POST /login HTTP/1.1" 302 -
[2017-12-02 00:20:02,612 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:20:02] "GET / HTTP/1.1" 200 -
[2017-12-02 00:21:45,725 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_home\\views.py', reloading
[2017-12-02 00:21:45,756 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-02 00:22:30,495 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-02 00:22:31,026 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-02 00:22:31,026 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-02 00:22:31,042 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-02 00:22:36,792 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:22:36] "GET /login HTTP/1.1" 200 -
[2017-12-02 00:22:38,839 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:22:38] "POST /login HTTP/1.1" 200 -
[2017-12-02 00:22:43,277 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:22:43] "POST /login HTTP/1.1" 200 -
[2017-12-02 00:22:45,215 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:22:45] "POST /login HTTP/1.1" 200 -
[2017-12-02 00:23:01,329 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:23:01] "POST /login HTTP/1.1" 200 -
[2017-12-02 00:23:02,395 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:23:02] "POST /login HTTP/1.1" 200 -
[2017-12-02 00:23:02,614 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:23:02] "POST /login HTTP/1.1" 200 -
[2017-12-02 00:23:02,817 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:23:02] "POST /login HTTP/1.1" 200 -
[2017-12-02 00:23:03,036 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:23:03] "POST /login HTTP/1.1" 200 -
[2017-12-02 00:23:03,239 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:23:03] "POST /login HTTP/1.1" 200 -
[2017-12-02 00:23:09,036 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:23:09] "POST /login HTTP/1.1" 200 -
[2017-12-02 00:23:13,287 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:23:13] "POST /login HTTP/1.1" 302 -
[2017-12-02 00:23:13,287 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:23:13] "GET / HTTP/1.1" 200 -
[2017-12-02 00:23:56,368 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_home\\views.py', reloading
[2017-12-02 00:23:56,401 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-02 00:23:56,987 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-02 00:23:56,990 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-02 00:23:56,998 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-02 00:23:58,079 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_home\\views.py', reloading
[2017-12-02 00:23:58,164 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-02 00:23:58,745 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-02 00:23:58,745 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-02 00:23:58,761 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-02 00:24:02,978 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_home\\views.py', reloading
[2017-12-02 00:24:03,018 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-02 00:24:03,677 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-02 00:24:03,681 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-02 00:24:03,690 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-02 00:24:09,991 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_home\\views.py', reloading
[2017-12-02 00:24:10,036 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-02 00:24:10,632 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-02 00:24:10,635 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-02 00:24:10,643 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-02 00:25:37,996 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:25:37] "GET / HTTP/1.1" 200 -
[2017-12-02 00:25:42,871 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:25:42] "GET /login HTTP/1.1" 200 -
[2017-12-02 00:25:44,637 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:25:44] "POST /login HTTP/1.1" 200 -
[2017-12-02 00:25:49,481 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:25:49] "POST /login HTTP/1.1" 302 -
[2017-12-02 00:25:49,481 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:25:49] "GET / HTTP/1.1" 200 -
[2017-12-02 00:26:05,534 : INFO : views.py : 22 :             notes_db() ] started note db form
[2017-12-02 00:26:05,534 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-02 00:26:05,627 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:26:05] "GET /note HTTP/1.1" 200 -
[2017-12-02 00:26:05,705 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:26:05] "GET /static/fonts/glyphicons-halflings-regular.woff2 HTTP/1.1" 200 -
[2017-12-02 00:26:16,925 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:26:16] "GET / HTTP/1.1" 200 -
[2017-12-02 00:27:56,945 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:27:56] "GET /loging HTTP/1.1" 404 -
[2017-12-02 00:27:59,992 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:27:59] "GET /login HTTP/1.1" 200 -
[2017-12-02 00:28:01,618 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:28:01] "POST /login HTTP/1.1" 200 -
[2017-12-02 00:28:05,868 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:28:05] "POST /login HTTP/1.1" 302 -
[2017-12-02 00:28:05,868 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:28:05] "GET / HTTP/1.1" 200 -
[2017-12-02 00:28:09,978 : INFO : views.py : 22 :             notes_db() ] started note db form
[2017-12-02 00:28:09,994 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-02 00:28:09,994 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:28:09] "GET /note HTTP/1.1" 200 -
[2017-12-02 00:28:14,072 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:28:14] "GET /form HTTP/1.1" 200 -
[2017-12-02 00:28:18,463 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:28:18] "GET / HTTP/1.1" 200 -
[2017-12-02 00:28:46,333 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:28:46] "GET / HTTP/1.1" 200 -
[2017-12-02 00:28:46,349 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:28:46] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-02 00:28:46,349 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:28:46] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-02 00:28:46,349 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:28:46] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-02 00:28:46,349 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:28:46] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-02 00:28:58,131 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:28:58] "GET / HTTP/1.1" 200 -
[2017-12-02 00:29:00,912 : INFO : views.py : 22 :             notes_db() ] started note db form
[2017-12-02 00:29:00,912 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-02 00:29:00,912 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:29:00] "GET /note HTTP/1.1" 200 -
[2017-12-02 00:30:04,394 : INFO : views.py : 22 :             notes_db() ] started note db form
[2017-12-02 00:30:04,394 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-02 00:30:04,394 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:30:04] "GET /note HTTP/1.1" 200 -
[2017-12-02 00:30:04,409 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:30:04] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-02 00:30:04,425 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:30:04] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-02 00:30:04,431 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:30:04] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-02 00:30:04,435 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:30:04] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-02 00:30:13,477 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:30:13] "GET /about HTTP/1.1" 200 -
[2017-12-02 00:30:20,181 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:30:20] "GET /login HTTP/1.1" 200 -
[2017-12-02 00:30:22,259 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:30:22] "POST /login HTTP/1.1" 200 -
[2017-12-02 00:30:26,306 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:30:26] "POST /login HTTP/1.1" 302 -
[2017-12-02 00:30:26,306 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:30:26] "GET / HTTP/1.1" 200 -
[2017-12-02 00:30:54,421 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:30:54] "GET / HTTP/1.1" 200 -
[2017-12-02 00:30:54,437 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:30:54] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-02 00:30:54,437 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:30:54] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-02 00:30:54,437 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:30:54] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-02 00:30:54,437 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:30:54] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-02 00:31:18,300 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:31:18] "GET / HTTP/1.1" 200 -
[2017-12-02 00:31:18,316 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:31:18] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-02 00:31:18,331 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:31:18] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-02 00:31:18,331 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:31:18] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-02 00:31:18,331 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:31:18] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-02 00:31:26,104 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-02 00:31:26,651 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-02 00:31:26,651 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-02 00:31:26,651 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-02 00:31:29,073 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:31:29] "GET / HTTP/1.1" 200 -
[2017-12-02 00:31:29,088 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:31:29] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-02 00:31:29,088 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:31:29] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-02 00:31:29,088 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:31:29] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-02 00:31:29,104 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:31:29] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-02 00:31:30,948 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:31:30] "GET / HTTP/1.1" 200 -
[2017-12-02 00:31:30,964 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:31:30] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-02 00:31:30,964 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:31:30] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-02 00:31:30,964 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:31:30] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-02 00:31:30,979 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:31:30] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-02 00:31:32,182 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:31:32] "GET / HTTP/1.1" 200 -
[2017-12-02 00:31:32,198 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:31:32] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-02 00:31:32,214 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:31:32] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-02 00:31:32,214 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:31:32] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-02 00:31:32,214 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:31:32] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-02 00:31:35,730 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:31:35] "GET / HTTP/1.1" 200 -
[2017-12-02 00:31:35,745 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:31:35] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-02 00:31:35,745 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:31:35] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-02 00:31:35,761 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:31:35] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-02 00:31:35,761 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:31:35] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-02 00:31:36,839 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:31:36] "GET / HTTP/1.1" 200 -
[2017-12-02 00:31:36,855 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:31:36] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-02 00:31:36,870 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:31:36] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-02 00:31:36,870 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:31:36] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-02 00:31:36,870 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:31:36] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-02 00:31:58,846 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:31:58] "GET / HTTP/1.1" 500 -
[2017-12-02 00:31:58,909 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:31:58] "GET /?__debugger__=yes&cmd=resource&f=style.css HTTP/1.1" 200 -
[2017-12-02 00:31:58,924 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:31:58] "GET /?__debugger__=yes&cmd=resource&f=jquery.js HTTP/1.1" 200 -
[2017-12-02 00:31:58,924 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:31:58] "GET /?__debugger__=yes&cmd=resource&f=debugger.js HTTP/1.1" 200 -
[2017-12-02 00:31:58,956 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:31:58] "GET /?__debugger__=yes&cmd=resource&f=console.png HTTP/1.1" 200 -
[2017-12-02 00:31:59,002 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:31:59] "GET /?__debugger__=yes&cmd=resource&f=ubuntu.ttf HTTP/1.1" 200 -
[2017-12-02 00:31:59,018 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:31:59] "GET /?__debugger__=yes&cmd=resource&f=console.png HTTP/1.1" 200 -
[2017-12-02 00:32:51,055 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_home\\views.py', reloading
[2017-12-02 00:32:51,092 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-02 00:32:51,717 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-02 00:32:51,717 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-02 00:32:51,733 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-02 00:33:01,761 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:33:01] "GET / HTTP/1.1" 200 -
[2017-12-02 00:33:01,795 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:33:01] "GET /static/css/bootstrap.min.css HTTP/1.1" 200 -
[2017-12-02 00:33:01,799 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:33:01] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 200 -
[2017-12-02 00:33:01,803 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:33:01] "GET /static/js/bootstrap.min.js HTTP/1.1" 200 -
[2017-12-02 00:33:01,806 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:33:01] "GET /static/main.css HTTP/1.1" 200 -
[2017-12-02 00:33:01,853 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:33:01] "GET /favicon.ico HTTP/1.1" 404 -
[2017-12-02 00:33:08,714 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_home\\views.py', reloading
[2017-12-02 00:33:08,745 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-02 00:33:09,370 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-02 00:33:09,373 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-02 00:33:09,379 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-02 00:33:14,966 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:33:14] "GET / HTTP/1.1" 200 -
[2017-12-02 00:33:14,988 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:33:14] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-02 00:33:14,991 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:33:14] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-02 00:33:14,991 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:33:14] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-02 00:33:14,991 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:33:14] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-02 00:33:53,833 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_home\\views.py', reloading
[2017-12-02 00:33:53,888 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-02 00:33:54,488 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-02 00:33:54,491 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-02 00:33:54,499 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-02 00:33:55,140 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:33:55] "GET / HTTP/1.1" 200 -
[2017-12-02 00:33:55,156 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:33:55] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-02 00:33:55,156 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:33:55] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-02 00:33:55,172 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:33:55] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-02 00:33:55,172 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:33:55] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-02 00:35:10,461 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_home\\views.py', reloading
[2017-12-02 00:35:10,525 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-02 00:35:11,086 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-02 00:35:11,086 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-02 00:35:11,086 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-02 00:35:12,142 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_home\\views.py', reloading
[2017-12-02 00:35:12,185 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-02 00:35:12,782 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-02 00:35:12,785 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-02 00:35:12,792 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-02 00:35:19,291 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:35:19] "GET / HTTP/1.1" 200 -
[2017-12-02 00:35:28,870 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:35:28] "POST /login HTTP/1.1" 200 -
[2017-12-02 00:35:34,152 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:35:34] "POST /login HTTP/1.1" 302 -
[2017-12-02 00:35:34,152 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:35:34] "GET / HTTP/1.1" 200 -
[2017-12-02 00:36:33,211 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_home\\views.py', reloading
[2017-12-02 00:36:33,249 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-02 00:36:33,813 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-02 00:36:33,816 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-02 00:36:33,825 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-02 00:37:13,880 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_home\\views.py', reloading
[2017-12-02 00:37:13,917 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-02 00:37:14,605 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-02 00:37:14,608 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-02 00:37:14,615 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-02 00:37:15,758 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:37:15] "GET / HTTP/1.1" 200 -
[2017-12-02 00:37:15,781 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:37:15] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-02 00:37:15,784 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:37:15] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-02 00:37:15,787 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:37:15] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-02 00:37:15,790 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:37:15] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-02 00:37:20,222 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:37:20] "POST /login HTTP/1.1" 302 -
[2017-12-02 00:37:20,237 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:37:20] "GET / HTTP/1.1" 200 -
[2017-12-02 00:37:27,137 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_home\\views.py', reloading
[2017-12-02 00:37:27,218 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-02 00:37:27,777 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-02 00:37:27,777 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-02 00:37:27,793 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-02 00:38:19,638 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:38:19] "GET / HTTP/1.1" 200 -
[2017-12-02 00:38:39,531 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:38:39] "POST /login HTTP/1.1" 302 -
[2017-12-02 00:38:39,546 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:38:39] "GET / HTTP/1.1" 200 -
[2017-12-02 00:39:33,426 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:39:33] "GET / HTTP/1.1" 200 -
[2017-12-02 00:39:33,441 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:39:33] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-02 00:39:33,457 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:39:33] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-02 00:39:33,457 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:39:33] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-02 00:39:33,457 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:39:33] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-02 00:39:38,207 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:39:38] "GET /login HTTP/1.1" 200 -
[2017-12-02 00:39:49,083 : INFO : views.py : 22 :             notes_db() ] started note db form
[2017-12-02 00:39:49,083 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-02 00:39:49,130 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:39:49] "GET /note HTTP/1.1" 200 -
[2017-12-02 00:39:49,240 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:39:49] "GET /static/fonts/glyphicons-halflings-regular.woff2 HTTP/1.1" 200 -
[2017-12-02 00:39:52,271 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:39:52] "GET / HTTP/1.1" 200 -
[2017-12-02 00:40:03,272 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:40:03] "GET /about HTTP/1.1" 200 -
[2017-12-02 00:40:46,043 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:40:46] "GET /py HTTP/1.1" 200 -
[2017-12-02 00:40:46,074 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:40:46] "GET /static/img/import_cls/app_form_mod.jpg HTTP/1.1" 200 -
[2017-12-02 00:40:46,090 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:40:46] "GET /static/img/import_cls/add_init.jpg HTTP/1.1" 200 -
[2017-12-02 00:40:54,137 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:40:54] "GET / HTTP/1.1" 200 -
[2017-12-02 00:41:53,800 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:41:53] "GET /login HTTP/1.1" 200 -
[2017-12-02 00:42:38,281 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_home\\views.py', reloading
[2017-12-02 00:42:38,315 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-02 00:42:39,000 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-02 00:42:39,003 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-02 00:42:39,014 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-02 00:42:54,814 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_home\\views.py', reloading
[2017-12-02 00:42:54,845 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-02 00:42:55,426 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-02 00:42:55,441 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-02 00:42:55,450 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-02 00:42:58,350 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:42:58] "GET /login HTTP/1.1" 200 -
[2017-12-02 00:43:13,395 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_home\\views.py', reloading
[2017-12-02 00:43:13,435 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-02 00:43:14,128 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-02 00:43:14,131 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-02 00:43:14,141 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-02 00:43:15,200 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:43:15] "GET /login HTTP/1.1" 302 -
[2017-12-02 00:43:15,223 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:43:15] "GET / HTTP/1.1" 200 -
[2017-12-02 00:43:15,244 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:43:15] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-02 00:43:15,247 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:43:15] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-02 00:43:15,250 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:43:15] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-02 00:43:15,256 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:43:15] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-02 00:43:31,123 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-02 00:43:31,686 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-02 00:43:31,686 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-02 00:43:31,686 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-02 00:43:39,143 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:43:39] "GET / HTTP/1.1" 200 -
[2017-12-02 00:43:39,205 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:43:39] "GET /static/css/bootstrap.min.css HTTP/1.1" 200 -
[2017-12-02 00:43:39,205 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:43:39] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 200 -
[2017-12-02 00:43:39,205 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:43:39] "GET /static/js/bootstrap.min.js HTTP/1.1" 200 -
[2017-12-02 00:43:39,205 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:43:39] "GET /static/main.css HTTP/1.1" 200 -
[2017-12-02 00:43:39,283 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:43:39] "GET /favicon.ico HTTP/1.1" 404 -
[2017-12-02 00:43:39,283 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:43:39] "GET /favicon.ico HTTP/1.1" 404 -
[2017-12-02 00:43:41,658 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:43:41] "POST /login HTTP/1.1" 200 -
[2017-12-02 00:43:44,549 : INFO : views.py : 22 :             notes_db() ] started note db form
[2017-12-02 00:43:44,549 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-02 00:43:44,549 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:43:44] "GET /note HTTP/1.1" 200 -
[2017-12-02 00:43:44,612 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:43:44] "GET /static/fonts/glyphicons-halflings-regular.woff2 HTTP/1.1" 200 -
[2017-12-02 00:43:56,269 : INFO : views.py : 22 :             notes_db() ] started note db form
[2017-12-02 00:43:56,269 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-02 00:43:56,269 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:43:56] "GET /note HTTP/1.1" 200 -
[2017-12-02 00:44:01,754 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:44:01] "GET /login HTTP/1.1" 200 -
[2017-12-02 00:44:05,333 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:44:05] "POST /login HTTP/1.1" 200 -
[2017-12-02 00:44:09,599 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:44:09] "POST /login HTTP/1.1" 302 -
[2017-12-02 00:44:09,615 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:44:09] "GET / HTTP/1.1" 200 -
[2017-12-02 00:44:15,381 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:44:15] "GET /login HTTP/1.1" 302 -
[2017-12-02 00:44:15,381 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:44:15] "GET / HTTP/1.1" 200 -
[2017-12-02 00:44:31,117 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:44:31] "GET /login HTTP/1.1" 302 -
[2017-12-02 00:44:31,117 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:44:31] "GET / HTTP/1.1" 200 -
[2017-12-02 00:45:22,825 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_home\\views.py', reloading
[2017-12-02 00:45:22,856 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-02 00:45:37,156 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-02 00:45:37,687 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-02 00:45:37,687 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-02 00:45:37,703 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-02 00:45:45,079 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:45:45] "GET / HTTP/1.1" 200 -
[2017-12-02 00:45:47,285 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:45:47] "POST /login HTTP/1.1" 200 -
[2017-12-02 00:45:51,193 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:45:51] "POST /login HTTP/1.1" 302 -
[2017-12-02 00:45:51,193 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:45:51] "GET / HTTP/1.1" 200 -
[2017-12-02 00:45:56,209 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:45:56] "GET /login HTTP/1.1" 200 -
[2017-12-02 00:45:58,647 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:45:58] "POST /login HTTP/1.1" 200 -
[2017-12-02 00:46:30,678 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_home\\views.py', reloading
[2017-12-02 00:46:30,768 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-02 00:46:31,404 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-02 00:46:31,406 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-02 00:46:31,413 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-02 00:46:41,210 : INFO : views.py : 22 :             notes_db() ] started note db form
[2017-12-02 00:46:41,210 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-02 00:46:41,257 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:46:41] "GET /note HTTP/1.1" 200 -
[2017-12-02 00:46:42,960 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:46:42] "GET / HTTP/1.1" 200 -
[2017-12-02 00:48:52,189 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_home\\views.py', reloading
[2017-12-02 00:48:52,220 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-02 00:48:52,940 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-02 00:48:52,943 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-02 00:48:52,953 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-02 00:48:56,543 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:48:56] "GET / HTTP/1.1" 200 -
[2017-12-02 00:48:56,559 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:48:56] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-02 00:48:56,559 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:48:56] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-02 00:48:56,559 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:48:56] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-02 00:48:56,559 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:48:56] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-02 00:49:01,544 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:49:01] "POST /login HTTP/1.1" 302 -
[2017-12-02 00:49:01,560 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:49:01] "GET / HTTP/1.1" 200 -
[2017-12-02 00:49:07,154 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:49:07] "GET /login HTTP/1.1" 200 -
[2017-12-02 00:49:43,690 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_home\\views.py', reloading
[2017-12-02 00:49:43,721 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-02 00:49:44,392 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-02 00:49:44,398 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-02 00:49:44,405 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-02 00:49:46,110 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:49:46] "GET /login HTTP/1.1" 200 -
[2017-12-02 00:49:46,141 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:49:46] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-02 00:49:46,141 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:49:46] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-02 00:49:46,141 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:49:46] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-02 00:49:46,141 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:49:46] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-02 00:49:49,350 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:49:49] "POST /login HTTP/1.1" 200 -
[2017-12-02 00:49:53,209 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:49:53] "POST /login HTTP/1.1" 302 -
[2017-12-02 00:49:53,209 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:49:53] "GET / HTTP/1.1" 200 -
[2017-12-02 00:51:21,485 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_home\\views.py', reloading
[2017-12-02 00:51:21,516 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-02 00:51:22,205 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-02 00:51:22,209 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-02 00:51:22,217 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-02 00:51:23,498 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:51:23] "GET / HTTP/1.1" 200 -
[2017-12-02 00:51:23,516 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:51:23] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-02 00:51:23,518 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:51:23] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-02 00:51:23,521 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:51:23] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-02 00:51:23,525 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:51:23] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-02 00:51:30,838 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:51:30] "POST /login HTTP/1.1" 200 -
[2017-12-02 00:51:36,229 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:51:36] "POST /login HTTP/1.1" 302 -
[2017-12-02 00:51:36,245 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:51:36] "GET / HTTP/1.1" 200 -
[2017-12-02 00:51:41,292 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 00:51:41] "GET /login HTTP/1.1" 200 -
[2017-12-02 00:51:49,598 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_home\\views.py', reloading
[2017-12-02 00:51:49,674 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-02 00:51:50,280 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-02 00:51:50,283 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-02 00:51:50,291 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-02 12:41:31,438 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 12:41:31] "GET /login HTTP/1.1" 200 -
[2017-12-02 12:41:31,470 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 12:41:31] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-02 12:41:31,470 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 12:41:31] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-02 12:41:31,470 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 12:41:31] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-02 12:41:31,485 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 12:41:31] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-02 12:41:41,439 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 12:41:41] "GET / HTTP/1.1" 200 -
[2017-12-02 12:42:14,409 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_home\\views.py', reloading
[2017-12-02 12:42:14,474 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-02 12:42:15,101 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-02 12:42:15,105 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-02 12:42:15,113 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-02 13:03:23,013 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-02 13:03:23,551 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-02 13:03:23,567 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-02 13:03:23,567 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-02 13:03:38,131 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:03:38] "GET / HTTP/1.1" 200 -
[2017-12-02 13:03:38,256 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:03:38] "GET /favicon.ico HTTP/1.1" 404 -
[2017-12-02 13:03:42,274 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:03:42] "POST /login HTTP/1.1" 200 -
[2017-12-02 13:03:44,040 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:03:44] "POST /login HTTP/1.1" 200 -
[2017-12-02 13:03:45,055 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:03:45] "POST /login HTTP/1.1" 200 -
[2017-12-02 13:03:57,697 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:03:57] "GET /grafana HTTP/1.1" 200 -
[2017-12-02 13:03:57,713 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:03:57] "GET /static/css/bootstrap.min.css HTTP/1.1" 200 -
[2017-12-02 13:03:57,728 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:03:57] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 200 -
[2017-12-02 13:03:57,728 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:03:57] "GET /static/js/bootstrap.min.js HTTP/1.1" 200 -
[2017-12-02 13:03:57,728 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:03:57] "GET /static/main.css HTTP/1.1" 200 -
[2017-12-02 13:03:57,728 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:03:57] "GET /static/img/grafana/grafana_start.jpg HTTP/1.1" 200 -
[2017-12-02 13:03:57,744 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:03:57] "GET /static/img/grafana/grafana_dash.jpg HTTP/1.1" 200 -
[2017-12-02 13:03:57,744 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:03:57] "GET /static/img/grafana/table_postgre.jpg HTTP/1.1" 200 -
[2017-12-02 13:03:57,744 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:03:57] "GET /static/img/grafana/grafana_datasource.jpg HTTP/1.1" 200 -
[2017-12-02 13:03:57,744 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:03:57] "GET /static/img/grafana/grafana_panel.jpg HTTP/1.1" 200 -
[2017-12-02 13:03:57,744 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:03:57] "GET /static/img/grafana/grafana_query.jpg HTTP/1.1" 200 -
[2017-12-02 13:03:57,760 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:03:57] "GET /static/img/grafana/grafana_result.jpg HTTP/1.1" 200 -
[2017-12-02 13:04:02,479 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:04:02] "GET / HTTP/1.1" 200 -
[2017-12-02 13:04:11,433 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:04:11] "GET / HTTP/1.1" 200 -
[2017-12-02 13:04:23,294 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:04:23] "GET /grafana HTTP/1.1" 200 -
[2017-12-02 13:04:25,263 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:04:25] "GET / HTTP/1.1" 200 -
[2017-12-02 13:04:32,726 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:04:32] "POST /login HTTP/1.1" 302 -
[2017-12-02 13:04:32,747 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:04:32] "GET / HTTP/1.1" 200 -
[2017-12-02 13:04:34,354 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:04:34] "GET /about HTTP/1.1" 200 -
[2017-12-02 13:04:36,339 : INFO : views.py : 22 :             notes_db() ] started note db form
[2017-12-02 13:04:36,339 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-02 13:04:36,339 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:04:36] "GET /note HTTP/1.1" 200 -
[2017-12-02 13:04:39,761 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:04:39] "GET /static/fonts/glyphicons-halflings-regular.woff2 HTTP/1.1" 200 -
[2017-12-02 13:04:41,105 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:04:41] "GET / HTTP/1.1" 200 -
[2017-12-02 13:06:57,909 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:06:57] "GET / HTTP/1.1" 200 -
[2017-12-02 13:06:57,925 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:06:57] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-02 13:06:57,940 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:06:57] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-02 13:06:57,940 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:06:57] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-02 13:06:57,940 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:06:57] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-02 13:07:34,979 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:07:34] "GET / HTTP/1.1" 200 -
[2017-12-02 13:07:35,011 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:07:35] "GET /static/css/bootstrap.min.css HTTP/1.1" 200 -
[2017-12-02 13:07:35,011 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:07:35] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 200 -
[2017-12-02 13:07:35,011 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:07:35] "GET /static/js/bootstrap.min.js HTTP/1.1" 200 -
[2017-12-02 13:07:35,011 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:07:35] "GET /static/main.css HTTP/1.1" 200 -
[2017-12-02 13:07:35,073 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:07:35] "GET /favicon.ico HTTP/1.1" 404 -
[2017-12-02 13:07:57,810 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:07:57] "GET /login HTTP/1.1" 200 -
[2017-12-02 13:08:23,507 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-02 13:08:24,039 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-02 13:08:24,039 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-02 13:08:24,039 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-02 13:08:34,931 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:08:34] "GET / HTTP/1.1" 200 -
[2017-12-02 13:08:34,962 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:08:34] "GET /static/css/bootstrap.min.css HTTP/1.1" 200 -
[2017-12-02 13:08:34,962 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:08:34] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 200 -
[2017-12-02 13:08:34,977 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:08:34] "GET /static/js/bootstrap.min.js HTTP/1.1" 200 -
[2017-12-02 13:08:34,977 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:08:34] "GET /static/main.css HTTP/1.1" 200 -
[2017-12-02 13:08:35,024 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:08:35] "GET /favicon.ico HTTP/1.1" 404 -
[2017-12-02 13:08:50,760 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:08:50] "GET /py HTTP/1.1" 200 -
[2017-12-02 13:08:50,792 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:08:50] "GET /static/img/import_cls/app_form_mod.jpg HTTP/1.1" 200 -
[2017-12-02 13:08:50,792 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:08:50] "GET /static/img/import_cls/add_init.jpg HTTP/1.1" 200 -
[2017-12-02 13:08:58,824 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:08:58] "GET / HTTP/1.1" 200 -
[2017-12-02 13:09:49,845 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:09:49] "GET / HTTP/1.1" 200 -
[2017-12-02 13:09:49,869 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:09:49] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-02 13:09:49,873 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:09:49] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-02 13:09:49,875 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:09:49] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-02 13:09:49,878 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:09:49] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-02 13:10:36,258 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:10:36] "GET / HTTP/1.1" 200 -
[2017-12-02 13:10:36,277 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:10:36] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-02 13:10:36,281 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:10:36] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-02 13:10:36,285 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:10:36] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-02 13:10:36,288 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:10:36] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-02 13:10:43,584 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:10:43] "GET / HTTP/1.1" 200 -
[2017-12-02 13:10:43,599 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:10:43] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-02 13:10:43,615 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:10:43] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-02 13:10:43,615 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:10:43] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-02 13:10:43,615 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:10:43] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-02 13:10:55,850 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:10:55] "POST /login HTTP/1.1" 302 -
[2017-12-02 13:10:55,866 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:10:55] "GET / HTTP/1.1" 200 -
[2017-12-02 13:10:58,132 : INFO : views.py : 22 :             notes_db() ] started note db form
[2017-12-02 13:10:58,132 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-02 13:10:58,148 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:10:58] "GET /note HTTP/1.1" 200 -
[2017-12-02 13:11:02,882 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:11:02] "GET /static/fonts/glyphicons-halflings-regular.woff2 HTTP/1.1" 200 -
[2017-12-02 13:11:02,886 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:11:02] "GET / HTTP/1.1" 200 -
[2017-12-02 13:11:02,894 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:11:02] "GET /static/fonts/glyphicons-halflings-regular.woff HTTP/1.1" 200 -
[2017-12-02 13:12:47,034 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:12:47] "GET /login HTTP/1.1" 200 -
[2017-12-02 13:20:51,581 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_home\\views.py', reloading
[2017-12-02 13:20:51,639 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-02 13:24:52,555 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-02 13:24:53,086 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-02 13:24:53,086 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-02 13:24:53,102 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-02 13:25:02,868 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:25:02] "GET /continue HTTP/1.1" 500 -
[2017-12-02 13:25:02,899 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:25:02] "GET /continue?__debugger__=yes&cmd=resource&f=style.css HTTP/1.1" 200 -
[2017-12-02 13:25:02,899 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:25:02] "GET /continue?__debugger__=yes&cmd=resource&f=jquery.js HTTP/1.1" 200 -
[2017-12-02 13:25:02,993 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:25:02] "GET /continue?__debugger__=yes&cmd=resource&f=debugger.js HTTP/1.1" 200 -
[2017-12-02 13:25:02,993 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:25:02] "GET /continue?__debugger__=yes&cmd=resource&f=console.png HTTP/1.1" 200 -
[2017-12-02 13:25:03,008 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:25:03] "GET /continue?__debugger__=yes&cmd=resource&f=console.png HTTP/1.1" 200 -
[2017-12-02 13:25:03,040 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:25:03] "GET /continue?__debugger__=yes&cmd=resource&f=ubuntu.ttf HTTP/1.1" 200 -
[2017-12-02 13:25:18,382 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_home\\views.py', reloading
[2017-12-02 13:25:18,413 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-02 13:25:37,817 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-02 13:25:38,348 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-02 13:25:38,348 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-02 13:25:38,348 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-02 13:25:46,579 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:25:46] "GET /continue HTTP/1.1" 200 -
[2017-12-02 13:25:59,737 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:25:59] "GET /login HTTP/1.1" 200 -
[2017-12-02 13:27:09,313 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:27:09] "POST /continue HTTP/1.1" 200 -
[2017-12-02 13:27:14,840 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:27:14] "POST /continue HTTP/1.1" 200 -
[2017-12-02 13:28:30,613 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_home\\views.py', reloading
[2017-12-02 13:28:30,647 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-02 13:28:31,281 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-02 13:28:31,281 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-02 13:28:31,297 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-02 13:28:34,428 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_home\\views.py', reloading
[2017-12-02 13:28:34,463 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-02 13:28:35,095 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-02 13:28:35,098 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-02 13:28:35,106 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-02 13:28:36,341 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:28:36] "POST /continue HTTP/1.1" 200 -
[2017-12-02 13:28:38,966 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:28:38] "POST /continue HTTP/1.1" 200 -
[2017-12-02 13:29:28,664 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_home\\views.py', reloading
[2017-12-02 13:29:28,690 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-02 13:29:29,322 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-02 13:29:29,326 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-02 13:29:29,333 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-02 13:29:30,478 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:29:30] "GET /login HTTP/1.1" 200 -
[2017-12-02 13:29:30,496 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:29:30] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-02 13:29:30,499 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:29:30] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-02 13:29:30,502 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:29:30] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-02 13:29:30,505 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:29:30] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-02 13:29:38,791 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:29:38] "POST /login HTTP/1.1" 200 -
[2017-12-02 13:29:42,729 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:29:42] "POST /login HTTP/1.1" 302 -
[2017-12-02 13:29:42,729 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:29:42] "GET / HTTP/1.1" 200 -
[2017-12-02 13:29:48,808 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:29:48] "GET /login HTTP/1.1" 200 -
[2017-12-02 13:29:50,964 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:29:50] "POST /continue HTTP/1.1" 200 -
[2017-12-02 13:29:53,824 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:29:53] "POST /continue HTTP/1.1" 200 -
[2017-12-02 13:29:57,574 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:29:57] "POST /login HTTP/1.1" 200 -
[2017-12-02 13:29:58,371 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:29:58] "POST /login HTTP/1.1" 200 -
[2017-12-02 13:30:03,544 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:30:03] "POST /login HTTP/1.1" 200 -
[2017-12-02 13:30:12,263 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:30:12] "POST /login HTTP/1.1" 200 -
[2017-12-02 13:30:36,462 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_home\\views.py', reloading
[2017-12-02 13:30:36,516 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-02 13:30:37,133 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-02 13:30:37,137 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-02 13:30:37,146 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-02 13:30:39,783 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:30:39] "POST /login HTTP/1.1" 200 -
[2017-12-02 13:30:39,798 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:30:39] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-02 13:30:39,798 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:30:39] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-02 13:30:39,798 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:30:39] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-02 13:30:39,814 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:30:39] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-02 13:30:41,658 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:30:41] "POST /login HTTP/1.1" 200 -
[2017-12-02 13:30:50,815 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:30:50] "POST /login HTTP/1.1" 200 -
[2017-12-02 13:30:53,409 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:30:53] "POST /login HTTP/1.1" 302 -
[2017-12-02 13:30:53,425 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:30:53] "GET / HTTP/1.1" 200 -
[2017-12-02 13:31:05,879 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:31:05] "GET /login HTTP/1.1" 200 -
[2017-12-02 13:31:08,239 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:31:08] "POST /continue HTTP/1.1" 302 -
[2017-12-02 13:31:08,239 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:31:08] "GET / HTTP/1.1" 200 -
[2017-12-02 13:31:11,505 : INFO : views.py : 22 :             notes_db() ] started note db form
[2017-12-02 13:31:11,505 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-02 13:31:11,520 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:31:11] "GET /note HTTP/1.1" 200 -
[2017-12-02 13:31:11,583 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:31:11] "GET /static/fonts/glyphicons-halflings-regular.woff2 HTTP/1.1" 200 -
[2017-12-02 13:31:23,225 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:31:23] "GET /login HTTP/1.1" 200 -
[2017-12-02 13:32:46,853 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:32:46] "GET /login HTTP/1.1" 200 -
[2017-12-02 13:32:46,884 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:32:46] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-02 13:32:46,884 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:32:46] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-02 13:32:46,884 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:32:46] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-02 13:32:46,884 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:32:46] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-02 13:32:54,932 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:32:54] "GET /about HTTP/1.1" 200 -
[2017-12-02 13:32:57,776 : INFO : views.py : 22 :             notes_db() ] started note db form
[2017-12-02 13:32:57,776 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-02 13:32:57,776 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:32:57] "GET /note HTTP/1.1" 200 -
[2017-12-02 13:33:08,074 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:33:08] "GET / HTTP/1.1" 200 -
[2017-12-02 13:33:10,746 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:33:10] "GET /continue HTTP/1.1" 200 -
[2017-12-02 13:33:49,174 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_home\\views.py', reloading
[2017-12-02 13:33:49,200 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-02 13:33:49,814 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-02 13:33:49,830 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-02 13:33:49,830 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-02 13:34:07,603 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_home\\views.py', reloading
[2017-12-02 13:34:07,642 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-02 13:34:08,284 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-02 13:34:08,284 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-02 13:34:08,300 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-02 13:34:09,803 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:34:09] "GET / HTTP/1.1" 200 -
[2017-12-02 13:34:09,821 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:34:09] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-02 13:34:09,825 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:34:09] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-02 13:34:09,828 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:34:09] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-02 13:34:09,831 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:34:09] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-02 13:34:13,651 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:34:13] "POST /login HTTP/1.1" 200 -
[2017-12-02 13:34:21,714 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:34:21] "POST /login HTTP/1.1" 302 -
[2017-12-02 13:34:21,761 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:34:21] "GET / HTTP/1.1" 200 -
[2017-12-02 13:34:25,230 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:34:25] "GET /continue HTTP/1.1" 500 -
[2017-12-02 13:34:25,246 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:34:25] "GET /continue?__debugger__=yes&cmd=resource&f=style.css HTTP/1.1" 200 -
[2017-12-02 13:34:30,840 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:34:30] "GET /continue?__debugger__=yes&cmd=resource&f=jquery.js HTTP/1.1" 200 -
[2017-12-02 13:34:30,856 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:34:30] "GET /continue?__debugger__=yes&cmd=resource&f=debugger.js HTTP/1.1" 200 -
[2017-12-02 13:34:30,856 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:34:30] "GET /continue?__debugger__=yes&cmd=resource&f=console.png HTTP/1.1" 200 -
[2017-12-02 13:34:30,934 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:34:30] "GET /continue?__debugger__=yes&cmd=resource&f=console.png HTTP/1.1" 200 -
[2017-12-02 13:34:30,981 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:34:30] "GET /continue?__debugger__=yes&cmd=resource&f=ubuntu.ttf HTTP/1.1" 200 -
[2017-12-02 13:34:52,080 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_home\\views.py', reloading
[2017-12-02 13:34:52,118 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-02 13:34:52,712 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-02 13:34:52,715 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-02 13:34:52,723 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-02 13:34:56,322 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:34:56] "GET / HTTP/1.1" 200 -
[2017-12-02 13:35:04,385 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:35:04] "POST /login HTTP/1.1" 200 -
[2017-12-02 13:35:06,542 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:35:06] "GET /py HTTP/1.1" 200 -
[2017-12-02 13:35:08,870 : INFO : views.py : 22 :             notes_db() ] started note db form
[2017-12-02 13:35:08,870 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-02 13:35:08,886 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:35:08] "GET /note HTTP/1.1" 200 -
[2017-12-02 13:35:12,730 : INFO : views.py : 22 :             notes_db() ] started note db form
[2017-12-02 13:35:12,730 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-02 13:35:12,730 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:35:12] "GET /note HTTP/1.1" 200 -
[2017-12-02 13:35:20,856 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:35:20] "GET /continue HTTP/1.1" 200 -
[2017-12-02 13:35:22,918 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:35:22] "POST /continue HTTP/1.1" 200 -
[2017-12-02 13:35:30,029 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:35:30] "POST /login HTTP/1.1" 302 -
[2017-12-02 13:35:30,044 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:35:30] "GET / HTTP/1.1" 200 -
[2017-12-02 13:35:42,730 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:35:42] "GET /continue HTTP/1.1" 200 -
[2017-12-02 13:36:00,055 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:36:00] "GET /continue HTTP/1.1" 200 -
[2017-12-02 13:36:00,068 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:36:00] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-02 13:36:00,068 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:36:00] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-02 13:36:00,068 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:36:00] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-02 13:36:00,084 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:36:00] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-02 13:36:04,366 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:36:04] "POST /continue HTTP/1.1" 302 -
[2017-12-02 13:36:04,381 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:36:04] "GET / HTTP/1.1" 200 -
[2017-12-02 13:36:06,132 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:36:06] "GET /continue HTTP/1.1" 200 -
[2017-12-02 13:36:11,445 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:36:11] "POST /continue HTTP/1.1" 200 -
[2017-12-02 13:36:17,820 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:36:17] "POST /login HTTP/1.1" 200 -
[2017-12-02 13:36:21,586 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:36:21] "POST /login HTTP/1.1" 302 -
[2017-12-02 13:36:21,602 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:36:21] "GET / HTTP/1.1" 200 -
[2017-12-02 13:36:26,196 : INFO : views.py : 22 :             notes_db() ] started note db form
[2017-12-02 13:36:26,196 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-02 13:36:26,196 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:36:26] "GET /note HTTP/1.1" 200 -
[2017-12-02 13:36:30,634 : INFO : views.py : 22 :             notes_db() ] started note db form
[2017-12-02 13:36:30,634 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-02 13:36:30,634 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:36:30] "GET /note HTTP/1.1" 200 -
[2017-12-02 13:36:37,369 : INFO : views.py : 22 :             notes_db() ] started note db form
[2017-12-02 13:36:37,369 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-02 13:36:37,369 : INFO : views.py : 28 :             notes_db() ] post action
[2017-12-02 13:36:37,369 : DEBUG : sqlalchemy_statments.py : 55 :           get_max_id() ] (8,)
[2017-12-02 13:36:37,369 : DEBUG : sqlalchemy_statments.py : 85 :               insert() ] Added 1 row to sqlite3, with id 9
[2017-12-02 13:36:37,369 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:36:37] "POST /note HTTP/1.1" 200 -
[2017-12-02 13:36:39,090 : INFO : views.py : 22 :             notes_db() ] started note db form
[2017-12-02 13:36:39,090 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-02 13:36:39,090 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:36:39] "GET /note HTTP/1.1" 200 -
[2017-12-02 13:36:48,842 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:36:48] "GET /continue HTTP/1.1" 200 -
[2017-12-02 13:36:51,045 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:36:51] "POST /continue HTTP/1.1" 302 -
[2017-12-02 13:36:51,045 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:36:51] "GET / HTTP/1.1" 200 -
[2017-12-02 13:36:53,186 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:36:53] "GET /continue HTTP/1.1" 200 -
[2017-12-02 13:36:59,093 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:36:59] "POST /continue HTTP/1.1" 200 -
[2017-12-02 13:38:04,927 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:38:04] "POST /login HTTP/1.1" 200 -
[2017-12-02 13:38:11,991 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:38:11] "GET /py HTTP/1.1" 200 -
[2017-12-02 13:38:14,084 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:38:14] "GET /form HTTP/1.1" 200 -
[2017-12-02 13:38:15,960 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:38:15] "GET /grafana HTTP/1.1" 200 -
[2017-12-02 13:38:19,054 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:38:19] "GET /static/img/grafana/grafana_start.jpg HTTP/1.1" 200 -
[2017-12-02 13:38:19,054 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:38:19] "GET /static/img/grafana/grafana_dash.jpg HTTP/1.1" 200 -
[2017-12-02 13:38:19,069 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:38:19] "GET /static/img/grafana/table_postgre.jpg HTTP/1.1" 200 -
[2017-12-02 13:38:19,069 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:38:19] "GET /static/img/grafana/grafana_datasource.jpg HTTP/1.1" 200 -
[2017-12-02 13:38:19,085 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:38:19] "GET /static/img/grafana/grafana_panel.jpg HTTP/1.1" 200 -
[2017-12-02 13:38:19,085 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:38:19] "GET /static/img/grafana/grafana_query.jpg HTTP/1.1" 200 -
[2017-12-02 13:38:19,085 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:38:19] "GET /static/img/grafana/grafana_result.jpg HTTP/1.1" 200 -
[2017-12-02 13:38:27,117 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:38:27] "GET / HTTP/1.1" 200 -
[2017-12-02 13:38:30,117 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:38:30] "GET /continue HTTP/1.1" 200 -
[2017-12-02 13:38:35,212 : INFO : views.py : 22 :             notes_db() ] started note db form
[2017-12-02 13:38:35,212 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-02 13:38:35,227 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:38:35] "GET /note HTTP/1.1" 200 -
[2017-12-02 13:38:37,899 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:38:37] "GET /continue HTTP/1.1" 200 -
[2017-12-02 13:38:39,212 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 13:38:39] "POST /continue HTTP/1.1" 200 -
[2017-12-02 15:55:29,628 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 15:55:29] "POST /continue HTTP/1.1" 200 -
[2017-12-02 15:55:29,660 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 15:55:29] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-02 15:55:29,660 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 15:55:29] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-02 15:55:29,660 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 15:55:29] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-02 15:55:29,660 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 15:55:29] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-02 15:55:33,894 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 15:55:33] "POST /login HTTP/1.1" 200 -
[2017-12-02 15:55:37,817 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 15:55:37] "POST /login HTTP/1.1" 302 -
[2017-12-02 15:55:37,817 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 15:55:37] "GET / HTTP/1.1" 200 -
[2017-12-02 15:55:41,989 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 15:55:41] "GET /continue HTTP/1.1" 200 -
[2017-12-02 15:55:45,661 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 15:55:45] "POST /continue HTTP/1.1" 302 -
[2017-12-02 15:55:45,661 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 15:55:45] "GET / HTTP/1.1" 200 -
[2017-12-02 15:55:47,880 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 15:55:47] "GET /continue HTTP/1.1" 200 -
[2017-12-02 15:55:57,256 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 15:55:57] "POST /continue HTTP/1.1" 302 -
[2017-12-02 15:55:57,272 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 15:55:57] "GET / HTTP/1.1" 200 -
[2017-12-02 15:56:50,575 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 15:56:50] "GET / HTTP/1.1" 200 -
[2017-12-02 15:56:50,597 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 15:56:50] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-02 15:56:50,601 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 15:56:50] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-02 15:56:50,603 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 15:56:50] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-02 15:56:50,606 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 15:56:50] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-02 15:57:09,646 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 15:57:09] "GET / HTTP/1.1" 200 -
[2017-12-02 15:57:09,662 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 15:57:09] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-02 15:57:09,662 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 15:57:09] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-02 15:57:09,678 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 15:57:09] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-02 15:57:09,678 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 15:57:09] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-02 15:57:17,682 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 15:57:17] "GET /continue HTTP/1.1" 200 -
[2017-12-02 15:57:19,182 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 15:57:19] "POST /continue HTTP/1.1" 200 -
[2017-12-02 15:57:21,167 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 15:57:21] "POST /login HTTP/1.1" 200 -
[2017-12-02 15:57:24,886 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 15:57:24] "POST /login HTTP/1.1" 302 -
[2017-12-02 15:57:24,902 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 15:57:24] "GET / HTTP/1.1" 200 -
[2017-12-02 15:57:27,136 : INFO : views.py : 22 :             notes_db() ] started note db form
[2017-12-02 15:57:27,136 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-02 15:57:27,136 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 15:57:27] "GET /note HTTP/1.1" 200 -
[2017-12-02 15:57:31,824 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 15:57:31] "GET /py HTTP/1.1" 200 -
[2017-12-02 15:57:36,653 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 15:57:36] "GET /octopus HTTP/1.1" 200 -
[2017-12-02 15:57:38,919 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 15:57:38] "GET /continue HTTP/1.1" 200 -
[2017-12-02 15:57:40,841 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 15:57:40] "POST /continue HTTP/1.1" 302 -
[2017-12-02 15:57:40,841 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 15:57:40] "GET / HTTP/1.1" 200 -
[2017-12-02 15:57:45,263 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 15:57:45] "GET /about HTTP/1.1" 200 -
[2017-12-02 15:57:50,951 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 15:57:50] "GET /continue HTTP/1.1" 200 -
[2017-12-02 15:57:52,373 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 15:57:52] "POST /continue HTTP/1.1" 200 -
[2017-12-02 15:58:19,457 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 15:58:19] "POST /continue HTTP/1.1" 200 -
[2017-12-02 15:58:19,473 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 15:58:19] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-02 15:58:19,488 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 15:58:19] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-02 15:58:19,488 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 15:58:19] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-02 15:58:19,488 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 15:58:19] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-02 15:58:34,789 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 15:58:34] "POST /continue HTTP/1.1" 200 -
[2017-12-02 15:58:34,821 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 15:58:34] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-02 15:58:34,821 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 15:58:34] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-02 15:58:34,821 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 15:58:34] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-02 15:58:34,821 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 15:58:34] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-02 15:58:47,959 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 15:58:47] "POST /continue HTTP/1.1" 200 -
[2017-12-02 15:58:47,974 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 15:58:47] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-02 15:58:47,974 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 15:58:47] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-02 15:58:47,990 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 15:58:47] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-02 15:58:47,990 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 15:58:47] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-02 15:59:08,277 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 15:59:08] "POST /continue HTTP/1.1" 200 -
[2017-12-02 15:59:08,293 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 15:59:08] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-02 15:59:08,293 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 15:59:08] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-02 15:59:08,293 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 15:59:08] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-02 15:59:08,293 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 15:59:08] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-02 16:00:02,365 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:00:02] "POST /continue HTTP/1.1" 200 -
[2017-12-02 16:00:02,396 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:00:02] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-02 16:00:02,396 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:00:02] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-02 16:00:02,396 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:00:02] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-02 16:00:02,396 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:00:02] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-02 16:00:38,500 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_home\\views.py', reloading
[2017-12-02 16:00:38,532 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-02 16:00:39,346 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-02 16:00:39,349 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-02 16:00:39,367 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-02 16:00:40,373 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_home\\views.py', reloading
[2017-12-02 16:00:40,404 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-02 16:00:41,089 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-02 16:00:41,094 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-02 16:00:41,102 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-02 16:00:44,111 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:00:44] "POST /continue HTTP/1.1" 200 -
[2017-12-02 16:00:44,126 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:00:44] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-02 16:00:44,142 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:00:44] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-02 16:00:44,142 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:00:44] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-02 16:00:44,142 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:00:44] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-02 16:00:52,080 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:00:52] "POST /login HTTP/1.1" 302 -
[2017-12-02 16:00:52,111 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:00:52] "GET / HTTP/1.1" 200 -
[2017-12-02 16:00:54,987 : INFO : views.py : 22 :             notes_db() ] started note db form
[2017-12-02 16:00:54,987 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-02 16:00:55,002 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:00:55] "GET /note HTTP/1.1" 200 -
[2017-12-02 16:01:06,269 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:01:06] "GET /form HTTP/1.1" 200 -
[2017-12-02 16:01:18,555 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:01:18] "GET /continue HTTP/1.1" 200 -
[2017-12-02 16:01:21,524 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:01:21] "POST /continue HTTP/1.1" 200 -
[2017-12-02 16:01:27,993 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:01:27] "POST /login HTTP/1.1" 200 -
[2017-12-02 16:01:56,395 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_home\\views.py', reloading
[2017-12-02 16:01:56,477 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-02 16:01:57,120 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-02 16:01:57,123 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-02 16:01:57,131 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-02 16:01:59,161 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:01:59] "POST /login HTTP/1.1" 200 -
[2017-12-02 16:01:59,184 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:01:59] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-02 16:01:59,189 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:01:59] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-02 16:01:59,192 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:01:59] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-02 16:01:59,194 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:01:59] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-02 16:02:05,700 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:02:05] "POST /login HTTP/1.1" 200 -
[2017-12-02 16:02:17,545 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:02:17] "POST /login HTTP/1.1" 200 -
[2017-12-02 16:02:34,941 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:02:34] "POST /login HTTP/1.1" 200 -
[2017-12-02 16:02:37,254 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:02:37] "POST /login HTTP/1.1" 200 -
[2017-12-02 16:02:51,380 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:02:51] "POST /login HTTP/1.1" 200 -
[2017-12-02 16:02:55,740 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:02:55] "POST /login HTTP/1.1" 200 -
[2017-12-02 16:03:03,116 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:03:03] "POST /login HTTP/1.1" 302 -
[2017-12-02 16:03:03,132 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:03:03] "GET / HTTP/1.1" 200 -
[2017-12-02 16:03:05,491 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:03:05] "GET /continue HTTP/1.1" 200 -
[2017-12-02 16:03:11,164 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:03:11] "POST /continue HTTP/1.1" 302 -
[2017-12-02 16:03:11,179 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:03:11] "GET / HTTP/1.1" 200 -
[2017-12-02 16:03:46,124 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:03:46] "GET / HTTP/1.1" 200 -
[2017-12-02 16:03:46,140 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:03:46] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-02 16:03:46,156 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:03:46] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-02 16:03:46,156 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:03:46] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-02 16:03:46,156 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:03:46] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-02 16:04:47,936 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:04:47] "GET / HTTP/1.1" 200 -
[2017-12-02 16:04:47,967 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:04:47] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-02 16:04:47,967 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:04:47] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-02 16:04:47,967 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:04:47] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-02 16:04:47,967 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:04:47] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-02 16:05:03,108 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:05:03] "GET /continue HTTP/1.1" 200 -
[2017-12-02 16:05:05,093 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:05:05] "POST /continue HTTP/1.1" 200 -
[2017-12-02 16:05:35,744 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:05:35] "POST /continue HTTP/1.1" 200 -
[2017-12-02 16:05:35,775 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:05:35] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-02 16:05:35,775 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:05:35] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-02 16:05:35,775 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:05:35] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-02 16:05:35,775 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:05:35] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-02 16:05:39,635 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:05:39] "POST /login HTTP/1.1" 302 -
[2017-12-02 16:05:39,650 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:05:39] "GET / HTTP/1.1" 200 -
[2017-12-02 16:06:01,350 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:06:01] "GET / HTTP/1.1" 200 -
[2017-12-02 16:06:01,366 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:06:01] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-02 16:06:01,366 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:06:01] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-02 16:06:01,381 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:06:01] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-02 16:06:01,381 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:06:01] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-02 16:06:22,795 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:06:22] "GET / HTTP/1.1" 200 -
[2017-12-02 16:06:22,827 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:06:22] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-02 16:06:22,827 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:06:22] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-02 16:06:22,827 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:06:22] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-02 16:06:22,827 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:06:22] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-02 16:06:37,690 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:06:37] "GET / HTTP/1.1" 200 -
[2017-12-02 16:06:37,705 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:06:37] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-02 16:06:37,705 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:06:37] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-02 16:06:37,705 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:06:37] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-02 16:06:37,721 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:06:37] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-02 16:06:49,316 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:06:49] "GET /continue HTTP/1.1" 200 -
[2017-12-02 16:06:51,660 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:06:51] "GET /grafana HTTP/1.1" 200 -
[2017-12-02 16:06:56,488 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:06:56] "GET /ftp HTTP/1.1" 200 -
[2017-12-02 16:06:56,535 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:06:56] "GET /static/img/result_ssh.jpg HTTP/1.1" 200 -
[2017-12-02 16:06:56,535 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:06:56] "GET /static/img/putty_digital.jpg HTTP/1.1" 200 -
[2017-12-02 16:06:56,535 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:06:56] "GET /static/img/add_key.jpg HTTP/1.1" 200 -
[2017-12-02 16:06:56,535 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:06:56] "GET /static/img/add_site.jpg HTTP/1.1" 200 -
[2017-12-02 16:06:56,535 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:06:56] "GET /static/img/add_filetransfer.jpg HTTP/1.1" 200 -
[2017-12-02 16:07:05,474 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:07:05] "GET / HTTP/1.1" 200 -
[2017-12-02 16:07:08,177 : INFO : views.py : 22 :             notes_db() ] started note db form
[2017-12-02 16:07:08,177 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-02 16:07:08,193 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:07:08] "GET /note HTTP/1.1" 200 -
[2017-12-02 16:07:09,412 : INFO : views.py : 22 :             notes_db() ] started note db form
[2017-12-02 16:07:09,412 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-02 16:07:09,427 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:07:09] "GET /note HTTP/1.1" 200 -
[2017-12-02 16:07:13,537 : INFO : views.py : 22 :             notes_db() ] started note db form
[2017-12-02 16:07:13,537 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-02 16:07:13,553 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:07:13] "GET /note HTTP/1.1" 200 -
[2017-12-02 16:07:48,414 : INFO : views.py : 22 :             notes_db() ] started note db form
[2017-12-02 16:07:48,414 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-02 16:07:48,430 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:07:48] "GET /note HTTP/1.1" 200 -
[2017-12-02 16:07:48,445 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:07:48] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-02 16:07:48,445 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:07:48] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-02 16:07:48,445 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:07:48] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-02 16:07:48,445 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:07:48] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-02 16:07:56,478 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:07:56] "GET / HTTP/1.1" 200 -
[2017-12-02 16:08:08,432 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:08:08] "GET /continue HTTP/1.1" 200 -
[2017-12-02 16:08:13,432 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:08:13] "GET /about HTTP/1.1" 200 -
[2017-12-02 16:08:18,542 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:08:18] "GET / HTTP/1.1" 200 -
[2017-12-02 16:08:20,543 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:08:20] "GET /continue HTTP/1.1" 200 -
[2017-12-02 16:08:25,653 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:08:25] "GET / HTTP/1.1" 200 -
[2017-12-02 16:08:36,060 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:08:36] "GET /continue HTTP/1.1" 200 -
[2017-12-02 16:08:44,420 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:08:44] "POST /continue HTTP/1.1" 200 -
[2017-12-02 16:08:50,155 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:08:50] "POST /continue HTTP/1.1" 200 -
[2017-12-02 16:08:50,171 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:08:50] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-02 16:08:50,171 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:08:50] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-02 16:08:50,186 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:08:50] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-02 16:08:50,186 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:08:50] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-02 16:11:08,780 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:11:08] "POST /continue HTTP/1.1" 200 -
[2017-12-02 16:11:08,795 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:11:08] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-02 16:11:08,811 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:11:08] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-02 16:11:08,811 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:11:08] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-02 16:11:08,811 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:11:08] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-02 16:11:18,664 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-02 16:11:19,219 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-02 16:11:19,222 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-02 16:11:19,231 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-02 16:11:24,601 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:11:24] "POST /continue HTTP/1.1" 200 -
[2017-12-02 16:11:24,617 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:11:24] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-02 16:11:24,617 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:11:24] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-02 16:11:24,617 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:11:24] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-02 16:11:24,633 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:11:24] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-02 16:11:30,540 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:11:30] "POST /login HTTP/1.1" 302 -
[2017-12-02 16:11:30,555 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:11:30] "GET / HTTP/1.1" 200 -
[2017-12-02 16:11:35,493 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:11:35] "GET /continue HTTP/1.1" 200 -
[2017-12-02 16:11:38,603 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:11:38] "POST /continue HTTP/1.1" 302 -
[2017-12-02 16:11:38,619 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:11:38] "GET / HTTP/1.1" 200 -
[2017-12-02 16:11:43,025 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:11:43] "GET /continue HTTP/1.1" 200 -
[2017-12-02 16:11:47,682 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:11:47] "POST /continue HTTP/1.1" 200 -
[2017-12-02 16:12:03,621 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:12:03] "GET /py HTTP/1.1" 200 -
[2017-12-02 16:12:19,107 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:12:19] "GET /continue HTTP/1.1" 200 -
[2017-12-02 16:12:20,951 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:12:20] "POST /continue HTTP/1.1" 302 -
[2017-12-02 16:12:20,967 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:12:20] "GET / HTTP/1.1" 200 -
[2017-12-02 16:12:24,545 : INFO : views.py : 22 :             notes_db() ] started note db form
[2017-12-02 16:12:24,545 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-02 16:12:24,561 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:12:24] "GET /note HTTP/1.1" 200 -
[2017-12-02 16:12:35,937 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:12:35] "GET /continue HTTP/1.1" 200 -
[2017-12-02 16:12:37,468 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:12:37] "POST /continue HTTP/1.1" 200 -
[2017-12-02 16:12:52,886 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:12:52] "POST /login HTTP/1.1" 302 -
[2017-12-02 16:12:52,886 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:12:52] "GET / HTTP/1.1" 200 -
[2017-12-02 16:12:54,886 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:12:54] "GET /continue HTTP/1.1" 200 -
[2017-12-02 16:13:00,340 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:13:00] "POST /continue HTTP/1.1" 302 -
[2017-12-02 16:13:00,355 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:13:00] "GET / HTTP/1.1" 200 -
[2017-12-02 16:13:44,437 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:13:44] "GET / HTTP/1.1" 200 -
[2017-12-02 16:13:44,455 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:13:44] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-02 16:13:44,455 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:13:44] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-02 16:13:44,455 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:13:44] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-02 16:13:44,470 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:13:44] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-02 16:14:01,689 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:14:01] "GET /continue HTTP/1.1" 200 -
[2017-12-02 16:14:27,027 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:14:27] "GET /continue HTTP/1.1" 200 -
[2017-12-02 16:14:27,031 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:14:27] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-02 16:14:27,047 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:14:27] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-02 16:14:27,047 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:14:27] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-02 16:14:27,047 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:14:27] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-02 16:14:34,079 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:14:34] "GET /continue HTTP/1.1" 200 -
[2017-12-02 16:14:37,438 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:14:37] "POST /continue HTTP/1.1" 200 -
[2017-12-02 16:14:42,392 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:14:42] "POST /login HTTP/1.1" 302 -
[2017-12-02 16:14:42,408 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:14:42] "GET / HTTP/1.1" 200 -
[2017-12-02 16:14:45,314 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:14:45] "GET /continue HTTP/1.1" 200 -
[2017-12-02 16:14:52,846 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:14:52] "POST /continue HTTP/1.1" 302 -
[2017-12-02 16:14:52,846 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:14:52] "GET / HTTP/1.1" 200 -
[2017-12-02 16:14:55,940 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:14:55] "GET /continue HTTP/1.1" 200 -
[2017-12-02 16:14:57,128 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:14:57] "POST /continue HTTP/1.1" 200 -
[2017-12-02 16:15:00,910 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:15:00] "POST /login HTTP/1.1" 200 -
[2017-12-02 16:15:05,551 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:15:05] "POST /login HTTP/1.1" 302 -
[2017-12-02 16:15:05,551 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [02/Dec/2017 16:15:05] "GET / HTTP/1.1" 200 -
[2017-12-03 12:48:07,513 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 12:48:07] "GET / HTTP/1.1" 200 -
[2017-12-03 12:48:07,529 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 12:48:07] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-03 12:48:07,545 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 12:48:07] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-03 12:48:07,545 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 12:48:07] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-03 12:48:07,545 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 12:48:07] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-03 12:48:14,515 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 12:48:14] "GET /continue HTTP/1.1" 200 -
[2017-12-03 12:48:23,563 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 12:48:23] "GET /continue HTTP/1.1" 200 -
[2017-12-03 12:48:25,313 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 12:48:25] "POST /continue HTTP/1.1" 200 -
[2017-12-03 12:49:26,972 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_home\\views.py', reloading
[2017-12-03 12:49:27,102 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-03 12:49:27,710 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-03 12:49:27,710 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-03 12:49:27,725 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-03 13:27:06,199 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 13:27:06] "POST /login HTTP/1.1" 302 -
[2017-12-03 13:27:06,246 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 13:27:06] "GET / HTTP/1.1" 200 -
[2017-12-03 13:27:08,543 : INFO : views.py : 22 :             notes_db() ] started note db form
[2017-12-03 13:27:08,543 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-03 13:27:08,559 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 13:27:08] "GET /note HTTP/1.1" 200 -
[2017-12-03 13:27:08,621 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 13:27:08] "GET /static/fonts/glyphicons-halflings-regular.woff2 HTTP/1.1" 304 -
[2017-12-03 13:27:13,341 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 13:27:13] "GET /continue HTTP/1.1" 200 -
[2017-12-03 13:27:15,575 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 13:27:15] "GET / HTTP/1.1" 200 -
[2017-12-03 13:27:21,404 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 13:27:21] "GET /continue HTTP/1.1" 200 -
[2017-12-03 13:27:23,295 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 13:27:23] "POST /continue HTTP/1.1" 200 -
[2017-12-03 13:27:24,717 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 13:27:24] "GET /about HTTP/1.1" 200 -
[2017-12-03 13:27:30,514 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 13:27:30] "GET /continue HTTP/1.1" 200 -
[2017-12-03 13:27:32,389 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 13:27:32] "POST /continue HTTP/1.1" 302 -
[2017-12-03 13:27:32,405 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 13:27:32] "GET / HTTP/1.1" 200 -
[2017-12-03 13:27:40,453 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 13:27:40] "GET /continue HTTP/1.1" 200 -
[2017-12-03 13:27:42,922 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 13:27:42] "POST /continue HTTP/1.1" 200 -
[2017-12-03 13:27:50,782 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 13:27:50] "GET /about HTTP/1.1" 200 -
[2017-12-03 20:42:05,194 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\__init__.py', reloading
[2017-12-03 20:42:05,233 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-03 20:42:05,988 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-03 20:42:05,995 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-03 20:42:06,009 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-03 20:43:20,144 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\__init__.py', reloading
[2017-12-03 20:43:20,217 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-03 20:43:20,887 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-03 20:43:20,891 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-03 20:43:20,902 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-03 20:43:21,929 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\__init__.py', reloading
[2017-12-03 20:43:21,960 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-03 20:43:22,694 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-03 20:43:22,698 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-03 20:43:22,708 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-03 20:44:15,343 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\__init__.py', reloading
[2017-12-03 20:44:15,399 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-03 20:44:16,062 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-03 20:44:16,078 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-03 20:44:16,078 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-03 20:44:19,251 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\__init__.py', reloading
[2017-12-03 20:44:19,298 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-03 20:44:19,971 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-03 20:44:19,971 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-03 20:44:19,971 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-03 20:44:34,667 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\__init__.py', reloading
[2017-12-03 20:44:34,714 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-03 20:44:35,399 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-03 20:44:35,399 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-03 20:44:35,415 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-03 20:45:05,158 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-03 20:45:05,189 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-03 20:53:51,851 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-03 20:53:52,398 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-03 20:53:52,398 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-03 20:53:52,398 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-03 20:54:04,531 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 20:54:04] "GET /about HTTP/1.1" 200 -
[2017-12-03 20:54:09,126 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 20:54:09] "GET /note HTTP/1.1" 200 -
[2017-12-03 20:55:10,668 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 20:55:10] "GET /note HTTP/1.1" 200 -
[2017-12-03 20:56:07,096 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\login_req.py', reloading
[2017-12-03 20:56:07,169 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-03 20:56:07,781 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-03 20:56:07,784 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-03 20:56:07,793 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-03 20:56:09,623 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 20:56:09] "GET /about HTTP/1.1" 200 -
[2017-12-03 20:56:09,638 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 20:56:09] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-03 20:56:09,638 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 20:56:09] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-03 20:56:09,638 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 20:56:09] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-03 20:56:09,638 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 20:56:09] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-03 20:56:17,702 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 20:56:17] "GET /note HTTP/1.1" 500 -
[2017-12-03 20:56:17,751 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 20:56:17] "GET /note?__debugger__=yes&cmd=resource&f=style.css HTTP/1.1" 200 -
[2017-12-03 20:56:17,755 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 20:56:17] "GET /note?__debugger__=yes&cmd=resource&f=jquery.js HTTP/1.1" 200 -
[2017-12-03 20:56:17,844 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 20:56:17] "GET /note?__debugger__=yes&cmd=resource&f=debugger.js HTTP/1.1" 200 -
[2017-12-03 20:56:17,846 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 20:56:17] "GET /note?__debugger__=yes&cmd=resource&f=console.png HTTP/1.1" 200 -
[2017-12-03 20:56:17,858 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 20:56:17] "GET /note?__debugger__=yes&cmd=resource&f=console.png HTTP/1.1" 200 -
[2017-12-03 20:56:17,900 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 20:56:17] "GET /note?__debugger__=yes&cmd=resource&f=ubuntu.ttf HTTP/1.1" 200 -
[2017-12-03 20:56:30,032 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\login_req.py', reloading
[2017-12-03 20:56:30,069 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-03 20:56:30,694 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-03 20:56:30,698 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-03 20:56:30,706 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-03 20:56:35,098 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 20:56:35] "GET / HTTP/1.1" 200 -
[2017-12-03 20:56:43,224 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 20:56:43] "GET /grafana HTTP/1.1" 200 -
[2017-12-03 20:56:43,271 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 20:56:43] "GET /static/img/grafana/grafana_start.jpg HTTP/1.1" 200 -
[2017-12-03 20:56:43,271 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 20:56:43] "GET /static/img/grafana/grafana_dash.jpg HTTP/1.1" 200 -
[2017-12-03 20:56:43,271 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 20:56:43] "GET /static/img/grafana/table_postgre.jpg HTTP/1.1" 200 -
[2017-12-03 20:56:43,271 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 20:56:43] "GET /static/img/grafana/grafana_datasource.jpg HTTP/1.1" 200 -
[2017-12-03 20:56:43,286 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 20:56:43] "GET /static/img/grafana/grafana_panel.jpg HTTP/1.1" 200 -
[2017-12-03 20:56:43,286 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 20:56:43] "GET /static/img/grafana/grafana_query.jpg HTTP/1.1" 200 -
[2017-12-03 20:56:43,286 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 20:56:43] "GET /static/img/grafana/grafana_result.jpg HTTP/1.1" 200 -
[2017-12-03 20:56:50,349 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 20:56:50] "GET /note HTTP/1.1" 200 -
[2017-12-03 20:57:39,976 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 20:57:39] "GET /note HTTP/1.1" 200 -
[2017-12-03 20:57:40,026 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 20:57:40] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-03 20:57:40,030 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 20:57:40] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-03 20:57:40,034 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 20:57:40] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-03 20:57:40,037 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 20:57:40] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-03 20:58:39,805 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\login_req.py', reloading
[2017-12-03 20:58:39,847 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-03 20:58:40,489 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-03 20:58:40,493 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-03 20:58:40,501 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-03 20:58:40,747 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 20:58:40] "GET /note HTTP/1.1" 200 -
[2017-12-03 20:58:40,763 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 20:58:40] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-03 20:58:40,763 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 20:58:40] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-03 20:58:40,763 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 20:58:40] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-03 20:58:40,763 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 20:58:40] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-03 20:58:42,937 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 20:58:42] "POST /continue HTTP/1.1" 302 -
[2017-12-03 20:58:42,937 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 20:58:42] "GET / HTTP/1.1" 200 -
[2017-12-03 20:58:47,422 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 20:58:47] "POST /login HTTP/1.1" 302 -
[2017-12-03 20:58:47,437 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 20:58:47] "GET / HTTP/1.1" 200 -
[2017-12-03 20:58:50,422 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 20:58:50] "GET /note HTTP/1.1" 200 -
[2017-12-03 20:58:59,531 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\login_req.py', reloading
[2017-12-03 20:58:59,566 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-03 20:59:00,183 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-03 20:59:00,186 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-03 20:59:00,194 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-03 20:59:00,599 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 20:59:00] "GET /note HTTP/1.1" 200 -
[2017-12-03 20:59:00,618 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 20:59:00] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-03 20:59:00,621 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 20:59:00] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-03 20:59:00,624 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 20:59:00] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-03 20:59:00,627 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 20:59:00] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-03 20:59:02,564 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 20:59:02] "POST /continue HTTP/1.1" 302 -
[2017-12-03 20:59:02,580 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 20:59:02] "GET / HTTP/1.1" 200 -
[2017-12-03 20:59:07,158 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 20:59:07] "POST /login HTTP/1.1" 302 -
[2017-12-03 20:59:07,158 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 20:59:07] "GET / HTTP/1.1" 200 -
[2017-12-03 20:59:09,221 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 20:59:09] "GET /note HTTP/1.1" 200 -
[2017-12-03 20:59:13,628 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 20:59:13] "POST /continue HTTP/1.1" 302 -
[2017-12-03 20:59:13,659 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 20:59:13] "GET / HTTP/1.1" 200 -
[2017-12-03 20:59:23,707 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 20:59:23] "GET /continue HTTP/1.1" 200 -
[2017-12-03 20:59:25,535 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 20:59:25] "POST /continue HTTP/1.1" 302 -
[2017-12-03 20:59:25,535 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 20:59:25] "GET / HTTP/1.1" 200 -
[2017-12-03 20:59:28,223 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 20:59:28] "GET /note HTTP/1.1" 200 -
[2017-12-03 21:00:06,958 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\login_req.py', reloading
[2017-12-03 21:00:07,009 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-03 21:00:07,702 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-03 21:00:07,706 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-03 21:00:07,718 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-03 21:00:08,624 : INFO : views.py : 24 :             notes_db() ] started note db form
[2017-12-03 21:00:08,624 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-03 21:00:08,702 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:00:08] "GET /note HTTP/1.1" 200 -
[2017-12-03 21:00:08,717 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:00:08] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-03 21:00:08,719 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:00:08] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-03 21:00:08,723 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:00:08] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-03 21:00:08,726 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:00:08] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-03 21:00:08,774 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:00:08] "GET /static/fonts/glyphicons-halflings-regular.woff2 HTTP/1.1" 304 -
[2017-12-03 21:00:16,380 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:00:16] "GET /continue HTTP/1.1" 200 -
[2017-12-03 21:00:19,615 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:00:19] "GET /about HTTP/1.1" 200 -
[2017-12-03 21:00:25,475 : INFO : views.py : 24 :             notes_db() ] started note db form
[2017-12-03 21:00:25,475 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-03 21:00:25,475 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:00:25] "GET /note HTTP/1.1" 200 -
[2017-12-03 21:00:36,351 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:00:36] "GET /continue HTTP/1.1" 200 -
[2017-12-03 21:00:38,429 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:00:38] "POST /continue HTTP/1.1" 200 -
[2017-12-03 21:00:56,866 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:00:56] "POST /continue HTTP/1.1" 200 -
[2017-12-03 21:00:56,882 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:00:56] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-03 21:00:56,882 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:00:56] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-03 21:00:56,898 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:00:56] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-03 21:00:56,898 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:00:56] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-03 21:01:05,930 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:01:05] "GET /grafana HTTP/1.1" 200 -
[2017-12-03 21:01:08,242 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:01:08] "GET /note HTTP/1.1" 500 -
[2017-12-03 21:01:13,040 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:01:13] "GET /note?__debugger__=yes&cmd=resource&f=style.css HTTP/1.1" 200 -
[2017-12-03 21:01:13,055 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:01:13] "GET /note?__debugger__=yes&cmd=resource&f=jquery.js HTTP/1.1" 200 -
[2017-12-03 21:01:13,071 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:01:13] "GET /note?__debugger__=yes&cmd=resource&f=debugger.js HTTP/1.1" 200 -
[2017-12-03 21:01:13,071 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:01:13] "GET /note?__debugger__=yes&cmd=resource&f=console.png HTTP/1.1" 200 -
[2017-12-03 21:01:13,134 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:01:13] "GET /note?__debugger__=yes&cmd=resource&f=ubuntu.ttf HTTP/1.1" 200 -
[2017-12-03 21:01:13,149 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:01:13] "GET /note?__debugger__=yes&cmd=resource&f=console.png HTTP/1.1" 200 -
[2017-12-03 21:05:25,251 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-03 21:05:25,279 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-03 21:05:25,975 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-03 21:05:25,978 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-03 21:05:25,988 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-03 21:05:52,234 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-03 21:05:52,265 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-03 21:05:52,919 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-03 21:05:52,924 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-03 21:05:52,939 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-03 21:11:06,180 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-03 21:11:06,215 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-03 21:11:06,878 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-03 21:11:06,881 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-03 21:11:06,894 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-03 21:12:30,315 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-03 21:12:30,347 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-03 21:20:37,927 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-03 21:20:38,458 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-03 21:20:38,458 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-03 21:20:38,458 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-03 21:20:47,641 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:20:47] "GET / HTTP/1.1" 200 -
[2017-12-03 21:20:52,407 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:20:52] "GET /about HTTP/1.1" 200 -
[2017-12-03 21:20:54,735 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:20:54] "GET /py HTTP/1.1" 200 -
[2017-12-03 21:20:54,767 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:20:54] "GET /static/img/import_cls/app_form_mod.jpg HTTP/1.1" 200 -
[2017-12-03 21:20:54,767 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:20:54] "GET /static/img/import_cls/add_init.jpg HTTP/1.1" 200 -
[2017-12-03 21:21:01,845 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:21:01] "GET /continue HTTP/1.1" 500 -
[2017-12-03 21:21:01,892 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:21:01] "GET /continue?__debugger__=yes&cmd=resource&f=style.css HTTP/1.1" 200 -
[2017-12-03 21:21:01,908 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:21:01] "GET /continue?__debugger__=yes&cmd=resource&f=jquery.js HTTP/1.1" 200 -
[2017-12-03 21:21:01,908 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:21:01] "GET /continue?__debugger__=yes&cmd=resource&f=debugger.js HTTP/1.1" 200 -
[2017-12-03 21:21:01,924 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:21:01] "GET /continue?__debugger__=yes&cmd=resource&f=ubuntu.ttf HTTP/1.1" 200 -
[2017-12-03 21:21:01,939 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:21:01] "GET /continue?__debugger__=yes&cmd=resource&f=console.png HTTP/1.1" 200 -
[2017-12-03 21:21:01,986 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:21:01] "GET /continue?__debugger__=yes&cmd=resource&f=console.png HTTP/1.1" 200 -
[2017-12-03 21:21:06,268 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:21:06] "GET / HTTP/1.1" 200 -
[2017-12-03 21:21:09,471 : INFO : views.py : 35 :             notes_db() ] started note db form
[2017-12-03 21:21:09,471 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-03 21:21:09,487 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:21:09] "GET /note HTTP/1.1" 200 -
[2017-12-03 21:21:47,299 : INFO : views.py : 35 :             notes_db() ] started note db form
[2017-12-03 21:21:47,300 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-03 21:21:47,301 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:21:47] "GET /note HTTP/1.1" 200 -
[2017-12-03 21:21:47,943 : INFO : views.py : 35 :             notes_db() ] started note db form
[2017-12-03 21:21:47,943 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-03 21:21:47,958 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:21:47] "GET /note HTTP/1.1" 200 -
[2017-12-03 21:22:06,469 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-03 21:22:06,505 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-03 21:22:07,220 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-03 21:22:07,223 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-03 21:22:07,231 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-03 21:22:12,476 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:22:12] "GET /about HTTP/1.1" 200 -
[2017-12-03 21:22:23,569 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:22:23] "GET /note HTTP/1.1" 200 -
[2017-12-03 21:22:33,679 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:22:33] "POST /login HTTP/1.1" 302 -
[2017-12-03 21:22:33,695 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:22:33] "GET / HTTP/1.1" 200 -
[2017-12-03 21:22:36,383 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:22:36] "GET /note HTTP/1.1" 200 -
[2017-12-03 21:22:53,840 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-03 21:22:53,891 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-03 21:22:54,437 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-03 21:22:54,437 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-03 21:22:54,453 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-03 21:23:20,778 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_home\\views.py', reloading
[2017-12-03 21:23:20,812 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-03 21:23:21,397 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-03 21:23:21,400 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-03 21:23:21,409 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-03 21:23:46,944 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-03 21:23:46,978 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-03 21:23:47,661 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-03 21:23:47,664 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-03 21:23:47,673 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-03 21:23:48,693 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-03 21:23:48,725 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-03 21:23:49,340 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-03 21:23:49,343 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-03 21:23:49,351 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-03 21:24:03,067 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_home\\views.py', reloading
[2017-12-03 21:24:03,099 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-03 21:24:03,733 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-03 21:24:03,736 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-03 21:24:03,743 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-03 21:24:15,351 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-03 21:24:15,371 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-03 21:24:16,055 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-03 21:24:16,058 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-03 21:24:16,066 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-03 21:24:18,134 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-03 21:24:18,181 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-03 21:24:18,725 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-03 21:24:18,725 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-03 21:24:18,741 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-03 21:24:29,238 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-03 21:24:29,336 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-03 21:24:29,903 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-03 21:24:29,903 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-03 21:24:29,903 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-03 21:24:35,709 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:24:35] "POST /login HTTP/1.1" 200 -
[2017-12-03 21:24:41,653 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:24:41] "POST /login HTTP/1.1" 302 -
[2017-12-03 21:24:41,668 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:24:41] "GET / HTTP/1.1" 200 -
[2017-12-03 21:24:45,872 : INFO : views.py : 35 :             notes_db() ] started note db form
[2017-12-03 21:24:45,888 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-03 21:24:45,888 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:24:45] "GET /note HTTP/1.1" 200 -
[2017-12-03 21:24:48,732 : INFO : views.py : 35 :             notes_db() ] started note db form
[2017-12-03 21:24:48,732 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-03 21:24:48,747 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:24:48] "GET /note HTTP/1.1" 200 -
[2017-12-03 21:24:51,904 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:24:51] "GET /continue HTTP/1.1" 200 -
[2017-12-03 21:24:56,811 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:24:56] "POST /continue HTTP/1.1" 200 -
[2017-12-03 21:25:11,436 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:25:11] "POST /login HTTP/1.1" 302 -
[2017-12-03 21:25:11,452 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:25:11] "GET / HTTP/1.1" 200 -
[2017-12-03 21:25:19,499 : INFO : views.py : 35 :             notes_db() ] started note db form
[2017-12-03 21:25:19,499 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-03 21:25:19,515 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:25:19] "GET /note HTTP/1.1" 200 -
[2017-12-03 21:25:29,641 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:25:29] "GET /continue HTTP/1.1" 200 -
[2017-12-03 21:25:36,501 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:25:36] "POST /continue HTTP/1.1" 302 -
[2017-12-03 21:25:36,517 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:25:36] "GET / HTTP/1.1" 200 -
[2017-12-03 21:25:38,720 : INFO : views.py : 35 :             notes_db() ] started note db form
[2017-12-03 21:25:38,720 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-03 21:25:38,720 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:25:38] "GET /note HTTP/1.1" 200 -
[2017-12-03 21:25:40,595 : INFO : views.py : 35 :             notes_db() ] started note db form
[2017-12-03 21:25:40,595 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-03 21:25:40,595 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:25:40] "GET /note HTTP/1.1" 200 -
[2017-12-03 21:25:43,580 : INFO : views.py : 35 :             notes_db() ] started note db form
[2017-12-03 21:25:43,580 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-03 21:25:43,596 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:25:43] "GET /note HTTP/1.1" 200 -
[2017-12-03 21:25:44,643 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:25:44] "GET /continue HTTP/1.1" 200 -
[2017-12-03 21:25:47,284 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:25:47] "POST /continue HTTP/1.1" 200 -
[2017-12-03 21:25:50,893 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:25:50] "GET / HTTP/1.1" 200 -
[2017-12-03 21:25:56,691 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:25:56] "GET /continue HTTP/1.1" 200 -
[2017-12-03 21:27:01,982 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-03 21:27:02,014 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-03 21:27:02,702 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-03 21:27:02,705 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-03 21:27:02,714 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-03 21:27:13,292 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:27:13] "GET /about HTTP/1.1" 200 -
[2017-12-03 21:27:15,871 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:27:15] "GET /note HTTP/1.1" 500 -
[2017-12-03 21:27:20,387 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:27:20] "GET /note?__debugger__=yes&cmd=resource&f=style.css HTTP/1.1" 200 -
[2017-12-03 21:27:20,402 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:27:20] "GET /note?__debugger__=yes&cmd=resource&f=jquery.js HTTP/1.1" 200 -
[2017-12-03 21:27:20,418 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:27:20] "GET /note?__debugger__=yes&cmd=resource&f=debugger.js HTTP/1.1" 200 -
[2017-12-03 21:27:20,418 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:27:20] "GET /note?__debugger__=yes&cmd=resource&f=console.png HTTP/1.1" 200 -
[2017-12-03 21:27:20,481 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:27:20] "GET /note?__debugger__=yes&cmd=resource&f=ubuntu.ttf HTTP/1.1" 200 -
[2017-12-03 21:27:20,496 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:27:20] "GET /note?__debugger__=yes&cmd=resource&f=console.png HTTP/1.1" 200 -
[2017-12-03 21:27:59,945 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-03 21:27:59,998 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-03 21:28:00,659 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-03 21:28:00,662 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-03 21:28:00,670 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-03 21:28:04,893 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:28:04] "GET / HTTP/1.1" 200 -
[2017-12-03 21:28:06,523 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:28:06] "GET /about HTTP/1.1" 200 -
[2017-12-03 21:28:08,070 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:28:08] "GET /note HTTP/1.1" 500 -
[2017-12-03 21:28:11,930 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:28:11] "GET /note?__debugger__=yes&cmd=resource&f=style.css HTTP/1.1" 200 -
[2017-12-03 21:28:11,945 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:28:11] "GET /note?__debugger__=yes&cmd=resource&f=jquery.js HTTP/1.1" 200 -
[2017-12-03 21:28:11,961 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:28:11] "GET /note?__debugger__=yes&cmd=resource&f=debugger.js HTTP/1.1" 200 -
[2017-12-03 21:28:11,977 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:28:11] "GET /note?__debugger__=yes&cmd=resource&f=console.png HTTP/1.1" 200 -
[2017-12-03 21:28:12,024 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:28:12] "GET /note?__debugger__=yes&cmd=resource&f=console.png HTTP/1.1" 200 -
[2017-12-03 21:28:28,098 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-03 21:28:28,129 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-03 21:28:28,848 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-03 21:28:28,853 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-03 21:28:28,863 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-03 21:28:31,526 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:28:31] "GET / HTTP/1.1" 200 -
[2017-12-03 21:28:32,964 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:28:32] "GET /about HTTP/1.1" 200 -
[2017-12-03 21:28:35,542 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:28:35] "GET /continue HTTP/1.1" 200 -
[2017-12-03 21:28:38,605 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:28:38] "POST /continue HTTP/1.1" 200 -
[2017-12-03 21:28:45,840 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:28:45] "POST /login HTTP/1.1" 500 -
[2017-12-03 21:28:45,856 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:28:45] "GET /login?__debugger__=yes&cmd=resource&f=style.css HTTP/1.1" 200 -
[2017-12-03 21:28:45,856 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:28:45] "GET /login?__debugger__=yes&cmd=resource&f=jquery.js HTTP/1.1" 200 -
[2017-12-03 21:28:45,856 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:28:45] "GET /login?__debugger__=yes&cmd=resource&f=debugger.js HTTP/1.1" 200 -
[2017-12-03 21:28:45,887 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:28:45] "GET /login?__debugger__=yes&cmd=resource&f=ubuntu.ttf HTTP/1.1" 200 -
[2017-12-03 21:28:45,903 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:28:45] "GET /login?__debugger__=yes&cmd=resource&f=console.png HTTP/1.1" 200 -
[2017-12-03 21:28:45,965 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:28:45] "GET /login?__debugger__=yes&cmd=resource&f=console.png HTTP/1.1" 200 -
[2017-12-03 21:29:27,070 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-03 21:29:27,110 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-03 21:29:27,782 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-03 21:29:27,786 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-03 21:29:27,795 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-03 21:29:34,053 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:29:34] "GET / HTTP/1.1" 200 -
[2017-12-03 21:29:36,975 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:29:36] "GET /continue HTTP/1.1" 200 -
[2017-12-03 21:29:38,507 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:29:38] "POST /continue HTTP/1.1" 200 -
[2017-12-03 21:29:42,117 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:29:42] "GET /about HTTP/1.1" 200 -
[2017-12-03 21:29:49,571 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:29:49] "GET /continue HTTP/1.1" 200 -
[2017-12-03 21:32:06,239 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-03 21:32:06,275 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-03 21:32:06,839 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-03 21:32:06,839 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-03 21:32:06,839 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-03 21:33:00,525 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-03 21:33:00,545 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-03 21:33:01,229 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-03 21:33:01,233 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-03 21:33:01,243 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-03 21:33:13,910 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:33:13] "GET /about HTTP/1.1" 200 -
[2017-12-03 21:33:26,663 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-03 21:33:26,705 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-03 21:33:27,370 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-03 21:33:27,373 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-03 21:33:27,382 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-03 21:33:43,255 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-03 21:33:43,300 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-03 21:33:44,022 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-03 21:33:44,028 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-03 21:33:44,038 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-03 21:33:54,921 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:33:54] "GET /continue HTTP/1.1" 200 -
[2017-12-03 21:33:59,344 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:33:59] "POST /continue HTTP/1.1" 302 -
[2017-12-03 21:33:59,344 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:33:59] "GET / HTTP/1.1" 200 -
[2017-12-03 21:34:01,969 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:34:01] "GET /continue HTTP/1.1" 200 -
[2017-12-03 21:34:38,097 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:34:38] "POST /continue HTTP/1.1" 200 -
[2017-12-03 21:34:56,880 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:34:56] "POST /login HTTP/1.1" 200 -
[2017-12-03 21:35:00,911 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:35:00] "POST /login HTTP/1.1" 200 -
[2017-12-03 21:35:02,583 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:35:02] "POST /login HTTP/1.1" 200 -
[2017-12-03 21:35:04,443 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:35:04] "POST /login HTTP/1.1" 200 -
[2017-12-03 21:35:05,287 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:35:05] "POST /login HTTP/1.1" 200 -
[2017-12-03 21:35:05,881 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:35:05] "POST /login HTTP/1.1" 200 -
[2017-12-03 21:35:11,537 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:35:11] "POST /login HTTP/1.1" 200 -
[2017-12-03 21:35:21,766 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:35:21] "POST /login HTTP/1.1" 302 -
[2017-12-03 21:35:21,766 : INFO : views.py : 35 :             notes_db() ] started note db form
[2017-12-03 21:35:21,766 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-03 21:35:21,781 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:35:21] "GET /note HTTP/1.1" 200 -
[2017-12-03 21:35:25,766 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:35:25] "GET / HTTP/1.1" 200 -
[2017-12-03 21:35:30,845 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:35:30] "GET /grafana HTTP/1.1" 200 -
[2017-12-03 21:35:33,158 : INFO : views.py : 35 :             notes_db() ] started note db form
[2017-12-03 21:35:33,158 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-03 21:35:33,158 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:35:33] "GET /note HTTP/1.1" 200 -
[2017-12-03 21:35:37,955 : INFO : views.py : 35 :             notes_db() ] started note db form
[2017-12-03 21:35:37,955 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-03 21:35:37,971 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:35:37] "GET /note HTTP/1.1" 200 -
[2017-12-03 21:35:50,941 : INFO : views.py : 35 :             notes_db() ] started note db form
[2017-12-03 21:35:50,941 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-03 21:35:50,941 : INFO : views.py : 41 :             notes_db() ] post action
[2017-12-03 21:35:50,956 : DEBUG : sqlalchemy_statments.py : 55 :           get_max_id() ] (9,)
[2017-12-03 21:35:50,956 : DEBUG : sqlalchemy_statments.py : 85 :               insert() ] Added 1 row to sqlite3, with id 10
[2017-12-03 21:35:50,956 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:35:50] "POST /note HTTP/1.1" 200 -
[2017-12-03 21:35:52,318 : INFO : views.py : 35 :             notes_db() ] started note db form
[2017-12-03 21:35:52,318 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-03 21:35:52,318 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:35:52] "GET /note HTTP/1.1" 200 -
[2017-12-03 21:36:39,967 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:36:39] "GET /about HTTP/1.1" 200 -
[2017-12-03 21:37:51,096 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-03 21:37:51,134 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-03 21:37:51,831 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-03 21:37:51,835 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-03 21:37:51,846 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-03 21:38:12,738 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-03 21:38:12,772 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-03 21:38:13,450 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-03 21:38:13,450 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-03 21:38:13,450 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-03 21:38:16,545 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-03 21:38:16,636 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-03 21:38:17,322 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-03 21:38:17,325 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-03 21:38:17,335 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-03 21:38:18,471 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:38:18] "GET /about HTTP/1.1" 200 -
[2017-12-03 21:38:18,487 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:38:18] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-03 21:38:18,487 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:38:18] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-03 21:38:18,503 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:38:18] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-03 21:38:18,503 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:38:18] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-03 21:38:26,566 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:38:26] "GET /note HTTP/1.1" 500 -
[2017-12-03 21:38:26,597 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:38:26] "GET /note?__debugger__=yes&cmd=resource&f=style.css HTTP/1.1" 200 -
[2017-12-03 21:38:26,597 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:38:26] "GET /note?__debugger__=yes&cmd=resource&f=jquery.js HTTP/1.1" 200 -
[2017-12-03 21:38:26,597 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:38:26] "GET /note?__debugger__=yes&cmd=resource&f=debugger.js HTTP/1.1" 200 -
[2017-12-03 21:38:26,629 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:38:26] "GET /note?__debugger__=yes&cmd=resource&f=console.png HTTP/1.1" 200 -
[2017-12-03 21:38:26,707 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:38:26] "GET /note?__debugger__=yes&cmd=resource&f=ubuntu.ttf HTTP/1.1" 200 -
[2017-12-03 21:38:26,707 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:38:26] "GET /note?__debugger__=yes&cmd=resource&f=console.png HTTP/1.1" 200 -
[2017-12-03 21:38:41,256 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-03 21:38:41,787 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-03 21:38:41,787 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-03 21:38:41,787 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-03 21:38:49,692 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:38:49] "GET / HTTP/1.1" 200 -
[2017-12-03 21:38:52,177 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:38:52] "GET /continue HTTP/1.1" 200 -
[2017-12-03 21:38:53,380 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:38:53] "POST /continue HTTP/1.1" 302 -
[2017-12-03 21:38:56,677 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:38:56] "GET / HTTP/1.1" 200 -
[2017-12-03 21:39:00,881 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:39:00] "GET /note HTTP/1.1" 500 -
[2017-12-03 21:39:00,897 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:39:00] "GET /note?__debugger__=yes&cmd=resource&f=style.css HTTP/1.1" 200 -
[2017-12-03 21:39:04,725 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:39:04] "GET /note?__debugger__=yes&cmd=resource&f=jquery.js HTTP/1.1" 200 -
[2017-12-03 21:39:04,725 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:39:04] "GET /note?__debugger__=yes&cmd=resource&f=debugger.js HTTP/1.1" 200 -
[2017-12-03 21:39:04,725 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:39:04] "GET /note?__debugger__=yes&cmd=resource&f=console.png HTTP/1.1" 200 -
[2017-12-03 21:39:04,756 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:39:04] "GET /note?__debugger__=yes&cmd=resource&f=console.png HTTP/1.1" 200 -
[2017-12-03 21:39:29,118 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-03 21:39:29,175 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-03 21:39:29,882 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-03 21:39:29,888 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-03 21:39:29,897 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-03 21:39:42,616 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-03 21:39:42,659 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-03 21:39:43,320 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-03 21:39:43,323 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-03 21:39:43,333 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-03 21:39:45,392 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-03 21:39:45,444 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-03 21:39:46,032 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-03 21:39:46,036 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-03 21:39:46,043 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-03 21:39:53,676 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:39:53] "GET / HTTP/1.1" 200 -
[2017-12-03 21:39:56,098 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:39:56] "GET /continue HTTP/1.1" 200 -
[2017-12-03 21:39:57,973 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:39:57] "POST /continue HTTP/1.1" 200 -
[2017-12-03 21:40:01,099 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:40:01] "GET / HTTP/1.1" 200 -
[2017-12-03 21:40:06,787 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:40:06] "GET /about HTTP/1.1" 200 -
[2017-12-03 21:40:08,318 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:40:08] "GET /note HTTP/1.1" 500 -
[2017-12-03 21:40:08,334 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:40:08] "GET /note?__debugger__=yes&cmd=resource&f=style.css HTTP/1.1" 200 -
[2017-12-03 21:40:12,850 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:40:12] "GET /note?__debugger__=yes&cmd=resource&f=jquery.js HTTP/1.1" 200 -
[2017-12-03 21:40:12,912 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:40:12] "GET /note?__debugger__=yes&cmd=resource&f=debugger.js HTTP/1.1" 200 -
[2017-12-03 21:40:12,928 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:40:12] "GET /note?__debugger__=yes&cmd=resource&f=console.png HTTP/1.1" 200 -
[2017-12-03 21:40:12,928 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:40:12] "GET /note?__debugger__=yes&cmd=resource&f=console.png HTTP/1.1" 200 -
[2017-12-03 21:40:27,161 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-03 21:40:27,197 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-03 21:40:27,881 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-03 21:40:27,885 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-03 21:40:27,896 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-03 21:40:30,956 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-03 21:40:30,987 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-03 21:40:31,628 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-03 21:40:31,628 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-03 21:40:31,628 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-03 21:40:44,596 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:40:44] "GET /note HTTP/1.1" 500 -
[2017-12-03 21:40:44,627 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:40:44] "GET /note?__debugger__=yes&cmd=resource&f=style.css HTTP/1.1" 200 -
[2017-12-03 21:40:44,627 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:40:44] "GET /note?__debugger__=yes&cmd=resource&f=jquery.js HTTP/1.1" 200 -
[2017-12-03 21:40:44,643 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:40:44] "GET /note?__debugger__=yes&cmd=resource&f=debugger.js HTTP/1.1" 200 -
[2017-12-03 21:40:44,674 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:40:44] "GET /note?__debugger__=yes&cmd=resource&f=console.png HTTP/1.1" 200 -
[2017-12-03 21:40:44,768 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:40:44] "GET /note?__debugger__=yes&cmd=resource&f=console.png HTTP/1.1" 200 -
[2017-12-03 21:40:47,784 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:40:47] "GET / HTTP/1.1" 200 -
[2017-12-03 21:41:00,352 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:41:00] "GET /continue HTTP/1.1" 200 -
[2017-12-03 21:41:13,979 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-03 21:41:14,010 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-03 21:41:14,709 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-03 21:41:14,714 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-03 21:41:14,727 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-03 21:41:16,070 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:41:16] "POST /continue HTTP/1.1" 200 -
[2017-12-03 21:41:19,195 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:41:19] "POST /login HTTP/1.1" 200 -
[2017-12-03 21:41:23,133 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:41:23] "POST /login HTTP/1.1" 200 -
[2017-12-03 21:41:27,962 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:41:27] "POST /login HTTP/1.1" 302 -
[2017-12-03 21:41:27,962 : INFO : views.py : 35 :             notes_db() ] started note db form
[2017-12-03 21:41:27,962 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-03 21:41:27,993 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:41:27] "GET /note HTTP/1.1" 200 -
[2017-12-03 21:41:30,525 : INFO : views.py : 35 :             notes_db() ] started note db form
[2017-12-03 21:41:30,525 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-03 21:41:30,540 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:41:30] "GET /note HTTP/1.1" 200 -
[2017-12-03 21:41:31,369 : INFO : views.py : 35 :             notes_db() ] started note db form
[2017-12-03 21:41:31,369 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-03 21:41:31,369 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:41:31] "GET /note HTTP/1.1" 200 -
[2017-12-03 21:41:33,072 : INFO : views.py : 35 :             notes_db() ] started note db form
[2017-12-03 21:41:33,072 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-03 21:41:33,087 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:41:33] "GET /note HTTP/1.1" 200 -
[2017-12-03 21:41:34,259 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:41:34] "GET / HTTP/1.1" 200 -
[2017-12-03 21:41:37,541 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:41:37] "GET /continue HTTP/1.1" 200 -
[2017-12-03 21:41:40,120 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:41:40] "POST /continue HTTP/1.1" 200 -
[2017-12-03 21:41:49,792 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:41:49] "POST /login HTTP/1.1" 302 -
[2017-12-03 21:41:49,792 : INFO : views.py : 35 :             notes_db() ] started note db form
[2017-12-03 21:41:49,792 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-03 21:41:49,792 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:41:49] "GET /note HTTP/1.1" 200 -
[2017-12-03 21:41:53,027 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:41:53] "GET /continue HTTP/1.1" 200 -
[2017-12-03 21:42:03,144 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-03 21:42:03,170 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-03 21:42:03,884 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-03 21:42:03,887 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-03 21:42:03,895 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-03 21:42:15,505 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-03 21:42:15,537 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-03 21:42:16,177 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-03 21:42:16,180 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-03 21:42:16,189 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-03 21:42:25,521 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-03 21:42:25,552 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-03 21:42:26,253 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-03 21:42:26,258 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-03 21:42:26,271 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-03 21:42:28,317 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-03 21:42:28,377 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-03 21:42:28,989 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-03 21:42:28,992 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-03 21:42:29,001 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-03 21:42:29,213 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:42:29] "GET /continue HTTP/1.1" 200 -
[2017-12-03 21:42:29,228 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:42:29] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-03 21:42:29,228 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:42:29] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-03 21:42:29,228 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:42:29] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-03 21:42:29,244 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:42:29] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-03 21:42:36,280 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:42:36] "GET /note HTTP/1.1" 200 -
[2017-12-03 21:42:42,765 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:42:42] "POST /login HTTP/1.1" 302 -
[2017-12-03 21:42:42,765 : INFO : views.py : 35 :             notes_db() ] started note db form
[2017-12-03 21:42:42,765 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-03 21:42:42,780 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:42:42] "GET /note HTTP/1.1" 200 -
[2017-12-03 21:42:59,604 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-03 21:42:59,635 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-03 21:43:00,354 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-03 21:43:00,358 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-03 21:43:00,367 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-03 21:43:08,789 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-03 21:43:08,833 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-03 21:43:09,463 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-03 21:43:09,466 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-03 21:43:09,475 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-03 21:43:13,608 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-03 21:43:13,662 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-03 21:43:14,275 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-03 21:43:14,278 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-03 21:43:14,286 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-03 21:43:15,058 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:43:15] "GET /note HTTP/1.1" 200 -
[2017-12-03 21:43:15,074 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:43:15] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-03 21:43:15,089 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:43:15] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-03 21:43:15,089 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:43:15] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-03 21:43:15,089 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:43:15] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-03 21:43:17,781 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:43:17] "POST /login HTTP/1.1" 200 -
[2017-12-03 21:43:21,766 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:43:21] "POST /login HTTP/1.1" 302 -
[2017-12-03 21:43:21,766 : INFO : views.py : 35 :             notes_db() ] started note db form
[2017-12-03 21:43:21,766 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-03 21:43:21,782 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:43:21] "GET /note HTTP/1.1" 200 -
[2017-12-03 21:43:26,079 : INFO : views.py : 35 :             notes_db() ] started note db form
[2017-12-03 21:43:26,079 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-03 21:43:26,079 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:43:26] "GET /note HTTP/1.1" 200 -
[2017-12-03 21:43:28,845 : INFO : views.py : 35 :             notes_db() ] started note db form
[2017-12-03 21:43:28,845 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-03 21:43:28,861 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:43:28] "GET /note HTTP/1.1" 200 -
[2017-12-03 21:43:30,189 : INFO : views.py : 35 :             notes_db() ] started note db form
[2017-12-03 21:43:30,189 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-03 21:43:30,189 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:43:30] "GET /note HTTP/1.1" 200 -
[2017-12-03 21:45:39,051 : INFO : views.py : 35 :             notes_db() ] started note db form
[2017-12-03 21:45:39,052 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-03 21:45:39,052 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:45:39] "GET /note HTTP/1.1" 200 -
[2017-12-03 21:45:39,068 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:45:39] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-03 21:45:39,068 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:45:39] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-03 21:45:39,084 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:45:39] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-03 21:45:39,084 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:45:39] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-03 21:45:41,287 : INFO : views.py : 35 :             notes_db() ] started note db form
[2017-12-03 21:45:41,287 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-03 21:45:41,287 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:45:41] "GET /note HTTP/1.1" 200 -
[2017-12-03 21:45:45,584 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:45:45] "GET /continue HTTP/1.1" 200 -
[2017-12-03 21:45:50,413 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:45:50] "POST /continue HTTP/1.1" 500 -
[2017-12-03 21:45:50,475 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:45:50] "GET /continue?__debugger__=yes&cmd=resource&f=style.css HTTP/1.1" 200 -
[2017-12-03 21:45:50,475 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:45:50] "GET /continue?__debugger__=yes&cmd=resource&f=jquery.js HTTP/1.1" 200 -
[2017-12-03 21:45:50,491 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:45:50] "GET /continue?__debugger__=yes&cmd=resource&f=debugger.js HTTP/1.1" 200 -
[2017-12-03 21:45:50,522 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:45:50] "GET /continue?__debugger__=yes&cmd=resource&f=console.png HTTP/1.1" 200 -
[2017-12-03 21:45:50,585 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:45:50] "GET /continue?__debugger__=yes&cmd=resource&f=ubuntu.ttf HTTP/1.1" 200 -
[2017-12-03 21:45:50,600 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:45:50] "GET /continue?__debugger__=yes&cmd=resource&f=console.png HTTP/1.1" 200 -
[2017-12-03 21:47:19,828 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:47:19] "GET /continue HTTP/1.1" 200 -
[2017-12-03 21:47:23,735 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:47:23] "POST /continue HTTP/1.1" 200 -
[2017-12-03 21:47:32,298 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:47:32] "POST /login HTTP/1.1" 302 -
[2017-12-03 21:47:32,298 : INFO : views.py : 35 :             notes_db() ] started note db form
[2017-12-03 21:47:32,298 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-03 21:47:32,298 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:47:32] "GET /note HTTP/1.1" 200 -
[2017-12-03 21:47:51,000 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:47:51] "GET /continue HTTP/1.1" 200 -
[2017-12-03 21:47:52,438 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:47:52] "POST /continue HTTP/1.1" 200 -
[2017-12-03 21:47:54,422 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:47:54] "GET /about HTTP/1.1" 200 -
[2017-12-03 21:48:00,142 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:48:00] "GET /py HTTP/1.1" 200 -
[2017-12-03 21:48:02,111 : INFO : views.py : 35 :             notes_db() ] started note db form
[2017-12-03 21:48:02,111 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-03 21:48:02,111 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:48:02] "GET /note HTTP/1.1" 200 -
[2017-12-03 21:48:12,424 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:48:12] "GET /continue HTTP/1.1" 200 -
[2017-12-03 21:48:14,096 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:48:14] "POST /continue HTTP/1.1" 200 -
[2017-12-03 21:48:16,003 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:48:16] "GET /about HTTP/1.1" 200 -
[2017-12-03 21:48:21,535 : INFO : views.py : 35 :             notes_db() ] started note db form
[2017-12-03 21:48:21,535 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-03 21:48:21,550 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:48:21] "GET /note HTTP/1.1" 200 -
[2017-12-03 21:49:10,530 : INFO : views.py : 35 :             notes_db() ] started note db form
[2017-12-03 21:49:10,530 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-03 21:49:10,530 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:49:10] "GET /note HTTP/1.1" 200 -
[2017-12-03 21:49:10,545 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:49:10] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-03 21:49:10,545 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:49:10] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-03 21:49:10,561 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:49:10] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-03 21:49:10,561 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:49:10] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-03 21:49:18,560 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:49:18] "GET /continue HTTP/1.1" 200 -
[2017-12-03 21:49:19,888 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:49:19] "POST /continue HTTP/1.1" 200 -
[2017-12-03 21:49:22,201 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:49:22] "GET /continue HTTP/1.1" 200 -
[2017-12-03 21:49:26,607 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:49:26] "POST /continue HTTP/1.1" 200 -
[2017-12-03 21:49:43,167 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-03 21:49:43,738 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-03 21:49:43,741 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-03 21:49:43,749 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-03 21:49:48,271 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:49:48] "POST /continue HTTP/1.1" 200 -
[2017-12-03 21:49:48,286 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:49:48] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-03 21:49:48,286 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:49:48] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-03 21:49:48,286 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:49:48] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-03 21:49:48,302 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:49:48] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-03 21:49:55,334 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:49:55] "GET / HTTP/1.1" 200 -
[2017-12-03 21:49:58,412 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:49:58] "GET /continue HTTP/1.1" 200 -
[2017-12-03 21:50:02,429 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:50:02] "POST /continue HTTP/1.1" 200 -
[2017-12-03 21:50:06,913 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:50:06] "POST /login HTTP/1.1" 302 -
[2017-12-03 21:50:06,913 : INFO : views.py : 35 :             notes_db() ] started note db form
[2017-12-03 21:50:06,913 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-03 21:50:06,929 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:50:06] "GET /note HTTP/1.1" 200 -
[2017-12-03 21:50:10,148 : INFO : views.py : 35 :             notes_db() ] started note db form
[2017-12-03 21:50:10,148 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-03 21:50:10,164 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:50:10] "GET /note HTTP/1.1" 200 -
[2017-12-03 21:50:14,977 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:50:14] "GET /continue HTTP/1.1" 200 -
[2017-12-03 21:52:47,480 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:52:47] "GET /continue HTTP/1.1" 200 -
[2017-12-03 21:52:47,496 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:52:47] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-03 21:52:47,512 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:52:47] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-03 21:52:47,512 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:52:47] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-03 21:52:47,512 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:52:47] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-03 21:52:48,672 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:52:48] "POST /continue HTTP/1.1" 302 -
[2017-12-03 21:52:48,672 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:52:48] "GET / HTTP/1.1" 200 -
[2017-12-03 21:52:51,048 : INFO : views.py : 35 :             notes_db() ] started note db form
[2017-12-03 21:52:51,048 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-03 21:52:51,063 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:52:51] "GET /note HTTP/1.1" 200 -
[2017-12-03 21:53:11,708 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:53:11] "GET /continue HTTP/1.1" 200 -
[2017-12-03 21:54:17,192 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-03 21:54:17,227 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-03 21:54:17,897 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-03 21:54:17,901 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-03 21:54:17,911 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-03 21:54:34,601 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:54:34] "GET /continue HTTP/1.1" 200 -
[2017-12-03 21:54:34,609 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:54:34] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-03 21:54:34,609 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:54:34] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-03 21:54:34,624 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:54:34] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-03 21:54:34,624 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:54:34] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-03 21:54:43,646 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:54:43] "GET /continue HTTP/1.1" 200 -
[2017-12-03 21:54:44,584 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:54:44] "POST /continue HTTP/1.1" 200 -
[2017-12-03 21:54:46,537 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:54:46] "GET /about HTTP/1.1" 200 -
[2017-12-03 21:54:51,772 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:54:51] "GET /note HTTP/1.1" 200 -
[2017-12-03 21:54:56,757 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:54:56] "POST /login HTTP/1.1" 302 -
[2017-12-03 21:54:56,757 : INFO : views.py : 35 :             notes_db() ] started note db form
[2017-12-03 21:54:56,757 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-03 21:54:56,773 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:54:56] "GET /note HTTP/1.1" 200 -
[2017-12-03 21:54:58,929 : INFO : views.py : 35 :             notes_db() ] started note db form
[2017-12-03 21:54:58,929 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-03 21:54:58,929 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:54:58] "GET /note HTTP/1.1" 200 -
[2017-12-03 21:55:57,108 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-03 21:55:57,146 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-03 21:55:57,789 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-03 21:55:57,792 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-03 21:55:57,801 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-03 21:56:00,907 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-03 21:56:00,938 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-03 21:56:01,622 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-03 21:56:01,628 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-03 21:56:01,638 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-03 21:56:29,116 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-03 21:56:29,150 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-03 21:56:29,833 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-03 21:56:29,833 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-03 21:56:29,833 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-03 21:56:46,401 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:56:46] "GET /note HTTP/1.1" 200 -
[2017-12-03 21:56:46,417 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:56:46] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-03 21:56:46,417 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:56:46] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-03 21:56:46,432 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:56:46] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-03 21:56:46,432 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:56:46] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-03 21:56:53,472 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:56:53] "POST /login HTTP/1.1" 302 -
[2017-12-03 21:56:53,488 : INFO : views.py : 37 :             notes_db() ] started note db form
[2017-12-03 21:56:53,488 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-03 21:56:53,519 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:56:53] "GET /note HTTP/1.1" 200 -
[2017-12-03 21:56:56,816 : INFO : views.py : 37 :             notes_db() ] started note db form
[2017-12-03 21:56:56,816 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-03 21:56:56,816 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:56:56] "GET /note HTTP/1.1" 200 -
[2017-12-03 21:57:00,582 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:57:00] "GET /continue HTTP/1.1" 200 -
[2017-12-03 21:57:39,396 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:57:39] "POST /continue HTTP/1.1" 200 -
[2017-12-03 21:57:41,140 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:57:41] "GET / HTTP/1.1" 200 -
[2017-12-03 21:57:47,187 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:57:47] "GET /notes HTTP/1.1" 404 -
[2017-12-03 21:59:37,733 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\__init__.py', reloading
[2017-12-03 21:59:37,782 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-03 21:59:38,439 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-03 21:59:38,444 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-03 21:59:38,453 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-03 21:59:50,376 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:59:50] "GET /note HTTP/1.1" 200 -
[2017-12-03 21:59:52,579 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:59:52] "POST /login HTTP/1.1" 200 -
[2017-12-03 21:59:57,064 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:59:57] "GET /login787 HTTP/1.1" 500 -
[2017-12-03 21:59:57,080 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:59:57] "GET /login787?__debugger__=yes&cmd=resource&f=style.css HTTP/1.1" 200 -
[2017-12-03 21:59:57,080 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:59:57] "GET /login787?__debugger__=yes&cmd=resource&f=jquery.js HTTP/1.1" 200 -
[2017-12-03 21:59:57,095 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:59:57] "GET /login787?__debugger__=yes&cmd=resource&f=debugger.js HTTP/1.1" 200 -
[2017-12-03 21:59:57,111 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:59:57] "GET /login787?__debugger__=yes&cmd=resource&f=console.png HTTP/1.1" 200 -
[2017-12-03 21:59:57,142 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:59:57] "GET /login787?__debugger__=yes&cmd=resource&f=ubuntu.ttf HTTP/1.1" 200 -
[2017-12-03 21:59:57,189 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 21:59:57] "GET /login787?__debugger__=yes&cmd=resource&f=console.png HTTP/1.1" 200 -
[2017-12-03 22:00:28,231 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\__init__.py', reloading
[2017-12-03 22:00:28,284 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-03 22:00:28,968 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-03 22:00:28,984 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-03 22:00:28,993 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-03 22:00:31,533 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:00:31] "GET /login HTTP/1.1" 200 -
[2017-12-03 22:00:35,393 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:00:35] "GET /loginlpl HTTP/1.1" 200 -
[2017-12-03 22:02:19,956 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:02:19] "GET /loginlpl HTTP/1.1" 200 -
[2017-12-03 22:02:25,691 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:02:25] "GET /login HTTP/1.1" 200 -
[2017-12-03 22:02:29,004 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:02:29] "GET /loginlo HTTP/1.1" 200 -
[2017-12-03 22:03:14,499 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\__init__.py', reloading
[2017-12-03 22:03:14,536 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-03 22:03:15,169 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-03 22:03:15,172 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-03 22:03:15,182 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-03 22:03:17,523 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:03:17] "GET /login HTTP/1.1" 200 -
[2017-12-03 22:03:20,258 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:03:20] "POST /login HTTP/1.1" 200 -
[2017-12-03 22:03:23,993 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:03:23] "GET /loginhuhu HTTP/1.1" 200 -
[2017-12-03 22:03:28,493 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:03:28] "GET /loginhuhu HTTP/1.1" 200 -
[2017-12-03 22:03:28,509 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:03:28] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-03 22:03:28,509 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:03:28] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-03 22:03:28,524 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:03:28] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-03 22:03:28,524 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:03:28] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-03 22:03:32,759 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:03:32] "GET / HTTP/1.1" 200 -
[2017-12-03 22:03:43,807 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:03:43] "GET / HTTP/1.1" 200 -
[2017-12-03 22:03:47,714 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:03:47] "GET / HTTP/1.1" 200 -
[2017-12-03 22:03:52,043 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:03:52] "GET /ygg HTTP/1.1" 200 -
[2017-12-03 22:03:54,230 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:03:54] "GET /ygg HTTP/1.1" 200 -
[2017-12-03 22:03:54,230 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:03:54] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-03 22:03:54,246 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:03:54] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-03 22:03:54,246 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:03:54] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-03 22:03:54,246 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:03:54] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-03 22:04:06,062 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:04:06] "GET /note HTTP/1.1" 200 -
[2017-12-03 22:04:26,646 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:04:26] "GET /note HTTP/1.1" 200 -
[2017-12-03 22:04:28,834 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:04:28] "GET /continue HTTP/1.1" 200 -
[2017-12-03 22:04:30,709 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:04:30] "POST /continue HTTP/1.1" 302 -
[2017-12-03 22:04:33,741 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:04:33] "GET / HTTP/1.1" 200 -
[2017-12-03 22:04:53,757 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:04:53] "GET /note HTTP/1.1" 200 -
[2017-12-03 22:04:57,367 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:04:57] "POST /login HTTP/1.1" 302 -
[2017-12-03 22:04:57,367 : INFO : views.py : 37 :             notes_db() ] started note db form
[2017-12-03 22:04:57,367 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-03 22:04:57,382 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:04:57] "GET /note HTTP/1.1" 200 -
[2017-12-03 22:04:58,633 : INFO : views.py : 37 :             notes_db() ] started note db form
[2017-12-03 22:04:58,633 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-03 22:04:58,633 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:04:58] "GET /note HTTP/1.1" 200 -
[2017-12-03 22:05:01,367 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:05:01] "GET /continue HTTP/1.1" 200 -
[2017-12-03 22:05:05,868 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:05:05] "POST /continue HTTP/1.1" 302 -
[2017-12-03 22:05:05,899 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:05:05] "GET / HTTP/1.1" 200 -
[2017-12-03 22:06:31,156 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-03 22:06:31,182 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-03 22:06:31,875 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-03 22:06:31,878 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-03 22:06:31,887 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-03 22:06:34,622 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:06:34] "GET / HTTP/1.1" 200 -
[2017-12-03 22:06:34,637 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:06:34] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-03 22:06:34,653 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:06:34] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-03 22:06:34,653 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:06:34] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-03 22:06:34,653 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:06:34] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-03 22:06:41,708 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:06:41] "GET /continue HTTP/1.1" 200 -
[2017-12-03 22:06:43,645 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:06:43] "POST /continue HTTP/1.1" 302 -
[2017-12-03 22:06:43,645 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:06:43] "GET / HTTP/1.1" 200 -
[2017-12-03 22:06:55,178 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-03 22:06:55,210 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-03 22:06:55,865 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-03 22:06:55,870 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-03 22:06:55,879 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-03 22:07:09,637 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-03 22:07:09,671 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-03 22:07:10,428 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-03 22:07:10,431 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-03 22:07:10,439 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-03 22:07:16,141 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:07:16] "GET /continue HTTP/1.1" 200 -
[2017-12-03 22:07:17,329 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:07:17] "POST /continue HTTP/1.1" 200 -
[2017-12-03 22:07:18,876 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:07:18] "GET / HTTP/1.1" 200 -
[2017-12-03 22:07:37,966 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-03 22:07:38,017 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-03 22:07:38,676 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-03 22:07:38,692 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-03 22:07:38,692 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-03 22:07:40,397 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:07:40] "GET / HTTP/1.1" 200 -
[2017-12-03 22:07:40,418 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:07:40] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-03 22:07:40,422 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:07:40] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-03 22:07:40,425 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:07:40] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-03 22:07:40,427 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:07:40] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-03 22:07:47,475 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:07:47] "GET /note HTTP/1.1" 200 -
[2017-12-03 22:07:50,132 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:07:50] "GET /continue HTTP/1.1" 200 -
[2017-12-03 22:07:51,507 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:07:51] "POST /continue HTTP/1.1" 302 -
[2017-12-03 22:07:54,585 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:07:54] "GET /note HTTP/1.1" 200 -
[2017-12-03 22:08:00,539 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:08:00] "POST /login HTTP/1.1" 302 -
[2017-12-03 22:08:00,539 : INFO : views.py : 37 :             notes_db() ] started note db form
[2017-12-03 22:08:00,539 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-03 22:08:00,555 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:08:00] "GET /note HTTP/1.1" 200 -
[2017-12-03 22:08:02,664 : INFO : views.py : 37 :             notes_db() ] started note db form
[2017-12-03 22:08:02,664 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-03 22:08:02,664 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:08:02] "GET /note HTTP/1.1" 200 -
[2017-12-03 22:08:04,946 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:08:04] "GET /continue HTTP/1.1" 200 -
[2017-12-03 22:08:07,571 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:08:07] "POST /continue HTTP/1.1" 302 -
[2017-12-03 22:08:07,602 : INFO : views.py : 37 :             notes_db() ] started note db form
[2017-12-03 22:08:07,602 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-03 22:08:07,602 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:08:07] "GET /note HTTP/1.1" 200 -
[2017-12-03 22:08:09,165 : INFO : views.py : 37 :             notes_db() ] started note db form
[2017-12-03 22:08:09,165 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-03 22:08:09,165 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:08:09] "GET /note HTTP/1.1" 200 -
[2017-12-03 22:08:12,435 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-03 22:08:12,500 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-03 22:08:13,071 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-03 22:08:13,071 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-03 22:08:13,071 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-03 22:08:48,300 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:08:48] "GET /note HTTP/1.1" 200 -
[2017-12-03 22:08:48,304 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:08:48] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-03 22:08:48,319 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:08:48] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-03 22:08:48,319 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:08:48] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-03 22:08:48,319 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:08:48] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-03 22:08:55,351 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:08:55] "GET /continue HTTP/1.1" 200 -
[2017-12-03 22:08:58,102 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:08:58] "POST /continue HTTP/1.1" 200 -
[2017-12-03 22:08:59,618 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:08:59] "GET /about HTTP/1.1" 200 -
[2017-12-03 22:09:05,431 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:09:05] "GET /note HTTP/1.1" 200 -
[2017-12-03 22:09:16,863 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:09:16] "POST /login HTTP/1.1" 302 -
[2017-12-03 22:09:16,863 : INFO : views.py : 37 :             notes_db() ] started note db form
[2017-12-03 22:09:16,863 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-03 22:09:16,879 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:09:16] "GET /note HTTP/1.1" 200 -
[2017-12-03 22:10:39,097 : INFO : views.py : 37 :             notes_db() ] started note db form
[2017-12-03 22:10:39,097 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-03 22:10:39,113 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:10:39] "GET /note HTTP/1.1" 200 -
[2017-12-03 22:10:39,128 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:10:39] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-03 22:10:39,128 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:10:39] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-03 22:10:39,128 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:10:39] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-03 22:10:39,128 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:10:39] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-03 22:10:46,166 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:10:46] "GET /continue HTTP/1.1" 200 -
[2017-12-03 22:10:46,182 : INFO : views.py : 37 :             notes_db() ] started note db form
[2017-12-03 22:10:46,182 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-03 22:10:46,182 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:10:46] "GET /note HTTP/1.1" 200 -
[2017-12-03 22:10:47,995 : INFO : views.py : 37 :             notes_db() ] started note db form
[2017-12-03 22:10:47,995 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-03 22:10:47,995 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:10:47] "GET /note HTTP/1.1" 200 -
[2017-12-03 22:10:50,136 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:10:50] "GET /continue HTTP/1.1" 200 -
[2017-12-03 22:10:55,277 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:10:55] "POST /continue HTTP/1.1" 200 -
[2017-12-03 22:11:07,919 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:11:07] "GET /about HTTP/1.1" 200 -
[2017-12-03 22:11:10,888 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:11:10] "GET /about45 HTTP/1.1" 200 -
[2017-12-03 22:11:18,003 : INFO : views.py : 37 :             notes_db() ] started note db form
[2017-12-03 22:11:18,007 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-03 22:11:18,013 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:11:18] "GET /note HTTP/1.1" 200 -
[2017-12-03 22:12:26,203 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-03 22:12:26,238 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-03 22:12:26,917 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-03 22:12:26,922 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-03 22:12:26,932 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-03 22:12:41,520 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-03 22:12:41,551 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-03 22:12:42,253 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-03 22:12:42,258 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-03 22:12:42,266 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-03 22:12:44,126 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:12:44] "GET /note HTTP/1.1" 200 -
[2017-12-03 22:12:44,141 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:12:44] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-03 22:12:44,145 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:12:44] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-03 22:12:44,148 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:12:44] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-03 22:12:44,150 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:12:44] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-03 22:12:51,184 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:12:51] "POST /login HTTP/1.1" 302 -
[2017-12-03 22:12:51,199 : INFO : views.py : 41 :             notes_db() ] started note db form
[2017-12-03 22:12:51,199 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-03 22:12:51,231 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:12:51] "GET /note HTTP/1.1" 200 -
[2017-12-03 22:13:05,555 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-03 22:13:05,586 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-03 22:13:06,251 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-03 22:13:06,254 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-03 22:13:06,264 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-03 22:13:07,317 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:13:07] "GET /note HTTP/1.1" 200 -
[2017-12-03 22:13:07,335 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:13:07] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-03 22:13:07,339 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:13:07] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-03 22:13:07,342 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:13:07] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-03 22:13:07,345 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:13:07] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-03 22:13:14,368 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:13:14] "POST /login HTTP/1.1" 200 -
[2017-12-03 22:13:18,384 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:13:18] "POST /login HTTP/1.1" 302 -
[2017-12-03 22:13:18,384 : INFO : views.py : 41 :             notes_db() ] started note db form
[2017-12-03 22:13:18,384 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-03 22:13:18,400 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:13:18] "GET /note HTTP/1.1" 200 -
[2017-12-03 22:14:18,579 : INFO : views.py : 41 :             notes_db() ] started note db form
[2017-12-03 22:14:18,579 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-03 22:14:18,579 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:14:18] "GET /note HTTP/1.1" 200 -
[2017-12-03 22:14:20,704 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:14:20] "GET /continue HTTP/1.1" 200 -
[2017-12-03 22:14:57,977 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:14:57] "GET /continue HTTP/1.1" 200 -
[2017-12-03 22:14:58,008 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:14:58] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-03 22:14:58,008 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:14:58] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-03 22:14:58,008 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:14:58] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-03 22:14:58,008 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:14:58] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-03 22:15:06,025 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:15:06] "POST /continue HTTP/1.1" 302 -
[2017-12-03 22:15:06,071 : INFO : views.py : 41 :             notes_db() ] started note db form
[2017-12-03 22:15:06,071 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-03 22:15:06,087 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:15:06] "GET /note HTTP/1.1" 200 -
[2017-12-03 22:15:09,400 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:15:09] "GET /continue HTTP/1.1" 200 -
[2017-12-03 22:15:14,166 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:15:14] "POST /continue HTTP/1.1" 200 -
[2017-12-03 22:15:16,041 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:15:16] "GET /about HTTP/1.1" 200 -
[2017-12-03 22:15:17,870 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:15:17] "GET /form HTTP/1.1" 200 -
[2017-12-03 22:15:22,933 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:15:22] "POST /form HTTP/1.1" 200 -
[2017-12-03 22:15:27,527 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:15:27] "GET / HTTP/1.1" 200 -
[2017-12-03 22:15:36,090 : INFO : views.py : 41 :             notes_db() ] started note db form
[2017-12-03 22:15:36,090 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-03 22:15:36,106 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:15:36] "GET /note HTTP/1.1" 200 -
[2017-12-03 22:15:47,701 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:15:47] "GET /continue HTTP/1.1" 200 -
[2017-12-03 22:15:49,451 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:15:49] "POST /continue HTTP/1.1" 200 -
[2017-12-03 22:15:51,264 : INFO : views.py : 41 :             notes_db() ] started note db form
[2017-12-03 22:15:51,264 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-03 22:15:51,264 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:15:51] "GET /note HTTP/1.1" 200 -
[2017-12-03 22:15:55,795 : INFO : views.py : 41 :             notes_db() ] started note db form
[2017-12-03 22:15:55,795 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-03 22:15:55,811 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:15:55] "GET /note HTTP/1.1" 200 -
[2017-12-03 22:16:04,444 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:16:04] "GET /continue HTTP/1.1" 200 -
[2017-12-03 22:16:31,302 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:16:31] "POST /continue HTTP/1.1" 200 -
[2017-12-03 22:16:52,571 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-03 22:16:52,607 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-03 22:16:53,366 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-03 22:16:53,373 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-03 22:16:53,382 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-03 22:16:54,845 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:16:54] "POST /continue HTTP/1.1" 200 -
[2017-12-03 22:16:54,860 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:16:54] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-03 22:16:54,864 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:16:54] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-03 22:16:54,866 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:16:54] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-03 22:16:54,868 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:16:54] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-03 22:16:56,379 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:16:56] "POST /continue HTTP/1.1" 200 -
[2017-12-03 22:17:02,630 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:17:02] "POST /continue HTTP/1.1" 200 -
[2017-12-03 22:17:04,349 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:17:04] "POST /continue HTTP/1.1" 200 -
[2017-12-03 22:17:05,271 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:17:05] "POST /continue HTTP/1.1" 200 -
[2017-12-03 22:17:06,193 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:17:06] "POST /continue HTTP/1.1" 302 -
[2017-12-03 22:17:06,208 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:17:06] "GET /note HTTP/1.1" 200 -
[2017-12-03 22:17:12,115 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:17:12] "POST /login HTTP/1.1" 302 -
[2017-12-03 22:17:12,131 : INFO : views.py : 41 :             notes_db() ] started note db form
[2017-12-03 22:17:12,131 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-03 22:17:12,146 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:17:12] "GET /note HTTP/1.1" 200 -
[2017-12-03 22:17:14,647 : INFO : views.py : 41 :             notes_db() ] started note db form
[2017-12-03 22:17:14,647 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-03 22:17:14,647 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:17:14] "GET /note HTTP/1.1" 200 -
[2017-12-03 22:17:15,912 : INFO : views.py : 41 :             notes_db() ] started note db form
[2017-12-03 22:17:15,912 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-03 22:17:15,912 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:17:15] "GET /note HTTP/1.1" 200 -
[2017-12-03 22:17:19,178 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:17:19] "GET /continue HTTP/1.1" 200 -
[2017-12-03 22:17:20,678 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:17:20] "POST /continue HTTP/1.1" 200 -
[2017-12-03 22:17:45,747 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:17:45] "POST /continue HTTP/1.1" 200 -
[2017-12-03 22:17:45,762 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:17:45] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-03 22:17:45,762 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:17:45] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-03 22:17:45,762 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:17:45] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-03 22:17:45,762 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:17:45] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-03 22:17:55,779 : INFO : views.py : 41 :             notes_db() ] started note db form
[2017-12-03 22:17:55,779 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-03 22:17:55,795 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:17:55] "GET /note HTTP/1.1" 200 -
[2017-12-03 22:18:07,927 : INFO : views.py : 41 :             notes_db() ] started note db form
[2017-12-03 22:18:07,927 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-03 22:18:07,927 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:18:07] "GET /note HTTP/1.1" 200 -
[2017-12-03 22:18:17,975 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:18:17] "GET /continue HTTP/1.1" 200 -
[2017-12-03 22:18:26,283 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:18:26] "POST /continue HTTP/1.1" 302 -
[2017-12-03 22:18:26,294 : INFO : views.py : 41 :             notes_db() ] started note db form
[2017-12-03 22:18:26,295 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-03 22:18:26,298 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:18:26] "GET /note HTTP/1.1" 200 -
[2017-12-03 22:18:37,332 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:18:37] "GET /continue HTTP/1.1" 200 -
[2017-12-03 22:18:41,317 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:18:41] "POST /continue HTTP/1.1" 200 -
[2017-12-03 22:18:55,209 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:18:55] "GET /about HTTP/1.1" 200 -
[2017-12-03 22:18:57,787 : INFO : views.py : 41 :             notes_db() ] started note db form
[2017-12-03 22:18:57,787 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-03 22:18:57,787 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:18:57] "GET /note HTTP/1.1" 200 -
[2017-12-03 22:19:10,101 : INFO : views.py : 41 :             notes_db() ] started note db form
[2017-12-03 22:19:10,101 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-03 22:19:10,101 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:19:10] "GET /note HTTP/1.1" 200 -
[2017-12-03 22:19:15,465 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-03 22:19:15,996 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-03 22:19:16,012 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-03 22:19:16,012 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-03 22:19:18,684 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:19:18] "GET /note HTTP/1.1" 200 -
[2017-12-03 22:19:18,699 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:19:18] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-03 22:19:18,699 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:19:18] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-03 22:19:18,715 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:19:18] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-03 22:19:18,715 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:19:18] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-03 22:19:28,200 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:19:28] "GET /continue HTTP/1.1" 200 -
[2017-12-03 22:19:28,200 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:19:28] "POST /login HTTP/1.1" 200 -
[2017-12-03 22:19:33,670 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:19:33] "POST /login HTTP/1.1" 302 -
[2017-12-03 22:19:33,670 : INFO : views.py : 41 :             notes_db() ] started note db form
[2017-12-03 22:19:33,670 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-03 22:19:33,670 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:19:33] "GET /note HTTP/1.1" 200 -
[2017-12-03 22:19:35,826 : INFO : views.py : 41 :             notes_db() ] started note db form
[2017-12-03 22:19:35,826 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-03 22:19:35,826 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:19:35] "GET /note HTTP/1.1" 200 -
[2017-12-03 22:19:38,326 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:19:38] "GET /continue HTTP/1.1" 200 -
[2017-12-03 22:19:40,749 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:19:40] "POST /continue HTTP/1.1" 302 -
[2017-12-03 22:19:40,764 : INFO : views.py : 41 :             notes_db() ] started note db form
[2017-12-03 22:19:40,764 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-03 22:19:40,764 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:19:40] "GET /note HTTP/1.1" 200 -
[2017-12-03 22:19:43,952 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:19:43] "GET /continue HTTP/1.1" 200 -
[2017-12-03 22:19:45,155 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:19:45] "POST /continue HTTP/1.1" 200 -
[2017-12-03 22:19:48,843 : INFO : views.py : 41 :             notes_db() ] started note db form
[2017-12-03 22:19:48,843 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-03 22:19:48,843 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:19:48] "GET /note HTTP/1.1" 200 -
[2017-12-03 22:20:12,907 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:20:12] "GET /about HTTP/1.1" 200 -
[2017-12-03 22:20:12,907 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:20:12] "GET /continue HTTP/1.1" 200 -
[2017-12-03 22:20:14,938 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:20:14] "POST /continue HTTP/1.1" 200 -
[2017-12-03 22:20:39,612 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-03 22:20:39,648 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-03 22:20:40,369 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-03 22:20:40,372 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-03 22:20:40,383 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-03 22:20:41,962 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:20:41] "POST /continue HTTP/1.1" 200 -
[2017-12-03 22:20:41,980 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:20:41] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-03 22:20:41,984 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:20:41] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-03 22:20:41,988 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:20:41] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-03 22:20:41,991 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:20:41] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-03 22:20:44,183 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:20:44] "POST /continue HTTP/1.1" 200 -
[2017-12-03 22:20:45,074 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:20:45] "POST /continue HTTP/1.1" 302 -
[2017-12-03 22:20:45,089 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:20:45] "GET /note HTTP/1.1" 200 -
[2017-12-03 22:20:48,668 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:20:48] "GET /continue HTTP/1.1" 200 -
[2017-12-03 22:20:53,153 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:20:53] "POST /continue HTTP/1.1" 200 -
[2017-12-03 22:21:08,007 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-03 22:21:08,073 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-03 22:21:08,738 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-03 22:21:08,741 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-03 22:21:08,751 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-03 22:21:11,020 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:21:11] "POST /continue HTTP/1.1" 200 -
[2017-12-03 22:21:11,043 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:21:11] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-03 22:21:11,047 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:21:11] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-03 22:21:11,050 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:21:11] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-03 22:21:11,052 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:21:11] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-03 22:21:13,770 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:21:13] "POST /continue HTTP/1.1" 200 -
[2017-12-03 22:21:17,880 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:21:17] "POST /continue HTTP/1.1" 200 -
[2017-12-03 22:21:33,787 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:21:33] "GET /note HTTP/1.1" 200 -
[2017-12-03 22:21:39,226 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:21:39] "POST /login HTTP/1.1" 200 -
[2017-12-03 22:21:43,648 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:21:43] "POST /login HTTP/1.1" 302 -
[2017-12-03 22:21:43,664 : INFO : views.py : 41 :             notes_db() ] started note db form
[2017-12-03 22:21:43,664 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-03 22:21:43,664 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:21:43] "GET /note HTTP/1.1" 200 -
[2017-12-03 22:21:45,086 : INFO : views.py : 41 :             notes_db() ] started note db form
[2017-12-03 22:21:45,086 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-03 22:21:45,086 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:21:45] "GET /note HTTP/1.1" 200 -
[2017-12-03 22:21:47,398 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:21:47] "GET /continue HTTP/1.1" 200 -
[2017-12-03 22:21:49,180 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:21:49] "POST /continue HTTP/1.1" 200 -
[2017-12-03 22:21:52,133 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:21:52] "POST /continue HTTP/1.1" 302 -
[2017-12-03 22:21:52,164 : INFO : views.py : 41 :             notes_db() ] started note db form
[2017-12-03 22:21:52,164 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-03 22:21:52,180 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:21:52] "GET /note HTTP/1.1" 200 -
[2017-12-03 22:22:04,416 : INFO : views.py : 41 :             notes_db() ] started note db form
[2017-12-03 22:22:04,416 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-03 22:22:04,431 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:22:04] "GET /note HTTP/1.1" 200 -
[2017-12-03 22:22:06,603 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:22:06] "GET /continue HTTP/1.1" 200 -
[2017-12-03 22:22:11,526 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:22:11] "POST /continue HTTP/1.1" 200 -
[2017-12-03 22:22:14,761 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:22:14] "POST /continue HTTP/1.1" 200 -
[2017-12-03 22:22:15,870 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:22:15] "POST /continue HTTP/1.1" 200 -
[2017-12-03 22:22:17,120 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:22:17] "GET / HTTP/1.1" 200 -
[2017-12-03 22:22:19,448 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:22:19] "GET /py HTTP/1.1" 200 -
[2017-12-03 22:22:22,933 : INFO : views.py : 41 :             notes_db() ] started note db form
[2017-12-03 22:22:22,933 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-03 22:22:22,949 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:22:22] "GET /note HTTP/1.1" 200 -
[2017-12-03 22:22:51,949 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:22:51] "GET /continue HTTP/1.1" 200 -
[2017-12-03 22:22:53,668 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:22:53] "POST /continue HTTP/1.1" 200 -
[2017-12-03 22:22:56,872 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:22:56] "GET /about HTTP/1.1" 200 -
[2017-12-03 22:23:01,997 : INFO : views.py : 41 :             notes_db() ] started note db form
[2017-12-03 22:23:01,997 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-03 22:23:02,013 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:23:02] "GET /note HTTP/1.1" 200 -
[2017-12-03 22:23:36,629 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:23:36] "GET / HTTP/1.1" 200 -
[2017-12-03 22:23:36,645 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-03 22:23:36,686 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-03 22:23:37,279 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-03 22:23:37,279 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-03 22:23:37,295 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-03 22:23:37,451 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:23:37] "GET /static/css/bootstrap.min.css HTTP/1.1" 200 -
[2017-12-03 22:23:37,467 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:23:37] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 200 -
[2017-12-03 22:23:37,482 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:23:37] "GET /static/js/bootstrap.min.js HTTP/1.1" 200 -
[2017-12-03 22:23:37,498 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:23:37] "GET /static/main.css HTTP/1.1" 200 -
[2017-12-03 22:23:37,563 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:23:37] "GET /favicon.ico HTTP/1.1" 200 -
[2017-12-03 22:23:41,177 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:23:41] "GET /note HTTP/1.1" 200 -
[2017-12-03 22:23:46,505 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:23:46] "POST /login HTTP/1.1" 302 -
[2017-12-03 22:23:46,521 : INFO : views.py : 41 :             notes_db() ] started note db form
[2017-12-03 22:23:46,521 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-03 22:23:46,552 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:23:46] "GET /note HTTP/1.1" 200 -
[2017-12-03 22:23:46,615 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:23:46] "GET /static/fonts/glyphicons-halflings-regular.woff2 HTTP/1.1" 200 -
[2017-12-03 22:23:49,427 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:23:49] "GET /continue HTTP/1.1" 200 -
[2017-12-03 22:23:54,541 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:23:54] "POST /continue HTTP/1.1" 302 -
[2017-12-03 22:23:54,573 : INFO : views.py : 41 :             notes_db() ] started note db form
[2017-12-03 22:23:54,573 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-03 22:23:54,588 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:23:54] "GET /note HTTP/1.1" 200 -
[2017-12-03 22:24:07,858 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:24:07] "GET /continue HTTP/1.1" 200 -
[2017-12-03 22:24:20,431 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:24:20] "POST /continue HTTP/1.1" 200 -
[2017-12-03 22:24:22,117 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:24:22] "POST /continue HTTP/1.1" 302 -
[2017-12-03 22:24:22,117 : INFO : views.py : 41 :             notes_db() ] started note db form
[2017-12-03 22:24:22,117 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-03 22:24:22,117 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:24:22] "GET /note HTTP/1.1" 200 -
[2017-12-03 22:24:37,646 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-03 22:24:37,677 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-03 22:24:38,336 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-03 22:24:38,336 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-03 22:24:38,352 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-03 22:24:48,876 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-03 22:24:48,913 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-03 22:24:49,564 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-03 22:24:49,567 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-03 22:24:49,576 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-03 22:24:50,657 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:24:50] "GET /note HTTP/1.1" 200 -
[2017-12-03 22:24:50,685 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:24:50] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-03 22:24:50,688 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:24:50] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-03 22:24:50,692 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:24:50] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-03 22:24:50,695 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:24:50] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-03 22:24:57,720 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:24:57] "GET /continue HTTP/1.1" 200 -
[2017-12-03 22:24:59,845 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:24:59] "POST /continue HTTP/1.1" 200 -
[2017-12-03 22:25:03,065 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:25:03] "POST /continue HTTP/1.1" 302 -
[2017-12-03 22:25:03,065 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:25:03] "GET /note HTTP/1.1" 200 -
[2017-12-03 22:25:07,237 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:25:07] "POST /login HTTP/1.1" 302 -
[2017-12-03 22:25:07,237 : INFO : views.py : 41 :             notes_db() ] started note db form
[2017-12-03 22:25:07,237 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-03 22:25:07,237 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:25:07] "GET /note HTTP/1.1" 200 -
[2017-12-03 22:25:10,081 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:25:10] "GET /continue HTTP/1.1" 200 -
[2017-12-03 22:25:19,723 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:25:19] "POST /continue HTTP/1.1" 200 -
[2017-12-03 22:25:29,974 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:25:29] "POST /continue HTTP/1.1" 302 -
[2017-12-03 22:25:29,974 : INFO : views.py : 41 :             notes_db() ] started note db form
[2017-12-03 22:25:29,974 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-03 22:25:29,974 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:25:29] "GET /note HTTP/1.1" 200 -
[2017-12-03 22:25:47,639 : INFO : views.py : 41 :             notes_db() ] started note db form
[2017-12-03 22:25:47,639 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-03 22:25:47,655 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:25:47] "GET /note HTTP/1.1" 200 -
[2017-12-03 22:25:59,967 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:25:59] "GET /continue HTTP/1.1" 200 -
[2017-12-03 22:26:05,374 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:26:05] "POST /continue HTTP/1.1" 302 -
[2017-12-03 22:26:05,374 : INFO : views.py : 41 :             notes_db() ] started note db form
[2017-12-03 22:26:05,374 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-03 22:26:05,374 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:26:05] "GET /note HTTP/1.1" 200 -
[2017-12-03 22:26:06,859 : INFO : views.py : 41 :             notes_db() ] started note db form
[2017-12-03 22:26:06,859 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-03 22:26:06,859 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:26:06] "GET /note HTTP/1.1" 200 -
[2017-12-03 22:26:08,578 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:26:08] "GET /continue HTTP/1.1" 200 -
[2017-12-03 22:26:14,438 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:26:14] "POST /continue HTTP/1.1" 200 -
[2017-12-03 22:26:25,314 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:26:25] "POST /continue HTTP/1.1" 200 -
[2017-12-03 22:26:29,236 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:26:29] "GET /continue HTTP/1.1" 200 -
[2017-12-03 22:26:34,377 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:26:34] "POST /continue HTTP/1.1" 302 -
[2017-12-03 22:26:34,409 : INFO : views.py : 41 :             notes_db() ] started note db form
[2017-12-03 22:26:34,409 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-03 22:26:34,424 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:26:34] "GET /note HTTP/1.1" 200 -
[2017-12-03 22:26:45,629 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:26:45] "GET /continue HTTP/1.1" 200 -
[2017-12-03 22:26:47,691 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:26:47] "POST /continue HTTP/1.1" 200 -
[2017-12-03 22:27:22,070 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:27:22] "GET /continue HTTP/1.1" 200 -
[2017-12-03 22:27:26,149 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:27:26] "POST /continue HTTP/1.1" 302 -
[2017-12-03 22:27:26,164 : INFO : views.py : 41 :             notes_db() ] started note db form
[2017-12-03 22:27:26,164 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-03 22:27:26,164 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:27:26] "GET /note HTTP/1.1" 200 -
[2017-12-03 22:27:43,760 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:27:43] "GET /continue HTTP/1.1" 200 -
[2017-12-03 22:27:49,948 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:27:49] "POST /continue HTTP/1.1" 200 -
[2017-12-03 22:27:52,980 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:27:52] "POST /continue HTTP/1.1" 200 -
[2017-12-03 22:28:02,356 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:28:02] "GET /continue HTTP/1.1" 200 -
[2017-12-03 22:28:32,999 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:28:32] "POST /continue HTTP/1.1" 302 -
[2017-12-03 22:28:33,006 : INFO : views.py : 41 :             notes_db() ] started note db form
[2017-12-03 22:28:33,007 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-03 22:28:33,008 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:28:33] "GET /note HTTP/1.1" 200 -
[2017-12-03 22:28:43,056 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:28:43] "GET /continue HTTP/1.1" 200 -
[2017-12-03 22:28:48,369 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:28:48] "POST /continue HTTP/1.1" 200 -
[2017-12-03 22:28:59,292 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:28:59] "POST /continue HTTP/1.1" 200 -
[2017-12-03 22:29:10,793 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:29:10] "POST /login HTTP/1.1" 200 -
[2017-12-03 22:29:15,340 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:29:15] "POST /login HTTP/1.1" 200 -
[2017-12-03 22:29:19,638 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:29:19] "POST /login HTTP/1.1" 200 -
[2017-12-03 22:29:22,450 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:29:22] "GET /login HTTP/1.1" 200 -
[2017-12-03 22:29:26,685 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:29:26] "GET /login HTTP/1.1" 200 -
[2017-12-03 22:29:31,404 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:29:31] "POST /login HTTP/1.1" 302 -
[2017-12-03 22:29:31,420 : INFO : views.py : 41 :             notes_db() ] started note db form
[2017-12-03 22:29:31,420 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-03 22:29:31,420 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:29:31] "GET /note HTTP/1.1" 200 -
[2017-12-03 22:29:33,530 : INFO : views.py : 41 :             notes_db() ] started note db form
[2017-12-03 22:29:33,530 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-03 22:29:33,530 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:29:33] "GET /note HTTP/1.1" 200 -
[2017-12-03 22:29:35,983 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:29:35] "GET /continue HTTP/1.1" 200 -
[2017-12-03 22:29:38,468 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:29:38] "POST /continue HTTP/1.1" 302 -
[2017-12-03 22:29:38,499 : INFO : views.py : 41 :             notes_db() ] started note db form
[2017-12-03 22:29:38,499 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-03 22:29:38,515 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:29:38] "GET /note HTTP/1.1" 200 -
[2017-12-03 22:29:40,640 : INFO : views.py : 41 :             notes_db() ] started note db form
[2017-12-03 22:29:40,640 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-03 22:29:40,655 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:29:40] "GET /note HTTP/1.1" 200 -
[2017-12-03 22:29:42,249 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:29:42] "GET /continue HTTP/1.1" 200 -
[2017-12-03 22:29:47,594 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:29:47] "POST /continue HTTP/1.1" 200 -
[2017-12-03 22:30:17,144 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-03 22:30:17,182 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-03 22:30:17,888 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-03 22:30:17,892 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-03 22:30:17,901 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-03 22:30:20,957 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:30:20] "POST /continue HTTP/1.1" 200 -
[2017-12-03 22:30:23,068 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:30:23] "GET /continue HTTP/1.1" 200 -
[2017-12-03 22:30:25,553 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:30:25] "POST /continue HTTP/1.1" 302 -
[2017-12-03 22:30:28,006 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:30:28] "GET /note HTTP/1.1" 200 -
[2017-12-03 22:30:30,178 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:30:30] "GET /note HTTP/1.1" 200 -
[2017-12-03 22:30:35,148 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:30:35] "POST /login HTTP/1.1" 302 -
[2017-12-03 22:30:35,148 : INFO : views.py : 41 :             notes_db() ] started note db form
[2017-12-03 22:30:35,148 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-03 22:30:35,163 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:30:35] "GET /note HTTP/1.1" 200 -
[2017-12-03 22:30:36,913 : INFO : views.py : 41 :             notes_db() ] started note db form
[2017-12-03 22:30:36,913 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-03 22:30:36,913 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:30:36] "GET /note HTTP/1.1" 200 -
[2017-12-03 22:30:40,039 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:30:40] "GET /continue HTTP/1.1" 200 -
[2017-12-03 22:30:42,227 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:30:42] "POST /continue HTTP/1.1" 302 -
[2017-12-03 22:30:42,258 : INFO : views.py : 41 :             notes_db() ] started note db form
[2017-12-03 22:30:42,258 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-03 22:30:42,258 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:30:42] "GET /note HTTP/1.1" 200 -
[2017-12-03 22:30:44,914 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:30:44] "GET /continue HTTP/1.1" 200 -
[2017-12-03 22:30:46,586 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:30:46] "POST /continue HTTP/1.1" 200 -
[2017-12-03 22:30:49,352 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:30:49] "POST /continue HTTP/1.1" 302 -
[2017-12-03 22:30:49,383 : INFO : views.py : 41 :             notes_db() ] started note db form
[2017-12-03 22:30:49,383 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-03 22:30:49,383 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:30:49] "GET /note HTTP/1.1" 200 -
[2017-12-03 22:30:59,165 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-03 22:30:59,224 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-03 22:30:59,864 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-03 22:30:59,864 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-03 22:30:59,864 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-03 22:31:01,985 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-03 22:31:02,029 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-03 22:31:02,630 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-03 22:31:02,634 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-03 22:31:02,634 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-03 22:31:08,111 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:31:08] "GET /continue HTTP/1.1" 200 -
[2017-12-03 22:31:09,173 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:31:09] "POST /continue HTTP/1.1" 200 -
[2017-12-03 22:31:10,955 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:31:10] "POST /continue HTTP/1.1" 200 -
[2017-12-03 22:31:13,064 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:31:13] "GET /continue HTTP/1.1" 200 -
[2017-12-03 22:31:20,065 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:31:20] "POST /continue HTTP/1.1" 302 -
[2017-12-03 22:31:20,081 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:31:20] "GET /note HTTP/1.1" 200 -
[2017-12-03 22:31:23,722 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:31:23] "GET /note HTTP/1.1" 200 -
[2017-12-03 22:31:28,113 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:31:28] "GET /continue HTTP/1.1" 200 -
[2017-12-03 22:31:34,020 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:31:34] "POST /continue HTTP/1.1" 200 -
[2017-12-03 22:31:35,160 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:31:35] "POST /continue HTTP/1.1" 302 -
[2017-12-03 22:31:35,176 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:31:35] "GET /note HTTP/1.1" 200 -
[2017-12-03 22:32:18,159 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:32:18] "GET /note HTTP/1.1" 200 -
[2017-12-03 22:32:18,174 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:32:18] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-03 22:32:18,190 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:32:18] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-03 22:32:18,190 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:32:18] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-03 22:32:18,190 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:32:18] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-03 22:32:25,222 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:32:25] "GET /about HTTP/1.1" 200 -
[2017-12-03 22:32:26,925 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:32:26] "GET / HTTP/1.1" 200 -
[2017-12-03 22:32:28,676 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:32:28] "GET /note HTTP/1.1" 200 -
[2017-12-03 22:32:32,551 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:32:32] "POST /login HTTP/1.1" 302 -
[2017-12-03 22:32:32,551 : INFO : views.py : 41 :             notes_db() ] started note db form
[2017-12-03 22:32:32,551 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-03 22:32:32,551 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:32:32] "GET /note HTTP/1.1" 200 -
[2017-12-03 22:33:02,102 : INFO : views.py : 41 :             notes_db() ] started note db form
[2017-12-03 22:33:02,102 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-03 22:33:02,102 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:33:02] "GET /note HTTP/1.1" 200 -
[2017-12-03 22:33:02,117 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:33:02] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-03 22:33:02,117 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:33:02] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-03 22:33:02,133 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:33:02] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-03 22:33:02,133 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:33:02] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-03 22:33:08,748 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:33:08] "GET /continue HTTP/1.1" 200 -
[2017-12-03 22:33:10,217 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:33:10] "POST /continue HTTP/1.1" 200 -
[2017-12-03 22:33:10,951 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:33:10] "POST /continue HTTP/1.1" 200 -
[2017-12-03 22:33:14,342 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:33:14] "POST /continue HTTP/1.1" 200 -
[2017-12-03 22:33:14,358 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:33:14] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-03 22:33:14,358 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:33:14] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-03 22:33:14,358 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:33:14] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-03 22:33:14,358 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:33:14] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-03 22:33:15,296 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:33:15] "POST /login HTTP/1.1" 200 -
[2017-12-03 22:33:19,187 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:33:19] "POST /login HTTP/1.1" 302 -
[2017-12-03 22:33:19,187 : INFO : views.py : 41 :             notes_db() ] started note db form
[2017-12-03 22:33:19,187 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-03 22:33:19,187 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:33:19] "GET /note HTTP/1.1" 200 -
[2017-12-03 22:33:21,546 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:33:21] "GET /continue HTTP/1.1" 200 -
[2017-12-03 22:33:22,875 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:33:22] "POST /continue HTTP/1.1" 200 -
[2017-12-03 22:33:26,875 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:33:26] "POST /continue HTTP/1.1" 200 -
[2017-12-03 22:33:34,751 : INFO : views.py : 41 :             notes_db() ] started note db form
[2017-12-03 22:33:34,751 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-03 22:33:34,766 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:33:34] "GET /note HTTP/1.1" 200 -
[2017-12-03 22:33:54,644 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:33:54] "GET /continue HTTP/1.1" 200 -
[2017-12-03 22:33:56,503 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:33:56] "POST /continue HTTP/1.1" 302 -
[2017-12-03 22:33:56,519 : INFO : views.py : 41 :             notes_db() ] started note db form
[2017-12-03 22:33:56,519 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-03 22:33:56,519 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:33:56] "GET /note HTTP/1.1" 200 -
[2017-12-03 22:34:28,012 : INFO : views.py : 41 :             notes_db() ] started note db form
[2017-12-03 22:34:28,013 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-03 22:34:28,014 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:34:28] "GET /note HTTP/1.1" 200 -
[2017-12-03 22:34:30,198 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:34:30] "GET /continue HTTP/1.1" 200 -
[2017-12-03 22:34:32,964 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:34:32] "POST /continue HTTP/1.1" 200 -
[2017-12-03 22:34:35,042 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:34:35] "POST /continue HTTP/1.1" 200 -
[2017-12-03 22:34:37,964 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:34:37] "GET /form HTTP/1.1" 200 -
[2017-12-03 22:34:42,074 : INFO : views.py : 41 :             notes_db() ] started note db form
[2017-12-03 22:34:42,074 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-03 22:34:42,090 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:34:42] "GET /note HTTP/1.1" 200 -
[2017-12-03 22:35:05,121 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:35:05] "GET / HTTP/1.1" 200 -
[2017-12-03 22:35:05,215 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:35:05] "GET /static/css/bootstrap.min.css HTTP/1.1" 200 -
[2017-12-03 22:35:05,215 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:35:05] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 200 -
[2017-12-03 22:35:05,215 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:35:05] "GET /static/js/bootstrap.min.js HTTP/1.1" 200 -
[2017-12-03 22:35:05,231 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:35:05] "GET /static/main.css HTTP/1.1" 200 -
[2017-12-03 22:35:05,278 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:35:05] "GET /favicon.ico HTTP/1.1" 200 -
[2017-12-03 22:35:12,237 : INFO : views.py : 41 :             notes_db() ] started note db form
[2017-12-03 22:35:12,237 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-03 22:35:12,253 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:35:12] "GET /note HTTP/1.1" 200 -
[2017-12-03 22:35:12,378 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:35:12] "GET /static/fonts/glyphicons-halflings-regular.woff2 HTTP/1.1" 200 -
[2017-12-03 22:35:12,506 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-03 22:35:12,584 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-03 22:35:13,149 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-03 22:35:13,149 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-03 22:35:13,149 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-03 22:36:25,156 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-03 22:36:25,188 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-03 22:36:25,843 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-03 22:36:25,846 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-03 22:36:25,853 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-03 22:36:27,822 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:36:27] "GET /note HTTP/1.1" 200 -
[2017-12-03 22:36:27,854 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:36:27] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-03 22:36:27,854 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:36:27] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-03 22:36:27,854 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:36:27] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-03 22:36:27,854 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:36:27] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-03 22:36:34,245 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:36:34] "POST /login HTTP/1.1" 302 -
[2017-12-03 22:36:34,245 : INFO : views.py : 40 :             notes_db() ] started note db form
[2017-12-03 22:36:34,261 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-03 22:36:34,261 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:36:34] "GET /note HTTP/1.1" 200 -
[2017-12-03 22:36:36,230 : INFO : views.py : 40 :             notes_db() ] started note db form
[2017-12-03 22:36:36,245 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-03 22:36:36,245 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:36:36] "GET /note HTTP/1.1" 200 -
[2017-12-03 22:36:37,214 : INFO : views.py : 40 :             notes_db() ] started note db form
[2017-12-03 22:36:37,214 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-03 22:36:37,214 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:36:37] "GET /note HTTP/1.1" 200 -
[2017-12-03 22:36:41,293 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:36:41] "GET /continue HTTP/1.1" 200 -
[2017-12-03 22:36:43,465 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:36:43] "POST /continue HTTP/1.1" 200 -
[2017-12-03 22:36:45,184 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:36:45] "POST /continue HTTP/1.1" 302 -
[2017-12-03 22:36:45,184 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:36:45] "GET /note HTTP/1.1" 200 -
[2017-12-03 22:36:47,903 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:36:47] "GET /note HTTP/1.1" 200 -
[2017-12-03 22:36:52,528 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:36:52] "POST /login HTTP/1.1" 200 -
[2017-12-03 22:36:53,138 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:36:53] "POST /login HTTP/1.1" 200 -
[2017-12-03 22:36:58,951 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:36:58] "POST /login HTTP/1.1" 200 -
[2017-12-03 22:37:02,576 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:37:02] "POST /login HTTP/1.1" 302 -
[2017-12-03 22:37:02,576 : INFO : views.py : 40 :             notes_db() ] started note db form
[2017-12-03 22:37:02,576 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-03 22:37:02,576 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:37:02] "GET /note HTTP/1.1" 200 -
[2017-12-03 22:37:04,295 : INFO : views.py : 40 :             notes_db() ] started note db form
[2017-12-03 22:37:04,295 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-03 22:37:04,295 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:37:04] "GET /note HTTP/1.1" 200 -
[2017-12-03 22:37:05,873 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:37:05] "GET /continue HTTP/1.1" 200 -
[2017-12-03 22:37:08,999 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:37:08] "POST /continue HTTP/1.1" 302 -
[2017-12-03 22:37:09,014 : INFO : views.py : 40 :             notes_db() ] started note db form
[2017-12-03 22:37:09,030 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-03 22:37:09,030 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:37:09] "GET /note HTTP/1.1" 200 -
[2017-12-03 22:37:10,780 : INFO : views.py : 40 :             notes_db() ] started note db form
[2017-12-03 22:37:10,780 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-03 22:37:10,780 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:37:10] "GET /note HTTP/1.1" 200 -
[2017-12-03 22:37:13,108 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:37:13] "GET /continue HTTP/1.1" 200 -
[2017-12-03 22:37:18,046 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:37:18] "POST /continue HTTP/1.1" 200 -
[2017-12-03 22:37:22,266 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:37:22] "POST /continue HTTP/1.1" 302 -
[2017-12-03 22:37:22,281 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:37:22] "GET /note HTTP/1.1" 200 -
[2017-12-03 22:37:26,765 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-03 22:37:26,828 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-03 22:37:27,376 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-03 22:37:27,376 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-03 22:37:27,376 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-03 22:40:46,584 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:40:46] "GET /note HTTP/1.1" 200 -
[2017-12-03 22:40:46,600 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:40:46] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-03 22:40:46,600 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:40:46] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-03 22:40:46,615 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:40:46] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-03 22:40:46,615 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:40:46] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-03 22:40:50,960 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:40:50] "POST /login HTTP/1.1" 302 -
[2017-12-03 22:40:50,975 : INFO : views.py : 40 :             notes_db() ] started note db form
[2017-12-03 22:40:50,975 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-03 22:40:50,975 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:40:50] "GET /note HTTP/1.1" 200 -
[2017-12-03 22:40:53,444 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:40:53] "GET /continue HTTP/1.1" 200 -
[2017-12-03 22:40:54,397 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:40:54] "POST /continue HTTP/1.1" 302 -
[2017-12-03 22:40:58,617 : INFO : views.py : 40 :             notes_db() ] started note db form
[2017-12-03 22:40:58,617 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-03 22:40:58,632 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:40:58] "GET /note HTTP/1.1" 200 -
[2017-12-03 22:41:01,429 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:41:01] "GET /continue HTTP/1.1" 200 -
[2017-12-03 22:41:02,883 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:41:02] "POST /continue HTTP/1.1" 200 -
[2017-12-03 22:41:05,727 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:41:05] "POST /continue HTTP/1.1" 302 -
[2017-12-03 22:41:05,742 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:41:05] "GET /note HTTP/1.1" 200 -
[2017-12-03 22:43:01,393 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:43:01] "POST /login HTTP/1.1" 200 -
[2017-12-03 22:43:05,831 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:43:05] "POST /login HTTP/1.1" 302 -
[2017-12-03 22:43:05,831 : INFO : views.py : 40 :             notes_db() ] started note db form
[2017-12-03 22:43:05,831 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-03 22:43:05,831 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:43:05] "GET /note HTTP/1.1" 200 -
[2017-12-03 22:43:10,316 : INFO : views.py : 40 :             notes_db() ] started note db form
[2017-12-03 22:43:10,316 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-03 22:43:10,316 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:43:10] "GET /note HTTP/1.1" 200 -
[2017-12-03 22:43:14,895 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:43:14] "GET /continue HTTP/1.1" 200 -
[2017-12-03 22:43:16,207 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:43:16] "POST /continue HTTP/1.1" 302 -
[2017-12-03 22:43:16,207 : INFO : views.py : 40 :             notes_db() ] started note db form
[2017-12-03 22:43:16,207 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-03 22:43:16,207 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:43:16] "GET /note HTTP/1.1" 200 -
[2017-12-03 22:43:18,020 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:43:18] "GET /continue HTTP/1.1" 200 -
[2017-12-03 22:43:19,176 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:43:19] "POST /continue HTTP/1.1" 200 -
[2017-12-03 22:43:22,989 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:43:22] "POST /continue HTTP/1.1" 302 -
[2017-12-03 22:43:23,005 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:43:23] "GET /note HTTP/1.1" 200 -
[2017-12-03 22:43:24,458 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:43:24] "GET /about HTTP/1.1" 200 -
[2017-12-03 22:43:50,336 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:43:50] "GET / HTTP/1.1" 200 -
[2017-12-03 22:44:03,197 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:44:03] "GET /note HTTP/1.1" 200 -
[2017-12-03 22:48:38,825 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:48:38] "GET /about HTTP/1.1" 200 -
[2017-12-03 22:48:41,825 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:48:41] "GET /note HTTP/1.1" 200 -
[2017-12-03 22:49:03,969 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:49:03] "POST /login HTTP/1.1" 302 -
[2017-12-03 22:49:03,973 : INFO : views.py : 40 :             notes_db() ] started note db form
[2017-12-03 22:49:03,973 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-03 22:49:03,975 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:49:03] "GET /note HTTP/1.1" 200 -
[2017-12-03 22:49:06,734 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:49:06] "GET /about HTTP/1.1" 200 -
[2017-12-03 22:49:08,312 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:49:08] "GET /grafana HTTP/1.1" 200 -
[2017-12-03 22:49:11,985 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:49:11] "GET /static/img/grafana/grafana_start.jpg HTTP/1.1" 200 -
[2017-12-03 22:49:12,000 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:49:12] "GET /static/img/grafana/grafana_dash.jpg HTTP/1.1" 200 -
[2017-12-03 22:49:12,016 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:49:12] "GET /static/img/grafana/table_postgre.jpg HTTP/1.1" 200 -
[2017-12-03 22:49:12,031 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:49:12] "GET /static/img/grafana/grafana_datasource.jpg HTTP/1.1" 200 -
[2017-12-03 22:49:12,031 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:49:12] "GET /static/img/grafana/grafana_panel.jpg HTTP/1.1" 200 -
[2017-12-03 22:49:12,047 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:49:12] "GET /static/img/grafana/grafana_query.jpg HTTP/1.1" 200 -
[2017-12-03 22:49:12,047 : INFO : views.py : 40 :             notes_db() ] started note db form
[2017-12-03 22:49:12,047 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-03 22:49:12,063 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:49:12] "GET /note HTTP/1.1" 200 -
[2017-12-03 22:49:14,329 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:49:14] "GET /grafana HTTP/1.1" 200 -
[2017-12-03 22:49:14,360 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:49:14] "GET /static/img/grafana/grafana_start.jpg HTTP/1.1" 200 -
[2017-12-03 22:49:19,017 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:49:19] "GET /static/img/grafana/grafana_dash.jpg HTTP/1.1" 200 -
[2017-12-03 22:49:19,048 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:49:19] "GET /static/img/grafana/table_postgre.jpg HTTP/1.1" 200 -
[2017-12-03 22:49:19,063 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:49:19] "GET /static/img/grafana/grafana_datasource.jpg HTTP/1.1" 200 -
[2017-12-03 22:49:19,079 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:49:19] "GET /static/img/grafana/grafana_panel.jpg HTTP/1.1" 200 -
[2017-12-03 22:49:19,079 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:49:19] "GET /static/img/grafana/grafana_query.jpg HTTP/1.1" 200 -
[2017-12-03 22:49:19,095 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:49:19] "GET /static/img/grafana/grafana_result.jpg HTTP/1.1" 200 -
[2017-12-03 22:49:29,189 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:49:29] "GET /octopus HTTP/1.1" 200 -
[2017-12-03 22:49:38,269 : INFO : views.py : 40 :             notes_db() ] started note db form
[2017-12-03 22:49:38,269 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-03 22:49:38,269 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:49:38] "GET /note HTTP/1.1" 200 -
[2017-12-03 22:49:49,957 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:49:49] "GET /py HTTP/1.1" 200 -
[2017-12-03 22:49:50,004 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:49:50] "GET /static/img/import_cls/app_form_mod.jpg HTTP/1.1" 200 -
[2017-12-03 22:49:50,020 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:49:50] "GET /static/img/import_cls/add_init.jpg HTTP/1.1" 200 -
[2017-12-03 22:50:03,209 : INFO : views.py : 40 :             notes_db() ] started note db form
[2017-12-03 22:50:03,209 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-03 22:50:03,224 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:50:03] "GET /note HTTP/1.1" 200 -
[2017-12-03 22:50:50,743 : INFO : views.py : 40 :             notes_db() ] started note db form
[2017-12-03 22:50:50,744 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-03 22:50:50,746 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:50:50] "GET /note HTTP/1.1" 200 -
[2017-12-03 22:50:50,765 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:50:50] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-03 22:50:50,772 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:50:50] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-03 22:50:50,775 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:50:50] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-03 22:50:50,778 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:50:50] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-03 22:50:57,827 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:50:57] "GET /about HTTP/1.1" 200 -
[2017-12-03 22:50:59,905 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:50:59] "GET /continue HTTP/1.1" 200 -
[2017-12-03 22:51:01,796 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:51:01] "POST /continue HTTP/1.1" 200 -
[2017-12-03 22:51:04,999 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:51:04] "POST /continue HTTP/1.1" 302 -
[2017-12-03 22:51:04,999 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:51:04] "GET /note HTTP/1.1" 200 -
[2017-12-03 22:51:07,203 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:51:07] "GET /note HTTP/1.1" 200 -
[2017-12-03 22:51:12,048 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:51:12] "GET /continue HTTP/1.1" 200 -
[2017-12-03 22:51:14,986 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:51:14] "POST /continue HTTP/1.1" 302 -
[2017-12-03 22:51:14,992 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:51:14] "GET /note HTTP/1.1" 200 -
[2017-12-03 22:51:17,680 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:51:17] "GET / HTTP/1.1" 200 -
[2017-12-03 22:51:53,585 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:51:53] "GET / HTTP/1.1" 200 -
[2017-12-03 22:51:53,603 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:51:53] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-03 22:51:53,605 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:51:53] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-03 22:51:53,609 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:51:53] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-03 22:51:53,611 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:51:53] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-03 22:52:00,638 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:52:00] "GET /continue HTTP/1.1" 200 -
[2017-12-03 22:52:02,341 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:52:02] "POST /continue HTTP/1.1" 200 -
[2017-12-03 22:52:03,747 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:52:03] "POST /continue HTTP/1.1" 302 -
[2017-12-03 22:52:03,747 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:52:03] "GET /note HTTP/1.1" 200 -
[2017-12-03 22:52:06,607 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:52:06] "GET /py HTTP/1.1" 200 -
[2017-12-03 22:52:08,748 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:52:08] "GET /note HTTP/1.1" 200 -
[2017-12-03 22:52:50,222 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:52:50] "GET /note HTTP/1.1" 200 -
[2017-12-03 22:52:50,238 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:52:50] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-03 22:52:50,238 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:52:50] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-03 22:52:50,238 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:52:50] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-03 22:52:50,254 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:52:50] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-03 22:53:54,517 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:53:54] "GET /note HTTP/1.1" 200 -
[2017-12-03 22:53:54,532 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:53:54] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-03 22:53:54,548 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:53:54] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-03 22:53:54,548 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:53:54] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-03 22:53:54,548 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:53:54] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-03 22:54:02,574 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:54:02] "GET /note HTTP/1.1" 200 -
[2017-12-03 22:54:06,434 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:54:06] "POST /login HTTP/1.1" 302 -
[2017-12-03 22:54:06,450 : INFO : views.py : 40 :             notes_db() ] started note db form
[2017-12-03 22:54:06,450 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-03 22:54:06,450 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:54:06] "GET /note HTTP/1.1" 200 -
[2017-12-03 22:54:08,747 : INFO : views.py : 40 :             notes_db() ] started note db form
[2017-12-03 22:54:08,747 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-03 22:54:08,747 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:54:08] "GET /note HTTP/1.1" 200 -
[2017-12-03 22:54:10,732 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:54:10] "GET /continue HTTP/1.1" 200 -
[2017-12-03 22:54:13,498 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:54:13] "POST /continue HTTP/1.1" 200 -
[2017-12-03 22:54:21,561 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:54:21] "GET /note HTTP/1.1" 200 -
[2017-12-03 22:54:35,289 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-03 22:54:35,399 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-03 22:54:36,000 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-03 22:54:36,003 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-03 22:54:36,016 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-03 22:56:49,260 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [03/Dec/2017 22:56:49] "POST /login HTTP/1.1" 200 -
[2017-12-04 18:22:19,954 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 18:22:19] "POST /login HTTP/1.1" 200 -
[2017-12-04 18:22:19,985 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 18:22:19] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-04 18:22:19,985 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 18:22:19] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-04 18:22:19,985 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 18:22:19] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-04 18:22:19,985 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 18:22:19] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-04 18:22:23,486 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 18:22:23] "POST /login HTTP/1.1" 302 -
[2017-12-04 18:22:23,501 : INFO : views.py : 40 :             notes_db() ] started note db form
[2017-12-04 18:22:23,517 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-04 18:22:23,548 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 18:22:23] "GET /note HTTP/1.1" 200 -
[2017-12-04 18:22:23,611 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 18:22:23] "GET /static/fonts/glyphicons-halflings-regular.woff2 HTTP/1.1" 304 -
[2017-12-04 18:22:25,595 : INFO : views.py : 40 :             notes_db() ] started note db form
[2017-12-04 18:22:25,595 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-04 18:22:25,595 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 18:22:25] "GET /note HTTP/1.1" 200 -
[2017-12-04 18:22:30,658 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 18:22:30] "GET /continue HTTP/1.1" 200 -
[2017-12-04 18:22:31,940 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 18:22:31] "POST /continue HTTP/1.1" 302 -
[2017-12-04 18:22:31,940 : INFO : views.py : 40 :             notes_db() ] started note db form
[2017-12-04 18:22:31,940 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-04 18:22:31,940 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 18:22:31] "GET /note HTTP/1.1" 200 -
[2017-12-04 18:22:35,503 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 18:22:35] "GET /continue HTTP/1.1" 200 -
[2017-12-04 18:22:36,800 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 18:22:36] "POST /continue HTTP/1.1" 200 -
[2017-12-04 18:22:40,019 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 18:22:40] "POST /continue HTTP/1.1" 302 -
[2017-12-04 18:22:40,050 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 18:22:40] "GET /note HTTP/1.1" 200 -
[2017-12-04 18:22:43,519 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 18:22:43] "GET /note HTTP/1.1" 200 -
[2017-12-04 18:22:48,113 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 18:22:48] "GET /continue HTTP/1.1" 200 -
[2017-12-04 18:22:49,864 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 18:22:49] "POST /continue HTTP/1.1" 302 -
[2017-12-04 18:22:49,864 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 18:22:49] "GET /note HTTP/1.1" 200 -
[2017-12-04 19:34:48,521 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_declarative.py', reloading
[2017-12-04 19:34:48,561 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 19:36:05,187 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 19:36:05,718 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 19:36:05,734 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 19:36:05,734 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 19:36:21,589 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_declarative.py', reloading
[2017-12-04 19:36:21,618 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 19:36:22,198 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 19:36:22,201 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 19:36:22,209 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 19:36:42,287 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_declarative.py', reloading
[2017-12-04 19:36:42,322 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 19:36:43,038 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 19:36:43,044 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 19:36:43,053 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 19:36:46,240 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 19:36:46,771 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 19:36:46,771 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 19:36:46,787 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 19:38:30,962 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_declarative.py', reloading
[2017-12-04 19:38:30,993 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 19:38:31,642 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 19:38:31,642 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 19:38:31,658 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 19:38:40,382 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 19:38:40,929 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 19:38:40,929 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 19:38:40,929 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 19:38:56,817 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_declarative.py', reloading
[2017-12-04 19:38:56,848 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 19:38:57,549 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 19:38:57,552 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 19:38:57,560 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 19:40:05,849 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_declarative.py', reloading
[2017-12-04 19:40:05,873 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 19:40:06,524 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 19:40:06,524 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 19:40:06,540 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 19:40:12,967 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 19:40:13,498 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 19:40:13,498 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 19:40:13,498 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 19:41:24,524 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_declarative.py', reloading
[2017-12-04 19:41:24,563 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 19:41:25,305 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 19:41:25,308 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 19:41:25,315 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 19:41:44,323 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_declarative.py', reloading
[2017-12-04 19:41:44,351 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 19:42:28,078 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 19:42:28,610 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 19:42:28,610 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 19:42:28,625 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 19:44:10,892 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_declarative.py', reloading
[2017-12-04 19:44:10,948 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 19:44:11,514 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 19:44:11,514 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 19:44:11,530 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 19:44:24,207 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_declarative.py', reloading
[2017-12-04 19:44:24,243 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 19:44:24,872 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 19:44:24,875 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 19:44:24,882 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 19:47:30,696 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_declarative.py', reloading
[2017-12-04 19:47:30,718 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 19:47:31,355 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 19:47:31,358 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 19:47:31,365 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 19:47:49,465 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_declarative.py', reloading
[2017-12-04 19:47:49,506 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 19:47:50,186 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 19:47:50,186 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 19:47:50,186 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 19:48:05,932 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_declarative.py', reloading
[2017-12-04 19:48:05,964 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 19:48:06,601 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 19:48:06,605 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 19:48:06,612 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 19:48:23,570 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_declarative.py', reloading
[2017-12-04 19:48:23,601 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 19:48:24,283 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 19:48:24,289 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 19:48:24,299 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 19:48:32,619 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_declarative.py', reloading
[2017-12-04 19:48:32,659 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 19:48:33,328 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 19:48:33,332 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 19:48:33,341 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 19:48:55,545 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_declarative.py', reloading
[2017-12-04 19:48:55,578 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 19:49:24,125 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 19:49:24,679 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 19:49:24,679 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 19:49:24,694 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 19:49:38,326 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_declarative.py', reloading
[2017-12-04 19:49:38,358 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 19:52:47,000 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 19:52:47,547 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 19:52:47,547 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 19:52:47,547 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 19:53:00,595 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 19:53:00] "POST /login HTTP/1.1" 302 -
[2017-12-04 19:53:00,611 : INFO : views.py : 40 :             notes_db() ] started note db form
[2017-12-04 19:53:00,611 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-04 19:53:00,658 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 19:53:00] "GET /note HTTP/1.1" 200 -
[2017-12-04 19:53:04,065 : INFO : views.py : 40 :             notes_db() ] started note db form
[2017-12-04 19:53:04,065 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-04 19:53:04,065 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 19:53:04] "GET /note HTTP/1.1" 200 -
[2017-12-04 19:53:15,222 : INFO : views.py : 40 :             notes_db() ] started note db form
[2017-12-04 19:53:15,222 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-04 19:53:15,222 : INFO : views.py : 46 :             notes_db() ] post action
[2017-12-04 19:53:15,222 : DEBUG : sqlalchemy_statments.py : 55 :           get_max_id() ] (10,)
[2017-12-04 19:53:15,222 : DEBUG : sqlalchemy_statments.py : 85 :               insert() ] Added 1 row to sqlite3, with id 11
[2017-12-04 19:53:15,238 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 19:53:15] "POST /note HTTP/1.1" 500 -
[2017-12-04 19:53:15,253 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 19:53:15] "GET /note?__debugger__=yes&cmd=resource&f=style.css HTTP/1.1" 200 -
[2017-12-04 19:53:15,253 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 19:53:15] "GET /note?__debugger__=yes&cmd=resource&f=jquery.js HTTP/1.1" 200 -
[2017-12-04 19:53:15,423 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 19:53:15] "GET /note?__debugger__=yes&cmd=resource&f=debugger.js HTTP/1.1" 200 -
[2017-12-04 19:53:15,423 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 19:53:15] "GET /note?__debugger__=yes&cmd=resource&f=console.png HTTP/1.1" 200 -
[2017-12-04 19:53:15,439 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 19:53:15] "GET /note?__debugger__=yes&cmd=resource&f=ubuntu.ttf HTTP/1.1" 200 -
[2017-12-04 19:53:15,454 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 19:53:15] "GET /note?__debugger__=yes&cmd=resource&f=console.png HTTP/1.1" 200 -
[2017-12-04 19:54:30,069 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-04 19:54:30,162 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 19:54:30,868 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 19:54:30,868 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 19:54:30,868 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 19:54:52,798 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 19:54:52] "GET /note HTTP/1.1" 200 -
[2017-12-04 19:54:56,846 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 19:54:56] "POST /login HTTP/1.1" 302 -
[2017-12-04 19:54:56,846 : INFO : views.py : 40 :             notes_db() ] started note db form
[2017-12-04 19:54:56,846 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(11, 'eeeeeeeeeeeeee', 'Programming', 'eeeeeeeeeeeeee', '2017-12-04 19:53:15.222451'), (10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-04 19:54:56,861 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 19:54:56] "GET /note HTTP/1.1" 200 -
[2017-12-04 19:54:58,674 : INFO : views.py : 40 :             notes_db() ] started note db form
[2017-12-04 19:54:58,674 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(11, 'eeeeeeeeeeeeee', 'Programming', 'eeeeeeeeeeeeee', '2017-12-04 19:53:15.222451'), (10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-04 19:54:58,674 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 19:54:58] "GET /note HTTP/1.1" 200 -
[2017-12-04 19:55:04,143 : INFO : views.py : 40 :             notes_db() ] started note db form
[2017-12-04 19:55:04,143 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(11, 'eeeeeeeeeeeeee', 'Programming', 'eeeeeeeeeeeeee', '2017-12-04 19:53:15.222451'), (10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-04 19:55:04,143 : INFO : views.py : 46 :             notes_db() ] post action
[2017-12-04 19:55:04,143 : DEBUG : sqlalchemy_statments.py : 55 :           get_max_id() ] (11,)
[2017-12-04 19:55:04,159 : DEBUG : sqlalchemy_statments.py : 85 :               insert() ] Added 1 row to sqlite3, with id 12
[2017-12-04 19:55:04,159 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 19:55:04] "POST /note HTTP/1.1" 200 -
[2017-12-04 19:55:05,943 : INFO : views.py : 40 :             notes_db() ] started note db form
[2017-12-04 19:55:05,943 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(12, 'aaaaaaaaaaa', 'Programming', 'aaaaaaaaaaaaaaaa', '2017-12-04 19:55:04.143725'), (11, 'eeeeeeeeeeeeee', 'Programming', 'eeeeeeeeeeeeee', '2017-12-04 19:53:15.222451'), (10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-04 19:55:05,943 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 19:55:05] "GET /note HTTP/1.1" 200 -
[2017-12-04 19:55:08,787 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 19:55:08] "GET /continue HTTP/1.1" 200 -
[2017-12-04 19:55:13,178 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 19:55:13] "POST /continue HTTP/1.1" 302 -
[2017-12-04 19:55:13,194 : INFO : views.py : 40 :             notes_db() ] started note db form
[2017-12-04 19:55:13,209 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(12, 'aaaaaaaaaaa', 'Programming', 'aaaaaaaaaaaaaaaa', '2017-12-04 19:55:04.143725'), (11, 'eeeeeeeeeeeeee', 'Programming', 'eeeeeeeeeeeeee', '2017-12-04 19:53:15.222451'), (10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-04 19:55:13,209 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 19:55:13] "GET /note HTTP/1.1" 200 -
[2017-12-04 19:55:15,694 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 19:55:15] "GET /continue HTTP/1.1" 200 -
[2017-12-04 19:55:17,194 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 19:55:17] "POST /continue HTTP/1.1" 200 -
[2017-12-04 19:55:21,226 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 19:55:21] "GET /note HTTP/1.1" 200 -
[2017-12-04 19:55:29,928 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-04 19:55:30,007 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 19:55:30,557 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 19:55:30,557 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 19:55:30,572 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 19:55:36,910 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_declarative.py', reloading
[2017-12-04 19:55:36,989 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 19:55:37,536 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 19:55:37,536 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 19:55:37,552 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 19:56:05,916 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_declarative.py', reloading
[2017-12-04 19:56:05,952 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 19:56:06,661 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 19:56:06,664 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 19:56:06,672 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 19:56:37,078 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_declarative.py', reloading
[2017-12-04 19:56:37,121 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 19:56:37,768 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 19:56:37,771 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 19:56:37,779 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 19:56:44,086 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_declarative.py', reloading
[2017-12-04 19:56:44,190 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 19:56:44,735 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 19:56:44,735 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 19:56:44,751 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 19:56:59,609 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_declarative.py', reloading
[2017-12-04 19:56:59,635 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 19:57:00,267 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 19:57:00,283 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 19:57:00,283 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 19:57:25,525 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_declarative.py', reloading
[2017-12-04 19:57:25,556 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 19:57:26,229 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 19:57:26,232 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 19:57:26,241 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 19:57:50,505 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_declarative.py', reloading
[2017-12-04 19:57:50,550 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 19:57:51,216 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 19:57:51,219 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 19:57:51,228 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 19:57:58,608 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_declarative.py', reloading
[2017-12-04 19:57:58,641 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 19:57:59,276 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 19:57:59,292 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 19:57:59,292 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 19:59:57,670 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_declarative.py', reloading
[2017-12-04 19:59:57,702 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 19:59:58,335 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 19:59:58,338 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 19:59:58,347 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 20:00:31,179 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_statments.py', reloading
[2017-12-04 20:00:31,273 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 20:00:31,945 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 20:00:31,945 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 20:00:31,961 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 20:00:43,597 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_statments.py', reloading
[2017-12-04 20:00:43,641 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 20:00:44,419 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 20:00:44,422 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 20:00:44,430 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 20:25:34,844 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_statments.py', reloading
[2017-12-04 20:25:34,922 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 20:25:35,480 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 20:25:35,480 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 20:25:35,480 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 20:25:45,282 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 20:25:45] "POST /login HTTP/1.1" 302 -
[2017-12-04 20:25:45,282 : INFO : views.py : 40 :             notes_db() ] started note db form
[2017-12-04 20:25:45,282 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(12, 'aaaaaaaaaaa', 'Programming', 'aaaaaaaaaaaaaaaa', '2017-12-04 19:55:04.143725'), (11, 'eeeeeeeeeeeeee', 'Programming', 'eeeeeeeeeeeeee', '2017-12-04 19:53:15.222451'), (10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-04 20:25:45,297 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 20:25:45] "GET /note HTTP/1.1" 200 -
[2017-12-04 20:25:49,251 : INFO : views.py : 40 :             notes_db() ] started note db form
[2017-12-04 20:25:49,251 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(12, 'aaaaaaaaaaa', 'Programming', 'aaaaaaaaaaaaaaaa', '2017-12-04 19:55:04.143725'), (11, 'eeeeeeeeeeeeee', 'Programming', 'eeeeeeeeeeeeee', '2017-12-04 19:53:15.222451'), (10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-04 20:25:49,251 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 20:25:49] "GET /note HTTP/1.1" 200 -
[2017-12-04 20:25:55,986 : INFO : views.py : 40 :             notes_db() ] started note db form
[2017-12-04 20:25:55,986 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(12, 'aaaaaaaaaaa', 'Programming', 'aaaaaaaaaaaaaaaa', '2017-12-04 19:55:04.143725'), (11, 'eeeeeeeeeeeeee', 'Programming', 'eeeeeeeeeeeeee', '2017-12-04 19:53:15.222451'), (10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-04 20:25:55,986 : INFO : views.py : 46 :             notes_db() ] post action
[2017-12-04 20:25:55,986 : DEBUG : sqlalchemy_statments.py : 55 :           get_max_id() ] (12,)
[2017-12-04 20:25:55,986 : DEBUG : sqlalchemy_statments.py : 85 :               insert() ] Added 1 row to sqlite3, with id 13
[2017-12-04 20:25:55,986 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 20:25:55] "POST /note HTTP/1.1" 200 -
[2017-12-04 20:25:58,613 : INFO : views.py : 40 :             notes_db() ] started note db form
[2017-12-04 20:25:58,613 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(13, 'qqqqqqqqqqqqq', 'Programming', 'qqqqqqqqqqqqqq', '2017-12-04 20:25:55.986406'), (12, 'aaaaaaaaaaa', 'Programming', 'aaaaaaaaaaaaaaaa', '2017-12-04 19:55:04.143725'), (11, 'eeeeeeeeeeeeee', 'Programming', 'eeeeeeeeeeeeee', '2017-12-04 19:53:15.222451'), (10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-04 20:25:58,613 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 20:25:58] "GET /note HTTP/1.1" 200 -
[2017-12-04 20:26:27,209 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_declarative.py', reloading
[2017-12-04 20:26:27,318 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 20:26:27,915 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 20:26:27,918 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 20:26:27,926 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 20:26:32,694 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 20:26:32] "GET /note HTTP/1.1" 200 -
[2017-12-04 20:26:36,710 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 20:26:36] "POST /login HTTP/1.1" 302 -
[2017-12-04 20:26:36,726 : INFO : views.py : 40 :             notes_db() ] started note db form
[2017-12-04 20:26:36,726 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(13, 'qqqqqqqqqqqqq', 'Programming', 'qqqqqqqqqqqqqq', '2017-12-04 20:25:55.986406'), (12, 'aaaaaaaaaaa', 'Programming', 'aaaaaaaaaaaaaaaa', '2017-12-04 19:55:04.143725'), (11, 'eeeeeeeeeeeeee', 'Programming', 'eeeeeeeeeeeeee', '2017-12-04 19:53:15.222451'), (10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-04 20:26:36,742 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 20:26:36] "GET /note HTTP/1.1" 200 -
[2017-12-04 20:26:38,507 : INFO : views.py : 40 :             notes_db() ] started note db form
[2017-12-04 20:26:38,507 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(13, 'qqqqqqqqqqqqq', 'Programming', 'qqqqqqqqqqqqqq', '2017-12-04 20:25:55.986406'), (12, 'aaaaaaaaaaa', 'Programming', 'aaaaaaaaaaaaaaaa', '2017-12-04 19:55:04.143725'), (11, 'eeeeeeeeeeeeee', 'Programming', 'eeeeeeeeeeeeee', '2017-12-04 19:53:15.222451'), (10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-04 20:26:38,523 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 20:26:38] "GET /note HTTP/1.1" 200 -
[2017-12-04 20:26:39,039 : INFO : views.py : 40 :             notes_db() ] started note db form
[2017-12-04 20:26:39,039 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(13, 'qqqqqqqqqqqqq', 'Programming', 'qqqqqqqqqqqqqq', '2017-12-04 20:25:55.986406'), (12, 'aaaaaaaaaaa', 'Programming', 'aaaaaaaaaaaaaaaa', '2017-12-04 19:55:04.143725'), (11, 'eeeeeeeeeeeeee', 'Programming', 'eeeeeeeeeeeeee', '2017-12-04 19:53:15.222451'), (10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-04 20:26:39,054 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 20:26:39] "GET /note HTTP/1.1" 200 -
[2017-12-04 20:26:43,930 : INFO : views.py : 40 :             notes_db() ] started note db form
[2017-12-04 20:26:43,930 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(13, 'qqqqqqqqqqqqq', 'Programming', 'qqqqqqqqqqqqqq', '2017-12-04 20:25:55.986406'), (12, 'aaaaaaaaaaa', 'Programming', 'aaaaaaaaaaaaaaaa', '2017-12-04 19:55:04.143725'), (11, 'eeeeeeeeeeeeee', 'Programming', 'eeeeeeeeeeeeee', '2017-12-04 19:53:15.222451'), (10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-04 20:26:43,930 : INFO : views.py : 46 :             notes_db() ] post action
[2017-12-04 20:26:43,930 : DEBUG : sqlalchemy_statments.py : 106 :               delete() ] Delete 1 row, id 13.
[2017-12-04 20:26:43,930 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 20:26:43] "POST /note HTTP/1.1" 200 -
[2017-12-04 20:26:46,030 : INFO : views.py : 40 :             notes_db() ] started note db form
[2017-12-04 20:26:46,030 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(12, 'aaaaaaaaaaa', 'Programming', 'aaaaaaaaaaaaaaaa', '2017-12-04 19:55:04.143725'), (11, 'eeeeeeeeeeeeee', 'Programming', 'eeeeeeeeeeeeee', '2017-12-04 19:53:15.222451'), (10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-04 20:26:46,030 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 20:26:46] "GET /note HTTP/1.1" 200 -
[2017-12-04 20:26:47,936 : INFO : views.py : 40 :             notes_db() ] started note db form
[2017-12-04 20:26:47,936 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(12, 'aaaaaaaaaaa', 'Programming', 'aaaaaaaaaaaaaaaa', '2017-12-04 19:55:04.143725'), (11, 'eeeeeeeeeeeeee', 'Programming', 'eeeeeeeeeeeeee', '2017-12-04 19:53:15.222451'), (10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-04 20:26:47,936 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 20:26:47] "GET /note HTTP/1.1" 200 -
[2017-12-04 20:26:54,765 : INFO : views.py : 40 :             notes_db() ] started note db form
[2017-12-04 20:26:54,765 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(12, 'aaaaaaaaaaa', 'Programming', 'aaaaaaaaaaaaaaaa', '2017-12-04 19:55:04.143725'), (11, 'eeeeeeeeeeeeee', 'Programming', 'eeeeeeeeeeeeee', '2017-12-04 19:53:15.222451'), (10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-04 20:26:54,765 : INFO : views.py : 46 :             notes_db() ] post action
[2017-12-04 20:26:54,765 : DEBUG : sqlalchemy_statments.py : 55 :           get_max_id() ] (12,)
[2017-12-04 20:26:54,765 : DEBUG : sqlalchemy_statments.py : 85 :               insert() ] Added 1 row to sqlite3, with id 13
[2017-12-04 20:26:54,765 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 20:26:54] "POST /note HTTP/1.1" 200 -
[2017-12-04 20:26:56,877 : INFO : views.py : 40 :             notes_db() ] started note db form
[2017-12-04 20:26:56,877 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(13, 'qqqqqqqqqqqqqqqqq', 'Programming', 'qqqqqqqqqqaaaaaaaa', '2017-12-04 20:26:54.765365'), (12, 'aaaaaaaaaaa', 'Programming', 'aaaaaaaaaaaaaaaa', '2017-12-04 19:55:04.143725'), (11, 'eeeeeeeeeeeeee', 'Programming', 'eeeeeeeeeeeeee', '2017-12-04 19:53:15.222451'), (10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-04 20:26:56,877 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 20:26:56] "GET /note HTTP/1.1" 200 -
[2017-12-04 20:27:09,137 : INFO : views.py : 40 :             notes_db() ] started note db form
[2017-12-04 20:27:09,137 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(13, 'qqqqqqqqqqqqqqqqq', 'Programming', 'qqqqqqqqqqaaaaaaaa', '2017-12-04 20:26:54.765365'), (12, 'aaaaaaaaaaa', 'Programming', 'aaaaaaaaaaaaaaaa', '2017-12-04 19:55:04.143725'), (11, 'eeeeeeeeeeeeee', 'Programming', 'eeeeeeeeeeeeee', '2017-12-04 19:53:15.222451'), (10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-04 20:27:09,137 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 20:27:09] "GET /note HTTP/1.1" 200 -
[2017-12-04 20:27:14,794 : INFO : views.py : 40 :             notes_db() ] started note db form
[2017-12-04 20:27:14,794 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(13, 'qqqqqqqqqqqqqqqqq', 'Programming', 'qqqqqqqqqqaaaaaaaa', '2017-12-04 20:26:54.765365'), (12, 'aaaaaaaaaaa', 'Programming', 'aaaaaaaaaaaaaaaa', '2017-12-04 19:55:04.143725'), (11, 'eeeeeeeeeeeeee', 'Programming', 'eeeeeeeeeeeeee', '2017-12-04 19:53:15.222451'), (10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-04 20:27:14,794 : INFO : views.py : 46 :             notes_db() ] post action
[2017-12-04 20:27:14,794 : DEBUG : sqlalchemy_statments.py : 55 :           get_max_id() ] (13,)
[2017-12-04 20:27:14,794 : DEBUG : sqlalchemy_statments.py : 85 :               insert() ] Added 1 row to sqlite3, with id 14
[2017-12-04 20:27:14,794 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 20:27:14] "POST /note HTTP/1.1" 200 -
[2017-12-04 20:27:16,641 : INFO : views.py : 40 :             notes_db() ] started note db form
[2017-12-04 20:27:16,641 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(14, 'vvvvvvvvvv', 'Programming', 'vvvvvvvvvvvvv', '2017-12-04 20:27:14.794627'), (13, 'qqqqqqqqqqqqqqqqq', 'Programming', 'qqqqqqqqqqaaaaaaaa', '2017-12-04 20:26:54.765365'), (12, 'aaaaaaaaaaa', 'Programming', 'aaaaaaaaaaaaaaaa', '2017-12-04 19:55:04.143725'), (11, 'eeeeeeeeeeeeee', 'Programming', 'eeeeeeeeeeeeee', '2017-12-04 19:53:15.222451'), (10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-04 20:27:16,641 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 20:27:16] "GET /note HTTP/1.1" 200 -
[2017-12-04 20:27:22,423 : INFO : views.py : 40 :             notes_db() ] started note db form
[2017-12-04 20:27:22,423 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(14, 'vvvvvvvvvv', 'Programming', 'vvvvvvvvvvvvv', '2017-12-04 20:27:14.794627'), (13, 'qqqqqqqqqqqqqqqqq', 'Programming', 'qqqqqqqqqqaaaaaaaa', '2017-12-04 20:26:54.765365'), (12, 'aaaaaaaaaaa', 'Programming', 'aaaaaaaaaaaaaaaa', '2017-12-04 19:55:04.143725'), (11, 'eeeeeeeeeeeeee', 'Programming', 'eeeeeeeeeeeeee', '2017-12-04 19:53:15.222451'), (10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-04 20:27:22,423 : INFO : views.py : 46 :             notes_db() ] post action
[2017-12-04 20:27:22,423 : DEBUG : sqlalchemy_statments.py : 55 :           get_max_id() ] (14,)
[2017-12-04 20:27:22,423 : DEBUG : sqlalchemy_statments.py : 85 :               insert() ] Added 1 row to sqlite3, with id 15
[2017-12-04 20:27:22,423 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 20:27:22] "POST /note HTTP/1.1" 200 -
[2017-12-04 20:27:24,004 : INFO : views.py : 40 :             notes_db() ] started note db form
[2017-12-04 20:27:24,004 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(15, 'aaaaaaaaaaaaa', 'Programming', 'yyyyyyyyyyyy', '2017-12-04 20:27:22.423709'), (14, 'vvvvvvvvvv', 'Programming', 'vvvvvvvvvvvvv', '2017-12-04 20:27:14.794627'), (13, 'qqqqqqqqqqqqqqqqq', 'Programming', 'qqqqqqqqqqaaaaaaaa', '2017-12-04 20:26:54.765365'), (12, 'aaaaaaaaaaa', 'Programming', 'aaaaaaaaaaaaaaaa', '2017-12-04 19:55:04.143725'), (11, 'eeeeeeeeeeeeee', 'Programming', 'eeeeeeeeeeeeee', '2017-12-04 19:53:15.222451'), (10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-04 20:27:24,020 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 20:27:24] "GET /note HTTP/1.1" 200 -
[2017-12-04 20:27:28,457 : INFO : views.py : 40 :             notes_db() ] started note db form
[2017-12-04 20:27:28,457 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(15, 'aaaaaaaaaaaaa', 'Programming', 'yyyyyyyyyyyy', '2017-12-04 20:27:22.423709'), (14, 'vvvvvvvvvv', 'Programming', 'vvvvvvvvvvvvv', '2017-12-04 20:27:14.794627'), (13, 'qqqqqqqqqqqqqqqqq', 'Programming', 'qqqqqqqqqqaaaaaaaa', '2017-12-04 20:26:54.765365'), (12, 'aaaaaaaaaaa', 'Programming', 'aaaaaaaaaaaaaaaa', '2017-12-04 19:55:04.143725'), (11, 'eeeeeeeeeeeeee', 'Programming', 'eeeeeeeeeeeeee', '2017-12-04 19:53:15.222451'), (10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-04 20:27:28,457 : INFO : views.py : 46 :             notes_db() ] post action
[2017-12-04 20:27:28,457 : DEBUG : sqlalchemy_statments.py : 106 :               delete() ] Delete 1 row, id 15.
[2017-12-04 20:27:28,473 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 20:27:28] "POST /note HTTP/1.1" 200 -
[2017-12-04 20:27:30,257 : INFO : views.py : 40 :             notes_db() ] started note db form
[2017-12-04 20:27:30,257 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(14, 'vvvvvvvvvv', 'Programming', 'vvvvvvvvvvvvv', '2017-12-04 20:27:14.794627'), (13, 'qqqqqqqqqqqqqqqqq', 'Programming', 'qqqqqqqqqqaaaaaaaa', '2017-12-04 20:26:54.765365'), (12, 'aaaaaaaaaaa', 'Programming', 'aaaaaaaaaaaaaaaa', '2017-12-04 19:55:04.143725'), (11, 'eeeeeeeeeeeeee', 'Programming', 'eeeeeeeeeeeeee', '2017-12-04 19:53:15.222451'), (10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-04 20:27:30,257 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 20:27:30] "GET /note HTTP/1.1" 200 -
[2017-12-04 20:27:38,226 : INFO : views.py : 40 :             notes_db() ] started note db form
[2017-12-04 20:27:38,226 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(14, 'vvvvvvvvvv', 'Programming', 'vvvvvvvvvvvvv', '2017-12-04 20:27:14.794627'), (13, 'qqqqqqqqqqqqqqqqq', 'Programming', 'qqqqqqqqqqaaaaaaaa', '2017-12-04 20:26:54.765365'), (12, 'aaaaaaaaaaa', 'Programming', 'aaaaaaaaaaaaaaaa', '2017-12-04 19:55:04.143725'), (11, 'eeeeeeeeeeeeee', 'Programming', 'eeeeeeeeeeeeee', '2017-12-04 19:53:15.222451'), (10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-04 20:27:38,226 : INFO : views.py : 46 :             notes_db() ] post action
[2017-12-04 20:27:38,226 : DEBUG : sqlalchemy_statments.py : 55 :           get_max_id() ] (14,)
[2017-12-04 20:27:38,226 : DEBUG : sqlalchemy_statments.py : 85 :               insert() ] Added 1 row to sqlite3, with id 15
[2017-12-04 20:27:38,226 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 20:27:38] "POST /note HTTP/1.1" 200 -
[2017-12-04 20:27:39,775 : INFO : views.py : 40 :             notes_db() ] started note db form
[2017-12-04 20:27:39,791 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(15, 'daaaaaaaaaaaa', 'Programming', 'aaaaadd', '2017-12-04 20:27:38.226627'), (14, 'vvvvvvvvvv', 'Programming', 'vvvvvvvvvvvvv', '2017-12-04 20:27:14.794627'), (13, 'qqqqqqqqqqqqqqqqq', 'Programming', 'qqqqqqqqqqaaaaaaaa', '2017-12-04 20:26:54.765365'), (12, 'aaaaaaaaaaa', 'Programming', 'aaaaaaaaaaaaaaaa', '2017-12-04 19:55:04.143725'), (11, 'eeeeeeeeeeeeee', 'Programming', 'eeeeeeeeeeeeee', '2017-12-04 19:53:15.222451'), (10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-04 20:27:39,791 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 20:27:39] "GET /note HTTP/1.1" 200 -
[2017-12-04 20:27:51,257 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_declarative.py', reloading
[2017-12-04 20:27:51,367 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 20:27:51,931 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 20:27:51,931 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 20:27:51,931 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 20:28:44,855 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_statments.py', reloading
[2017-12-04 20:28:44,907 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 20:28:45,618 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 20:28:45,622 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 20:28:45,630 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 20:29:19,453 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_statments.py', reloading
[2017-12-04 20:29:19,491 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 20:29:20,156 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 20:29:20,161 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 20:29:20,170 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 20:29:22,187 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 20:29:22] "GET /note HTTP/1.1" 200 -
[2017-12-04 20:29:25,856 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 20:29:25] "POST /login HTTP/1.1" 302 -
[2017-12-04 20:29:25,871 : INFO : views.py : 40 :             notes_db() ] started note db form
[2017-12-04 20:29:25,871 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(15, 'daaaaaaaaaaaa', 'Programming', 'aaaaadd', '2017-12-04 20:27:38.226627'), (14, 'vvvvvvvvvv', 'Programming', 'vvvvvvvvvvvvv', '2017-12-04 20:27:14.794627'), (13, 'qqqqqqqqqqqqqqqqq', 'Programming', 'qqqqqqqqqqaaaaaaaa', '2017-12-04 20:26:54.765365'), (12, 'aaaaaaaaaaa', 'Programming', 'aaaaaaaaaaaaaaaa', '2017-12-04 19:55:04.143725'), (11, 'eeeeeeeeeeeeee', 'Programming', 'eeeeeeeeeeeeee', '2017-12-04 19:53:15.222451'), (10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-04 20:29:25,887 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 20:29:25] "GET /note HTTP/1.1" 200 -
[2017-12-04 20:29:27,059 : INFO : views.py : 40 :             notes_db() ] started note db form
[2017-12-04 20:29:27,075 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(15, 'daaaaaaaaaaaa', 'Programming', 'aaaaadd', '2017-12-04 20:27:38.226627'), (14, 'vvvvvvvvvv', 'Programming', 'vvvvvvvvvvvvv', '2017-12-04 20:27:14.794627'), (13, 'qqqqqqqqqqqqqqqqq', 'Programming', 'qqqqqqqqqqaaaaaaaa', '2017-12-04 20:26:54.765365'), (12, 'aaaaaaaaaaa', 'Programming', 'aaaaaaaaaaaaaaaa', '2017-12-04 19:55:04.143725'), (11, 'eeeeeeeeeeeeee', 'Programming', 'eeeeeeeeeeeeee', '2017-12-04 19:53:15.222451'), (10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-04 20:29:27,075 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 20:29:27] "GET /note HTTP/1.1" 200 -
[2017-12-04 20:29:28,106 : INFO : views.py : 40 :             notes_db() ] started note db form
[2017-12-04 20:29:28,106 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(15, 'daaaaaaaaaaaa', 'Programming', 'aaaaadd', '2017-12-04 20:27:38.226627'), (14, 'vvvvvvvvvv', 'Programming', 'vvvvvvvvvvvvv', '2017-12-04 20:27:14.794627'), (13, 'qqqqqqqqqqqqqqqqq', 'Programming', 'qqqqqqqqqqaaaaaaaa', '2017-12-04 20:26:54.765365'), (12, 'aaaaaaaaaaa', 'Programming', 'aaaaaaaaaaaaaaaa', '2017-12-04 19:55:04.143725'), (11, 'eeeeeeeeeeeeee', 'Programming', 'eeeeeeeeeeeeee', '2017-12-04 19:53:15.222451'), (10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-04 20:29:28,106 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 20:29:28] "GET /note HTTP/1.1" 200 -
[2017-12-04 20:29:28,872 : INFO : views.py : 40 :             notes_db() ] started note db form
[2017-12-04 20:29:28,887 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(15, 'daaaaaaaaaaaa', 'Programming', 'aaaaadd', '2017-12-04 20:27:38.226627'), (14, 'vvvvvvvvvv', 'Programming', 'vvvvvvvvvvvvv', '2017-12-04 20:27:14.794627'), (13, 'qqqqqqqqqqqqqqqqq', 'Programming', 'qqqqqqqqqqaaaaaaaa', '2017-12-04 20:26:54.765365'), (12, 'aaaaaaaaaaa', 'Programming', 'aaaaaaaaaaaaaaaa', '2017-12-04 19:55:04.143725'), (11, 'eeeeeeeeeeeeee', 'Programming', 'eeeeeeeeeeeeee', '2017-12-04 19:53:15.222451'), (10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-04 20:29:28,887 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 20:29:28] "GET /note HTTP/1.1" 200 -
[2017-12-04 20:29:35,547 : INFO : views.py : 40 :             notes_db() ] started note db form
[2017-12-04 20:29:35,547 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(15, 'daaaaaaaaaaaa', 'Programming', 'aaaaadd', '2017-12-04 20:27:38.226627'), (14, 'vvvvvvvvvv', 'Programming', 'vvvvvvvvvvvvv', '2017-12-04 20:27:14.794627'), (13, 'qqqqqqqqqqqqqqqqq', 'Programming', 'qqqqqqqqqqaaaaaaaa', '2017-12-04 20:26:54.765365'), (12, 'aaaaaaaaaaa', 'Programming', 'aaaaaaaaaaaaaaaa', '2017-12-04 19:55:04.143725'), (11, 'eeeeeeeeeeeeee', 'Programming', 'eeeeeeeeeeeeee', '2017-12-04 19:53:15.222451'), (10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-04 20:29:35,547 : INFO : views.py : 46 :             notes_db() ] post action
[2017-12-04 20:29:35,547 : DEBUG : sqlalchemy_statments.py : 55 :           get_max_id() ] (15,)
[2017-12-04 20:29:35,547 : DEBUG : sqlalchemy_statments.py : 87 :               insert() ] Added 1 row to sqlite3, with id (15,)
[2017-12-04 20:29:35,547 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 20:29:35] "POST /note HTTP/1.1" 200 -
[2017-12-04 20:29:41,097 : INFO : views.py : 40 :             notes_db() ] started note db form
[2017-12-04 20:29:41,112 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(16, 'wwwwwwwwwwww', 'Programming', 'wwwwwwwwww', '2017-12-04 20:29:35.547912'), (15, 'daaaaaaaaaaaa', 'Programming', 'aaaaadd', '2017-12-04 20:27:38.226627'), (14, 'vvvvvvvvvv', 'Programming', 'vvvvvvvvvvvvv', '2017-12-04 20:27:14.794627'), (13, 'qqqqqqqqqqqqqqqqq', 'Programming', 'qqqqqqqqqqaaaaaaaa', '2017-12-04 20:26:54.765365'), (12, 'aaaaaaaaaaa', 'Programming', 'aaaaaaaaaaaaaaaa', '2017-12-04 19:55:04.143725'), (11, 'eeeeeeeeeeeeee', 'Programming', 'eeeeeeeeeeeeee', '2017-12-04 19:53:15.222451'), (10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-04 20:29:41,112 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 20:29:41] "GET /note HTTP/1.1" 200 -
[2017-12-04 20:30:09,897 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_statments.py', reloading
[2017-12-04 20:30:09,919 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 20:30:10,608 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 20:30:10,612 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 20:30:10,622 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 20:30:11,203 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 20:30:11] "GET /note HTTP/1.1" 200 -
[2017-12-04 20:30:14,759 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 20:30:14] "POST /login HTTP/1.1" 302 -
[2017-12-04 20:30:14,775 : INFO : views.py : 40 :             notes_db() ] started note db form
[2017-12-04 20:30:14,775 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(16, 'wwwwwwwwwwww', 'Programming', 'wwwwwwwwww', '2017-12-04 20:29:35.547912'), (15, 'daaaaaaaaaaaa', 'Programming', 'aaaaadd', '2017-12-04 20:27:38.226627'), (14, 'vvvvvvvvvv', 'Programming', 'vvvvvvvvvvvvv', '2017-12-04 20:27:14.794627'), (13, 'qqqqqqqqqqqqqqqqq', 'Programming', 'qqqqqqqqqqaaaaaaaa', '2017-12-04 20:26:54.765365'), (12, 'aaaaaaaaaaa', 'Programming', 'aaaaaaaaaaaaaaaa', '2017-12-04 19:55:04.143725'), (11, 'eeeeeeeeeeeeee', 'Programming', 'eeeeeeeeeeeeee', '2017-12-04 19:53:15.222451'), (10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-04 20:30:14,791 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 20:30:14] "GET /note HTTP/1.1" 200 -
[2017-12-04 20:30:16,588 : INFO : views.py : 40 :             notes_db() ] started note db form
[2017-12-04 20:30:16,588 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(16, 'wwwwwwwwwwww', 'Programming', 'wwwwwwwwww', '2017-12-04 20:29:35.547912'), (15, 'daaaaaaaaaaaa', 'Programming', 'aaaaadd', '2017-12-04 20:27:38.226627'), (14, 'vvvvvvvvvv', 'Programming', 'vvvvvvvvvvvvv', '2017-12-04 20:27:14.794627'), (13, 'qqqqqqqqqqqqqqqqq', 'Programming', 'qqqqqqqqqqaaaaaaaa', '2017-12-04 20:26:54.765365'), (12, 'aaaaaaaaaaa', 'Programming', 'aaaaaaaaaaaaaaaa', '2017-12-04 19:55:04.143725'), (11, 'eeeeeeeeeeeeee', 'Programming', 'eeeeeeeeeeeeee', '2017-12-04 19:53:15.222451'), (10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-04 20:30:16,603 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 20:30:16] "GET /note HTTP/1.1" 200 -
[2017-12-04 20:30:24,198 : INFO : views.py : 40 :             notes_db() ] started note db form
[2017-12-04 20:30:24,198 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(16, 'wwwwwwwwwwww', 'Programming', 'wwwwwwwwww', '2017-12-04 20:29:35.547912'), (15, 'daaaaaaaaaaaa', 'Programming', 'aaaaadd', '2017-12-04 20:27:38.226627'), (14, 'vvvvvvvvvv', 'Programming', 'vvvvvvvvvvvvv', '2017-12-04 20:27:14.794627'), (13, 'qqqqqqqqqqqqqqqqq', 'Programming', 'qqqqqqqqqqaaaaaaaa', '2017-12-04 20:26:54.765365'), (12, 'aaaaaaaaaaa', 'Programming', 'aaaaaaaaaaaaaaaa', '2017-12-04 19:55:04.143725'), (11, 'eeeeeeeeeeeeee', 'Programming', 'eeeeeeeeeeeeee', '2017-12-04 19:53:15.222451'), (10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-04 20:30:24,198 : INFO : views.py : 46 :             notes_db() ] post action
[2017-12-04 20:30:24,198 : DEBUG : sqlalchemy_statments.py : 55 :           get_max_id() ] (17,)
[2017-12-04 20:30:24,198 : DEBUG : sqlalchemy_statments.py : 87 :               insert() ] Added 1 row to sqlite3, with id (17,)
[2017-12-04 20:30:24,213 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 20:30:24] "POST /note HTTP/1.1" 200 -
[2017-12-04 20:30:28,247 : INFO : views.py : 40 :             notes_db() ] started note db form
[2017-12-04 20:30:28,247 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(17, 'wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww', 'Programming', 'zzzzzzzz', '2017-12-04 20:30:24.198348'), (16, 'wwwwwwwwwwww', 'Programming', 'wwwwwwwwww', '2017-12-04 20:29:35.547912'), (15, 'daaaaaaaaaaaa', 'Programming', 'aaaaadd', '2017-12-04 20:27:38.226627'), (14, 'vvvvvvvvvv', 'Programming', 'vvvvvvvvvvvvv', '2017-12-04 20:27:14.794627'), (13, 'qqqqqqqqqqqqqqqqq', 'Programming', 'qqqqqqqqqqaaaaaaaa', '2017-12-04 20:26:54.765365'), (12, 'aaaaaaaaaaa', 'Programming', 'aaaaaaaaaaaaaaaa', '2017-12-04 19:55:04.143725'), (11, 'eeeeeeeeeeeeee', 'Programming', 'eeeeeeeeeeeeee', '2017-12-04 19:53:15.222451'), (10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-04 20:30:28,247 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 20:30:28] "GET /note HTTP/1.1" 200 -
[2017-12-04 20:30:29,841 : INFO : views.py : 40 :             notes_db() ] started note db form
[2017-12-04 20:30:29,841 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(17, 'wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww', 'Programming', 'zzzzzzzz', '2017-12-04 20:30:24.198348'), (16, 'wwwwwwwwwwww', 'Programming', 'wwwwwwwwww', '2017-12-04 20:29:35.547912'), (15, 'daaaaaaaaaaaa', 'Programming', 'aaaaadd', '2017-12-04 20:27:38.226627'), (14, 'vvvvvvvvvv', 'Programming', 'vvvvvvvvvvvvv', '2017-12-04 20:27:14.794627'), (13, 'qqqqqqqqqqqqqqqqq', 'Programming', 'qqqqqqqqqqaaaaaaaa', '2017-12-04 20:26:54.765365'), (12, 'aaaaaaaaaaa', 'Programming', 'aaaaaaaaaaaaaaaa', '2017-12-04 19:55:04.143725'), (11, 'eeeeeeeeeeeeee', 'Programming', 'eeeeeeeeeeeeee', '2017-12-04 19:53:15.222451'), (10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-04 20:30:29,857 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 20:30:29] "GET /note HTTP/1.1" 200 -
[2017-12-04 20:30:34,695 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_statments.py', reloading
[2017-12-04 20:30:34,757 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 20:30:35,350 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 20:30:35,355 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 20:30:35,364 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 20:30:35,612 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 20:30:35] "GET /note HTTP/1.1" 200 -
[2017-12-04 20:30:41,796 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 20:30:41] "POST /login HTTP/1.1" 302 -
[2017-12-04 20:30:41,811 : INFO : views.py : 40 :             notes_db() ] started note db form
[2017-12-04 20:30:41,811 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(17, 'wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww', 'Programming', 'zzzzzzzz', '2017-12-04 20:30:24.198348'), (16, 'wwwwwwwwwwww', 'Programming', 'wwwwwwwwww', '2017-12-04 20:29:35.547912'), (15, 'daaaaaaaaaaaa', 'Programming', 'aaaaadd', '2017-12-04 20:27:38.226627'), (14, 'vvvvvvvvvv', 'Programming', 'vvvvvvvvvvvvv', '2017-12-04 20:27:14.794627'), (13, 'qqqqqqqqqqqqqqqqq', 'Programming', 'qqqqqqqqqqaaaaaaaa', '2017-12-04 20:26:54.765365'), (12, 'aaaaaaaaaaa', 'Programming', 'aaaaaaaaaaaaaaaa', '2017-12-04 19:55:04.143725'), (11, 'eeeeeeeeeeeeee', 'Programming', 'eeeeeeeeeeeeee', '2017-12-04 19:53:15.222451'), (10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-04 20:30:41,827 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 20:30:41] "GET /note HTTP/1.1" 200 -
[2017-12-04 20:30:42,952 : INFO : views.py : 40 :             notes_db() ] started note db form
[2017-12-04 20:30:42,952 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(17, 'wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww', 'Programming', 'zzzzzzzz', '2017-12-04 20:30:24.198348'), (16, 'wwwwwwwwwwww', 'Programming', 'wwwwwwwwww', '2017-12-04 20:29:35.547912'), (15, 'daaaaaaaaaaaa', 'Programming', 'aaaaadd', '2017-12-04 20:27:38.226627'), (14, 'vvvvvvvvvv', 'Programming', 'vvvvvvvvvvvvv', '2017-12-04 20:27:14.794627'), (13, 'qqqqqqqqqqqqqqqqq', 'Programming', 'qqqqqqqqqqaaaaaaaa', '2017-12-04 20:26:54.765365'), (12, 'aaaaaaaaaaa', 'Programming', 'aaaaaaaaaaaaaaaa', '2017-12-04 19:55:04.143725'), (11, 'eeeeeeeeeeeeee', 'Programming', 'eeeeeeeeeeeeee', '2017-12-04 19:53:15.222451'), (10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-04 20:30:42,968 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 20:30:42] "GET /note HTTP/1.1" 200 -
[2017-12-04 20:30:49,219 : INFO : views.py : 40 :             notes_db() ] started note db form
[2017-12-04 20:30:49,219 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(17, 'wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww', 'Programming', 'zzzzzzzz', '2017-12-04 20:30:24.198348'), (16, 'wwwwwwwwwwww', 'Programming', 'wwwwwwwwww', '2017-12-04 20:29:35.547912'), (15, 'daaaaaaaaaaaa', 'Programming', 'aaaaadd', '2017-12-04 20:27:38.226627'), (14, 'vvvvvvvvvv', 'Programming', 'vvvvvvvvvvvvv', '2017-12-04 20:27:14.794627'), (13, 'qqqqqqqqqqqqqqqqq', 'Programming', 'qqqqqqqqqqaaaaaaaa', '2017-12-04 20:26:54.765365'), (12, 'aaaaaaaaaaa', 'Programming', 'aaaaaaaaaaaaaaaa', '2017-12-04 19:55:04.143725'), (11, 'eeeeeeeeeeeeee', 'Programming', 'eeeeeeeeeeeeee', '2017-12-04 19:53:15.222451'), (10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-04 20:30:49,219 : INFO : views.py : 46 :             notes_db() ] post action
[2017-12-04 20:30:49,234 : DEBUG : sqlalchemy_statments.py : 108 :               delete() ] Delete 1 row, id 17.
[2017-12-04 20:30:49,234 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 20:30:49] "POST /note HTTP/1.1" 200 -
[2017-12-04 20:30:53,003 : INFO : views.py : 40 :             notes_db() ] started note db form
[2017-12-04 20:30:53,003 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(16, 'wwwwwwwwwwww', 'Programming', 'wwwwwwwwww', '2017-12-04 20:29:35.547912'), (15, 'daaaaaaaaaaaa', 'Programming', 'aaaaadd', '2017-12-04 20:27:38.226627'), (14, 'vvvvvvvvvv', 'Programming', 'vvvvvvvvvvvvv', '2017-12-04 20:27:14.794627'), (13, 'qqqqqqqqqqqqqqqqq', 'Programming', 'qqqqqqqqqqaaaaaaaa', '2017-12-04 20:26:54.765365'), (12, 'aaaaaaaaaaa', 'Programming', 'aaaaaaaaaaaaaaaa', '2017-12-04 19:55:04.143725'), (11, 'eeeeeeeeeeeeee', 'Programming', 'eeeeeeeeeeeeee', '2017-12-04 19:53:15.222451'), (10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-04 20:30:53,003 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 20:30:53] "GET /note HTTP/1.1" 200 -
[2017-12-04 20:30:58,534 : INFO : views.py : 40 :             notes_db() ] started note db form
[2017-12-04 20:30:58,534 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(16, 'wwwwwwwwwwww', 'Programming', 'wwwwwwwwww', '2017-12-04 20:29:35.547912'), (15, 'daaaaaaaaaaaa', 'Programming', 'aaaaadd', '2017-12-04 20:27:38.226627'), (14, 'vvvvvvvvvv', 'Programming', 'vvvvvvvvvvvvv', '2017-12-04 20:27:14.794627'), (13, 'qqqqqqqqqqqqqqqqq', 'Programming', 'qqqqqqqqqqaaaaaaaa', '2017-12-04 20:26:54.765365'), (12, 'aaaaaaaaaaa', 'Programming', 'aaaaaaaaaaaaaaaa', '2017-12-04 19:55:04.143725'), (11, 'eeeeeeeeeeeeee', 'Programming', 'eeeeeeeeeeeeee', '2017-12-04 19:53:15.222451'), (10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-04 20:30:58,534 : INFO : views.py : 46 :             notes_db() ] post action
[2017-12-04 20:30:58,534 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 20:30:58] "POST /note HTTP/1.1" 200 -
[2017-12-04 20:31:02,582 : INFO : views.py : 40 :             notes_db() ] started note db form
[2017-12-04 20:31:02,582 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(16, 'wwwwwwwwwwww', 'Programming', 'wwwwwwwwww', '2017-12-04 20:29:35.547912'), (15, 'daaaaaaaaaaaa', 'Programming', 'aaaaadd', '2017-12-04 20:27:38.226627'), (14, 'vvvvvvvvvv', 'Programming', 'vvvvvvvvvvvvv', '2017-12-04 20:27:14.794627'), (13, 'qqqqqqqqqqqqqqqqq', 'Programming', 'qqqqqqqqqqaaaaaaaa', '2017-12-04 20:26:54.765365'), (12, 'aaaaaaaaaaa', 'Programming', 'aaaaaaaaaaaaaaaa', '2017-12-04 19:55:04.143725'), (11, 'eeeeeeeeeeeeee', 'Programming', 'eeeeeeeeeeeeee', '2017-12-04 19:53:15.222451'), (10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-04 20:31:02,582 : INFO : views.py : 46 :             notes_db() ] post action
[2017-12-04 20:31:02,582 : DEBUG : sqlalchemy_statments.py : 108 :               delete() ] Delete 1 row, id 16.
[2017-12-04 20:31:02,582 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 20:31:02] "POST /note HTTP/1.1" 200 -
[2017-12-04 20:31:05,393 : INFO : views.py : 40 :             notes_db() ] started note db form
[2017-12-04 20:31:05,393 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(15, 'daaaaaaaaaaaa', 'Programming', 'aaaaadd', '2017-12-04 20:27:38.226627'), (14, 'vvvvvvvvvv', 'Programming', 'vvvvvvvvvvvvv', '2017-12-04 20:27:14.794627'), (13, 'qqqqqqqqqqqqqqqqq', 'Programming', 'qqqqqqqqqqaaaaaaaa', '2017-12-04 20:26:54.765365'), (12, 'aaaaaaaaaaa', 'Programming', 'aaaaaaaaaaaaaaaa', '2017-12-04 19:55:04.143725'), (11, 'eeeeeeeeeeeeee', 'Programming', 'eeeeeeeeeeeeee', '2017-12-04 19:53:15.222451'), (10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-04 20:31:05,393 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 20:31:05] "GET /note HTTP/1.1" 200 -
[2017-12-04 20:31:10,456 : INFO : views.py : 40 :             notes_db() ] started note db form
[2017-12-04 20:31:10,456 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(15, 'daaaaaaaaaaaa', 'Programming', 'aaaaadd', '2017-12-04 20:27:38.226627'), (14, 'vvvvvvvvvv', 'Programming', 'vvvvvvvvvvvvv', '2017-12-04 20:27:14.794627'), (13, 'qqqqqqqqqqqqqqqqq', 'Programming', 'qqqqqqqqqqaaaaaaaa', '2017-12-04 20:26:54.765365'), (12, 'aaaaaaaaaaa', 'Programming', 'aaaaaaaaaaaaaaaa', '2017-12-04 19:55:04.143725'), (11, 'eeeeeeeeeeeeee', 'Programming', 'eeeeeeeeeeeeee', '2017-12-04 19:53:15.222451'), (10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-04 20:31:10,456 : INFO : views.py : 46 :             notes_db() ] post action
[2017-12-04 20:31:10,456 : DEBUG : sqlalchemy_statments.py : 108 :               delete() ] Delete 1 row, id 14.
[2017-12-04 20:31:10,456 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 20:31:10] "POST /note HTTP/1.1" 200 -
[2017-12-04 20:31:12,552 : INFO : views.py : 40 :             notes_db() ] started note db form
[2017-12-04 20:31:12,552 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(15, 'daaaaaaaaaaaa', 'Programming', 'aaaaadd', '2017-12-04 20:27:38.226627'), (13, 'qqqqqqqqqqqqqqqqq', 'Programming', 'qqqqqqqqqqaaaaaaaa', '2017-12-04 20:26:54.765365'), (12, 'aaaaaaaaaaa', 'Programming', 'aaaaaaaaaaaaaaaa', '2017-12-04 19:55:04.143725'), (11, 'eeeeeeeeeeeeee', 'Programming', 'eeeeeeeeeeeeee', '2017-12-04 19:53:15.222451'), (10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-04 20:31:12,552 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 20:31:12] "GET /note HTTP/1.1" 200 -
[2017-12-04 20:31:15,709 : INFO : views.py : 40 :             notes_db() ] started note db form
[2017-12-04 20:31:15,709 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(15, 'daaaaaaaaaaaa', 'Programming', 'aaaaadd', '2017-12-04 20:27:38.226627'), (13, 'qqqqqqqqqqqqqqqqq', 'Programming', 'qqqqqqqqqqaaaaaaaa', '2017-12-04 20:26:54.765365'), (12, 'aaaaaaaaaaa', 'Programming', 'aaaaaaaaaaaaaaaa', '2017-12-04 19:55:04.143725'), (11, 'eeeeeeeeeeeeee', 'Programming', 'eeeeeeeeeeeeee', '2017-12-04 19:53:15.222451'), (10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-04 20:31:15,709 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 20:31:15] "GET /note HTTP/1.1" 200 -
[2017-12-04 20:31:18,037 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 20:31:18] "GET /continue HTTP/1.1" 200 -
[2017-12-04 20:31:19,194 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 20:31:19] "POST /continue HTTP/1.1" 302 -
[2017-12-04 20:31:22,757 : INFO : views.py : 40 :             notes_db() ] started note db form
[2017-12-04 20:31:22,757 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(15, 'daaaaaaaaaaaa', 'Programming', 'aaaaadd', '2017-12-04 20:27:38.226627'), (13, 'qqqqqqqqqqqqqqqqq', 'Programming', 'qqqqqqqqqqaaaaaaaa', '2017-12-04 20:26:54.765365'), (12, 'aaaaaaaaaaa', 'Programming', 'aaaaaaaaaaaaaaaa', '2017-12-04 19:55:04.143725'), (11, 'eeeeeeeeeeeeee', 'Programming', 'eeeeeeeeeeeeee', '2017-12-04 19:53:15.222451'), (10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-04 20:31:22,757 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 20:31:22] "GET /note HTTP/1.1" 200 -
[2017-12-04 20:31:25,366 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 20:31:25] "GET /continue HTTP/1.1" 200 -
[2017-12-04 20:31:26,694 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 20:31:26] "POST /continue HTTP/1.1" 200 -
[2017-12-04 20:31:29,820 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 20:31:29] "POST /continue HTTP/1.1" 302 -
[2017-12-04 20:31:29,851 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 20:31:29] "GET /note HTTP/1.1" 200 -
[2017-12-04 20:31:34,310 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_statments.py', reloading
[2017-12-04 20:31:34,352 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 20:31:34,915 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 20:31:34,915 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 20:31:34,915 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 20:31:38,058 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_statments.py', reloading
[2017-12-04 20:31:38,143 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 20:31:38,739 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 20:31:38,739 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 20:31:38,754 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 20:33:14,111 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_declarative.py', reloading
[2017-12-04 20:33:14,146 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 20:33:14,755 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 20:33:14,758 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 20:33:14,765 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 20:33:24,196 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_declarative.py', reloading
[2017-12-04 20:33:24,262 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 20:33:24,843 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 20:33:24,843 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 20:33:24,843 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 20:33:34,430 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_declarative.py', reloading
[2017-12-04 20:33:34,485 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 20:36:28,374 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 20:36:28,905 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 20:36:28,921 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 20:36:28,921 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 20:36:33,175 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_statments.py', reloading
[2017-12-04 20:36:33,255 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 20:36:33,837 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 20:36:33,837 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 20:36:33,853 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 20:36:38,052 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_statments.py', reloading
[2017-12-04 20:36:38,099 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 20:36:38,685 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 20:36:38,688 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 20:36:38,696 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 20:36:42,942 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_statments.py', reloading
[2017-12-04 20:36:42,993 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 20:36:43,561 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 20:36:43,576 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 20:36:43,576 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 20:37:09,040 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_declarative.py', reloading
[2017-12-04 20:37:09,069 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 20:37:09,697 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 20:37:09,697 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 20:37:09,713 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 20:37:21,363 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_declarative.py', reloading
[2017-12-04 20:37:21,405 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 20:37:22,098 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 20:37:22,098 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 20:37:22,114 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 20:37:25,334 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_declarative.py', reloading
[2017-12-04 20:37:25,377 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 20:37:25,948 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 20:37:25,951 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 20:37:25,958 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 20:37:59,628 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_declarative.py', reloading
[2017-12-04 20:37:59,664 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 20:38:00,376 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 20:38:00,379 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 20:38:00,387 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 20:38:06,659 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_declarative.py', reloading
[2017-12-04 20:38:06,690 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 20:38:07,362 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 20:38:07,365 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 20:38:07,372 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 20:38:08,421 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_declarative.py', reloading
[2017-12-04 20:38:08,483 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 20:38:09,080 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 20:38:09,083 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 20:38:09,091 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 20:38:20,604 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_declarative.py', reloading
[2017-12-04 20:38:20,635 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 20:38:21,306 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 20:38:21,309 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 20:38:21,317 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 20:38:56,288 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_declarative.py', reloading
[2017-12-04 20:38:56,321 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 20:38:57,027 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 20:38:57,034 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 20:38:57,049 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 20:39:03,371 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_declarative.py', reloading
[2017-12-04 20:39:03,411 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 20:39:04,067 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 20:39:04,083 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 20:39:04,083 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 20:39:09,238 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_declarative.py', reloading
[2017-12-04 20:39:09,304 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 20:39:09,871 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 20:39:09,871 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 20:39:09,871 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 20:39:35,241 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_declarative.py', reloading
[2017-12-04 20:39:35,265 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 20:39:35,933 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 20:39:35,933 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 20:39:35,949 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 20:40:09,726 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_declarative.py', reloading
[2017-12-04 20:40:09,741 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 20:40:10,414 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 20:40:10,417 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 20:40:10,426 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 20:40:20,969 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_declarative.py', reloading
[2017-12-04 20:40:21,010 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 20:40:21,845 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 20:40:21,849 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 20:40:21,858 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 20:40:50,382 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_declarative.py', reloading
[2017-12-04 20:40:50,417 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 20:40:51,054 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 20:40:51,054 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 20:40:51,069 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 20:41:37,637 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_declarative.py', reloading
[2017-12-04 20:41:37,684 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 20:41:38,257 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 20:41:38,260 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 20:41:38,267 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 20:41:45,644 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_declarative.py', reloading
[2017-12-04 20:41:45,727 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 20:41:46,288 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 20:41:46,288 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 20:41:46,303 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 20:42:05,303 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_declarative.py', reloading
[2017-12-04 20:42:05,368 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 20:42:05,940 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 20:42:05,940 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 20:42:05,963 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 20:42:30,349 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_declarative.py', reloading
[2017-12-04 20:42:30,429 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 20:42:31,006 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 20:42:31,006 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 20:42:31,006 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 20:42:39,481 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_declarative.py', reloading
[2017-12-04 20:42:39,556 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 20:42:40,115 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 20:42:40,115 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 20:42:40,115 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 20:43:47,708 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_declarative.py', reloading
[2017-12-04 20:43:47,734 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 20:43:48,397 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 20:43:48,401 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 20:43:48,410 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 20:43:50,510 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_declarative.py', reloading
[2017-12-04 20:43:50,550 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 20:43:51,096 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 20:43:51,114 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 20:43:51,114 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 20:44:06,918 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_statments.py', reloading
[2017-12-04 20:44:06,997 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 20:44:07,563 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 20:44:07,563 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 20:44:07,578 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 20:44:13,046 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 20:44:13] "POST /login HTTP/1.1" 302 -
[2017-12-04 20:44:13,046 : INFO : views.py : 40 :             notes_db() ] started note db form
[2017-12-04 20:44:13,046 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(15, 'daaaaaaaaaaaa', 'Programming', 'aaaaadd', '2017-12-04 20:27:38.226627'), (13, 'qqqqqqqqqqqqqqqqq', 'Programming', 'qqqqqqqqqqaaaaaaaa', '2017-12-04 20:26:54.765365'), (12, 'aaaaaaaaaaa', 'Programming', 'aaaaaaaaaaaaaaaa', '2017-12-04 19:55:04.143725'), (11, 'eeeeeeeeeeeeee', 'Programming', 'eeeeeeeeeeeeee', '2017-12-04 19:53:15.222451'), (10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-04 20:44:13,062 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 20:44:13] "GET /note HTTP/1.1" 200 -
[2017-12-04 20:44:14,531 : INFO : views.py : 40 :             notes_db() ] started note db form
[2017-12-04 20:44:14,531 : DEBUG : sqlalchemy_statments.py : 35 :              get_all() ] [(15, 'daaaaaaaaaaaa', 'Programming', 'aaaaadd', '2017-12-04 20:27:38.226627'), (13, 'qqqqqqqqqqqqqqqqq', 'Programming', 'qqqqqqqqqqaaaaaaaa', '2017-12-04 20:26:54.765365'), (12, 'aaaaaaaaaaa', 'Programming', 'aaaaaaaaaaaaaaaa', '2017-12-04 19:55:04.143725'), (11, 'eeeeeeeeeeeeee', 'Programming', 'eeeeeeeeeeeeee', '2017-12-04 19:53:15.222451'), (10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-04 20:44:14,531 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 20:44:14] "GET /note HTTP/1.1" 200 -
[2017-12-04 21:04:59,071 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_declarative.py', reloading
[2017-12-04 21:04:59,136 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 21:04:59,697 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 21:04:59,697 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 21:04:59,713 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 21:05:21,952 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_statments.py', reloading
[2017-12-04 21:05:22,018 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 21:05:22,611 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 21:05:22,611 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 21:05:22,611 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 21:05:44,782 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_statments.py', reloading
[2017-12-04 21:05:44,816 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 21:05:45,522 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 21:05:45,526 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 21:05:45,535 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 21:05:55,029 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_statments.py', reloading
[2017-12-04 21:05:55,061 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 21:05:55,757 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 21:05:55,761 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 21:05:55,774 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 21:06:24,186 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_statments.py', reloading
[2017-12-04 21:06:24,218 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 21:06:24,877 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 21:06:24,881 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 21:06:24,891 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 21:06:57,673 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_statments.py', reloading
[2017-12-04 21:06:57,704 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 21:06:58,452 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 21:06:58,455 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 21:06:58,464 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 21:07:00,512 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_statments.py', reloading
[2017-12-04 21:07:00,559 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 21:07:01,145 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 21:07:01,148 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 21:07:01,157 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 21:08:14,033 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_home\\views.py', reloading
[2017-12-04 21:08:14,064 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 21:11:00,194 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 21:11:00,735 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 21:11:00,735 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 21:11:00,735 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 21:11:09,311 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:11:09] "GET / HTTP/1.1" 200 -
[2017-12-04 21:11:17,406 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:11:17] "GET /continue HTTP/1.1" 200 -
[2017-12-04 21:11:32,376 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:11:32] "POST /continue HTTP/1.1" 200 -
[2017-12-04 21:11:33,751 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:11:33] "POST /continue HTTP/1.1" 302 -
[2017-12-04 21:11:33,767 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:11:33] "GET /note HTTP/1.1" 200 -
[2017-12-04 21:11:34,876 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:11:34] "GET / HTTP/1.1" 200 -
[2017-12-04 21:11:55,825 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_home\\views.py', reloading
[2017-12-04 21:11:55,856 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 21:11:56,497 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 21:11:56,500 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 21:11:56,509 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 21:12:00,916 : DEBUG : sqlalchemy_statments.py : 56 :         get_all_user() ] [(6, 'espen', 'master'), (5, 'espen', 'master'), (4, 'espen', 'master'), (3, 'espen', 'master'), (2, 'espen', 'master'), (1, 'espen', 'master')]
[2017-12-04 21:12:00,916 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:12:00] "GET /account HTTP/1.1" 200 -
[2017-12-04 21:12:09,242 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_home\\views.py', reloading
[2017-12-04 21:12:09,306 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 21:12:09,861 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 21:12:09,864 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 21:12:09,866 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 21:13:26,970 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_home\\views.py', reloading
[2017-12-04 21:13:26,993 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 21:13:27,569 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 21:13:27,586 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 21:13:27,593 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 21:13:29,925 : DEBUG : sqlalchemy_statments.py : 56 :         get_all_user() ] [(6, 'espen', 'master'), (5, 'espen', 'master'), (4, 'espen', 'master'), (3, 'espen', 'master'), (2, 'espen', 'master'), (1, 'espen', 'master')]
[2017-12-04 21:13:29,925 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:13:29] "GET /account HTTP/1.1" 200 -
[2017-12-04 21:13:29,956 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:13:29] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-04 21:13:29,956 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:13:29] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-04 21:13:29,956 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:13:29] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-04 21:13:29,956 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:13:29] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-04 21:14:12,956 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_declarative.py', reloading
[2017-12-04 21:14:12,991 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 21:14:13,656 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 21:14:13,661 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 21:14:13,669 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 21:14:20,038 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_declarative.py', reloading
[2017-12-04 21:14:20,071 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 21:14:20,802 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 21:14:20,807 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 21:14:20,817 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 21:14:23,017 : DEBUG : sqlalchemy_statments.py : 56 :         get_all_user() ] [(6, 'espen', 'master'), (5, 'espen', 'master'), (4, 'espen', 'master'), (3, 'espen', 'master'), (2, 'espen', 'master'), (1, 'espen', 'master')]
[2017-12-04 21:14:23,032 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:14:23] "GET /account HTTP/1.1" 200 -
[2017-12-04 21:14:23,048 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:14:23] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-04 21:14:23,048 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:14:23] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-04 21:14:23,064 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:14:23] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-04 21:14:23,064 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:14:23] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-04 21:14:24,474 : DEBUG : sqlalchemy_statments.py : 56 :         get_all_user() ] [(6, 'espen', 'master'), (5, 'espen', 'master'), (4, 'espen', 'master'), (3, 'espen', 'master'), (2, 'espen', 'master'), (1, 'espen', 'master')]
[2017-12-04 21:14:24,474 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:14:24] "GET /account HTTP/1.1" 200 -
[2017-12-04 21:14:24,489 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:14:24] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-04 21:14:24,489 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:14:24] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-04 21:14:24,489 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:14:24] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-04 21:14:24,505 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:14:24] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-04 21:14:30,396 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_declarative.py', reloading
[2017-12-04 21:14:30,435 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 21:14:31,135 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 21:14:31,139 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 21:14:31,148 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 21:14:40,184 : DEBUG : sqlalchemy_statments.py : 56 :         get_all_user() ] [(1, 'espen', 'master')]
[2017-12-04 21:14:40,200 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:14:40] "GET /account HTTP/1.1" 200 -
[2017-12-04 21:14:40,215 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:14:40] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-04 21:14:40,215 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:14:40] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-04 21:14:40,231 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:14:40] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-04 21:14:40,231 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:14:40] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-04 21:14:45,858 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_declarative.py', reloading
[2017-12-04 21:14:45,890 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 21:14:46,531 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 21:14:46,534 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 21:14:46,544 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 21:14:47,624 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_declarative.py', reloading
[2017-12-04 21:14:47,673 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 21:14:48,241 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 21:14:48,245 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 21:14:48,252 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 21:14:49,369 : DEBUG : sqlalchemy_statments.py : 56 :         get_all_user() ] [(1, 'espen', 'master')]
[2017-12-04 21:14:49,376 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:14:49] "GET /account HTTP/1.1" 200 -
[2017-12-04 21:14:49,392 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:14:49] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-04 21:14:49,407 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:14:49] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-04 21:14:49,407 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:14:49] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-04 21:14:49,407 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:14:49] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-04 21:15:05,147 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:15:05] "GET /note HTTP/1.1" 200 -
[2017-12-04 21:15:15,273 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:15:15] "GET / HTTP/1.1" 200 -
[2017-12-04 21:15:18,258 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:15:18] "GET /continue HTTP/1.1" 200 -
[2017-12-04 21:15:22,336 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:15:22] "POST /continue HTTP/1.1" 302 -
[2017-12-04 21:15:22,352 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:15:22] "GET /note HTTP/1.1" 200 -
[2017-12-04 21:15:44,984 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:15:44] "GET /note HTTP/1.1" 200 -
[2017-12-04 21:15:45,001 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:15:45] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-04 21:15:45,004 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:15:45] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-04 21:15:45,007 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:15:45] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-04 21:15:45,009 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:15:45] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-04 21:15:47,623 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:15:47] "GET /note HTTP/1.1" 200 -
[2017-12-04 21:15:47,639 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:15:47] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-04 21:15:47,639 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:15:47] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-04 21:15:47,639 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:15:47] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-04 21:15:47,639 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:15:47] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-04 21:15:54,671 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:15:54] "GET / HTTP/1.1" 200 -
[2017-12-04 21:16:06,322 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:16:06] "GET / HTTP/1.1" 200 -
[2017-12-04 21:16:06,338 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:16:06] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-04 21:16:06,338 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:16:06] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-04 21:16:06,353 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:16:06] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-04 21:16:06,353 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:16:06] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-04 21:16:14,395 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:16:14] "GET /about HTTP/1.1" 200 -
[2017-12-04 21:16:16,364 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:16:16] "GET /note HTTP/1.1" 200 -
[2017-12-04 21:16:20,630 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:16:20] "POST /login HTTP/1.1" 302 -
[2017-12-04 21:16:20,645 : INFO : views.py : 40 :             notes_db() ] started note db form
[2017-12-04 21:16:20,645 : DEBUG : sqlalchemy_statments.py : 38 :              get_all() ] [(15, 'daaaaaaaaaaaa', 'Programming', 'aaaaadd', '2017-12-04 20:27:38.226627'), (13, 'qqqqqqqqqqqqqqqqq', 'Programming', 'qqqqqqqqqqaaaaaaaa', '2017-12-04 20:26:54.765365'), (12, 'aaaaaaaaaaa', 'Programming', 'aaaaaaaaaaaaaaaa', '2017-12-04 19:55:04.143725'), (11, 'eeeeeeeeeeeeee', 'Programming', 'eeeeeeeeeeeeee', '2017-12-04 19:53:15.222451'), (10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-04 21:16:20,661 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:16:20] "GET /note HTTP/1.1" 200 -
[2017-12-04 21:16:23,567 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:16:23] "GET /continue HTTP/1.1" 200 -
[2017-12-04 21:16:24,943 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:16:24] "POST /continue HTTP/1.1" 302 -
[2017-12-04 21:16:27,708 : INFO : views.py : 40 :             notes_db() ] started note db form
[2017-12-04 21:16:27,708 : DEBUG : sqlalchemy_statments.py : 38 :              get_all() ] [(15, 'daaaaaaaaaaaa', 'Programming', 'aaaaadd', '2017-12-04 20:27:38.226627'), (13, 'qqqqqqqqqqqqqqqqq', 'Programming', 'qqqqqqqqqqaaaaaaaa', '2017-12-04 20:26:54.765365'), (12, 'aaaaaaaaaaa', 'Programming', 'aaaaaaaaaaaaaaaa', '2017-12-04 19:55:04.143725'), (11, 'eeeeeeeeeeeeee', 'Programming', 'eeeeeeeeeeeeee', '2017-12-04 19:53:15.222451'), (10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-04 21:16:27,724 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:16:27] "GET /note HTTP/1.1" 200 -
[2017-12-04 21:16:32,631 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:16:32] "GET /continue HTTP/1.1" 200 -
[2017-12-04 21:16:51,009 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:16:51] "GET /continue HTTP/1.1" 200 -
[2017-12-04 21:16:51,025 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:16:51] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-04 21:16:51,028 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:16:51] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-04 21:16:51,034 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:16:51] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-04 21:16:51,038 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:16:51] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-04 21:16:58,068 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:16:58] "GET /continue HTTP/1.1" 200 -
[2017-12-04 21:17:00,630 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:17:00] "POST /continue HTTP/1.1" 200 -
[2017-12-04 21:17:02,787 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:17:02] "POST /continue HTTP/1.1" 200 -
[2017-12-04 21:17:03,881 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:17:03] "POST /login HTTP/1.1" 200 -
[2017-12-04 21:17:07,756 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:17:07] "POST /login HTTP/1.1" 302 -
[2017-12-04 21:17:07,756 : INFO : views.py : 40 :             notes_db() ] started note db form
[2017-12-04 21:17:07,756 : DEBUG : sqlalchemy_statments.py : 38 :              get_all() ] [(15, 'daaaaaaaaaaaa', 'Programming', 'aaaaadd', '2017-12-04 20:27:38.226627'), (13, 'qqqqqqqqqqqqqqqqq', 'Programming', 'qqqqqqqqqqaaaaaaaa', '2017-12-04 20:26:54.765365'), (12, 'aaaaaaaaaaa', 'Programming', 'aaaaaaaaaaaaaaaa', '2017-12-04 19:55:04.143725'), (11, 'eeeeeeeeeeeeee', 'Programming', 'eeeeeeeeeeeeee', '2017-12-04 19:53:15.222451'), (10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-04 21:17:07,756 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:17:07] "GET /note HTTP/1.1" 200 -
[2017-12-04 21:17:11,491 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:17:11] "GET / HTTP/1.1" 200 -
[2017-12-04 21:17:25,430 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:17:25] "GET /py HTTP/1.1" 200 -
[2017-12-04 21:17:25,477 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:17:25] "GET /static/img/import_cls/app_form_mod.jpg HTTP/1.1" 304 -
[2017-12-04 21:17:25,477 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:17:25] "GET /static/img/import_cls/add_init.jpg HTTP/1.1" 304 -
[2017-12-04 21:17:32,509 : INFO : views.py : 40 :             notes_db() ] started note db form
[2017-12-04 21:17:32,509 : DEBUG : sqlalchemy_statments.py : 38 :              get_all() ] [(15, 'daaaaaaaaaaaa', 'Programming', 'aaaaadd', '2017-12-04 20:27:38.226627'), (13, 'qqqqqqqqqqqqqqqqq', 'Programming', 'qqqqqqqqqqaaaaaaaa', '2017-12-04 20:26:54.765365'), (12, 'aaaaaaaaaaa', 'Programming', 'aaaaaaaaaaaaaaaa', '2017-12-04 19:55:04.143725'), (11, 'eeeeeeeeeeeeee', 'Programming', 'eeeeeeeeeeeeee', '2017-12-04 19:53:15.222451'), (10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-04 21:17:32,524 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:17:32] "GET /note HTTP/1.1" 200 -
[2017-12-04 21:17:35,681 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:17:35] "GET /continue HTTP/1.1" 200 -
[2017-12-04 21:17:36,775 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:17:36] "POST /continue HTTP/1.1" 200 -
[2017-12-04 21:17:39,634 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:17:39] "POST /continue HTTP/1.1" 302 -
[2017-12-04 21:17:39,666 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:17:39] "GET /note HTTP/1.1" 200 -
[2017-12-04 21:17:50,823 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:17:50] "GET / HTTP/1.1" 200 -
[2017-12-04 21:18:24,858 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:18:24] "GET / HTTP/1.1" 200 -
[2017-12-04 21:18:24,873 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:18:24] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-04 21:18:24,889 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:18:24] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-04 21:18:24,889 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:18:24] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-04 21:18:24,889 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:18:24] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-04 21:18:44,719 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:18:44] "GET /note HTTP/1.1" 200 -
[2017-12-04 21:18:56,174 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:18:56] "POST /login HTTP/1.1" 302 -
[2017-12-04 21:18:56,174 : INFO : views.py : 40 :             notes_db() ] started note db form
[2017-12-04 21:18:56,174 : DEBUG : sqlalchemy_statments.py : 38 :              get_all() ] [(15, 'daaaaaaaaaaaa', 'Programming', 'aaaaadd', '2017-12-04 20:27:38.226627'), (13, 'qqqqqqqqqqqqqqqqq', 'Programming', 'qqqqqqqqqqaaaaaaaa', '2017-12-04 20:26:54.765365'), (12, 'aaaaaaaaaaa', 'Programming', 'aaaaaaaaaaaaaaaa', '2017-12-04 19:55:04.143725'), (11, 'eeeeeeeeeeeeee', 'Programming', 'eeeeeeeeeeeeee', '2017-12-04 19:53:15.222451'), (10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-04 21:18:56,174 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:18:56] "GET /note HTTP/1.1" 200 -
[2017-12-04 21:18:58,690 : INFO : views.py : 40 :             notes_db() ] started note db form
[2017-12-04 21:18:58,690 : DEBUG : sqlalchemy_statments.py : 38 :              get_all() ] [(15, 'daaaaaaaaaaaa', 'Programming', 'aaaaadd', '2017-12-04 20:27:38.226627'), (13, 'qqqqqqqqqqqqqqqqq', 'Programming', 'qqqqqqqqqqaaaaaaaa', '2017-12-04 20:26:54.765365'), (12, 'aaaaaaaaaaa', 'Programming', 'aaaaaaaaaaaaaaaa', '2017-12-04 19:55:04.143725'), (11, 'eeeeeeeeeeeeee', 'Programming', 'eeeeeeeeeeeeee', '2017-12-04 19:53:15.222451'), (10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-04 21:18:58,690 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:18:58] "GET /note HTTP/1.1" 200 -
[2017-12-04 21:18:59,190 : INFO : views.py : 40 :             notes_db() ] started note db form
[2017-12-04 21:18:59,190 : DEBUG : sqlalchemy_statments.py : 38 :              get_all() ] [(15, 'daaaaaaaaaaaa', 'Programming', 'aaaaadd', '2017-12-04 20:27:38.226627'), (13, 'qqqqqqqqqqqqqqqqq', 'Programming', 'qqqqqqqqqqaaaaaaaa', '2017-12-04 20:26:54.765365'), (12, 'aaaaaaaaaaa', 'Programming', 'aaaaaaaaaaaaaaaa', '2017-12-04 19:55:04.143725'), (11, 'eeeeeeeeeeeeee', 'Programming', 'eeeeeeeeeeeeee', '2017-12-04 19:53:15.222451'), (10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-04 21:18:59,205 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:18:59] "GET /note HTTP/1.1" 200 -
[2017-12-04 21:18:59,361 : INFO : views.py : 40 :             notes_db() ] started note db form
[2017-12-04 21:18:59,361 : DEBUG : sqlalchemy_statments.py : 38 :              get_all() ] [(15, 'daaaaaaaaaaaa', 'Programming', 'aaaaadd', '2017-12-04 20:27:38.226627'), (13, 'qqqqqqqqqqqqqqqqq', 'Programming', 'qqqqqqqqqqaaaaaaaa', '2017-12-04 20:26:54.765365'), (12, 'aaaaaaaaaaa', 'Programming', 'aaaaaaaaaaaaaaaa', '2017-12-04 19:55:04.143725'), (11, 'eeeeeeeeeeeeee', 'Programming', 'eeeeeeeeeeeeee', '2017-12-04 19:53:15.222451'), (10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-04 21:18:59,361 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:18:59] "GET /note HTTP/1.1" 200 -
[2017-12-04 21:18:59,549 : INFO : views.py : 40 :             notes_db() ] started note db form
[2017-12-04 21:18:59,549 : DEBUG : sqlalchemy_statments.py : 38 :              get_all() ] [(15, 'daaaaaaaaaaaa', 'Programming', 'aaaaadd', '2017-12-04 20:27:38.226627'), (13, 'qqqqqqqqqqqqqqqqq', 'Programming', 'qqqqqqqqqqaaaaaaaa', '2017-12-04 20:26:54.765365'), (12, 'aaaaaaaaaaa', 'Programming', 'aaaaaaaaaaaaaaaa', '2017-12-04 19:55:04.143725'), (11, 'eeeeeeeeeeeeee', 'Programming', 'eeeeeeeeeeeeee', '2017-12-04 19:53:15.222451'), (10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-04 21:18:59,549 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:18:59] "GET /note HTTP/1.1" 200 -
[2017-12-04 21:18:59,705 : INFO : views.py : 40 :             notes_db() ] started note db form
[2017-12-04 21:18:59,705 : DEBUG : sqlalchemy_statments.py : 38 :              get_all() ] [(15, 'daaaaaaaaaaaa', 'Programming', 'aaaaadd', '2017-12-04 20:27:38.226627'), (13, 'qqqqqqqqqqqqqqqqq', 'Programming', 'qqqqqqqqqqaaaaaaaa', '2017-12-04 20:26:54.765365'), (12, 'aaaaaaaaaaa', 'Programming', 'aaaaaaaaaaaaaaaa', '2017-12-04 19:55:04.143725'), (11, 'eeeeeeeeeeeeee', 'Programming', 'eeeeeeeeeeeeee', '2017-12-04 19:53:15.222451'), (10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-04 21:18:59,705 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:18:59] "GET /note HTTP/1.1" 200 -
[2017-12-04 21:18:59,862 : INFO : views.py : 40 :             notes_db() ] started note db form
[2017-12-04 21:18:59,862 : DEBUG : sqlalchemy_statments.py : 38 :              get_all() ] [(15, 'daaaaaaaaaaaa', 'Programming', 'aaaaadd', '2017-12-04 20:27:38.226627'), (13, 'qqqqqqqqqqqqqqqqq', 'Programming', 'qqqqqqqqqqaaaaaaaa', '2017-12-04 20:26:54.765365'), (12, 'aaaaaaaaaaa', 'Programming', 'aaaaaaaaaaaaaaaa', '2017-12-04 19:55:04.143725'), (11, 'eeeeeeeeeeeeee', 'Programming', 'eeeeeeeeeeeeee', '2017-12-04 19:53:15.222451'), (10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-04 21:18:59,877 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:18:59] "GET /note HTTP/1.1" 200 -
[2017-12-04 21:19:00,033 : INFO : views.py : 40 :             notes_db() ] started note db form
[2017-12-04 21:19:00,033 : DEBUG : sqlalchemy_statments.py : 38 :              get_all() ] [(15, 'daaaaaaaaaaaa', 'Programming', 'aaaaadd', '2017-12-04 20:27:38.226627'), (13, 'qqqqqqqqqqqqqqqqq', 'Programming', 'qqqqqqqqqqaaaaaaaa', '2017-12-04 20:26:54.765365'), (12, 'aaaaaaaaaaa', 'Programming', 'aaaaaaaaaaaaaaaa', '2017-12-04 19:55:04.143725'), (11, 'eeeeeeeeeeeeee', 'Programming', 'eeeeeeeeeeeeee', '2017-12-04 19:53:15.222451'), (10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-04 21:19:00,033 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:19:00] "GET /note HTTP/1.1" 200 -
[2017-12-04 21:19:00,205 : INFO : views.py : 40 :             notes_db() ] started note db form
[2017-12-04 21:19:00,205 : DEBUG : sqlalchemy_statments.py : 38 :              get_all() ] [(15, 'daaaaaaaaaaaa', 'Programming', 'aaaaadd', '2017-12-04 20:27:38.226627'), (13, 'qqqqqqqqqqqqqqqqq', 'Programming', 'qqqqqqqqqqaaaaaaaa', '2017-12-04 20:26:54.765365'), (12, 'aaaaaaaaaaa', 'Programming', 'aaaaaaaaaaaaaaaa', '2017-12-04 19:55:04.143725'), (11, 'eeeeeeeeeeeeee', 'Programming', 'eeeeeeeeeeeeee', '2017-12-04 19:53:15.222451'), (10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-04 21:19:00,205 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:19:00] "GET /note HTTP/1.1" 200 -
[2017-12-04 21:19:00,362 : INFO : views.py : 40 :             notes_db() ] started note db form
[2017-12-04 21:19:00,362 : DEBUG : sqlalchemy_statments.py : 38 :              get_all() ] [(15, 'daaaaaaaaaaaa', 'Programming', 'aaaaadd', '2017-12-04 20:27:38.226627'), (13, 'qqqqqqqqqqqqqqqqq', 'Programming', 'qqqqqqqqqqaaaaaaaa', '2017-12-04 20:26:54.765365'), (12, 'aaaaaaaaaaa', 'Programming', 'aaaaaaaaaaaaaaaa', '2017-12-04 19:55:04.143725'), (11, 'eeeeeeeeeeeeee', 'Programming', 'eeeeeeeeeeeeee', '2017-12-04 19:53:15.222451'), (10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-04 21:19:00,377 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:19:00] "GET /note HTTP/1.1" 200 -
[2017-12-04 21:19:00,549 : INFO : views.py : 40 :             notes_db() ] started note db form
[2017-12-04 21:19:00,549 : DEBUG : sqlalchemy_statments.py : 38 :              get_all() ] [(15, 'daaaaaaaaaaaa', 'Programming', 'aaaaadd', '2017-12-04 20:27:38.226627'), (13, 'qqqqqqqqqqqqqqqqq', 'Programming', 'qqqqqqqqqqaaaaaaaa', '2017-12-04 20:26:54.765365'), (12, 'aaaaaaaaaaa', 'Programming', 'aaaaaaaaaaaaaaaa', '2017-12-04 19:55:04.143725'), (11, 'eeeeeeeeeeeeee', 'Programming', 'eeeeeeeeeeeeee', '2017-12-04 19:53:15.222451'), (10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-04 21:19:00,549 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:19:00] "GET /note HTTP/1.1" 200 -
[2017-12-04 21:19:00,737 : INFO : views.py : 40 :             notes_db() ] started note db form
[2017-12-04 21:19:00,737 : DEBUG : sqlalchemy_statments.py : 38 :              get_all() ] [(15, 'daaaaaaaaaaaa', 'Programming', 'aaaaadd', '2017-12-04 20:27:38.226627'), (13, 'qqqqqqqqqqqqqqqqq', 'Programming', 'qqqqqqqqqqaaaaaaaa', '2017-12-04 20:26:54.765365'), (12, 'aaaaaaaaaaa', 'Programming', 'aaaaaaaaaaaaaaaa', '2017-12-04 19:55:04.143725'), (11, 'eeeeeeeeeeeeee', 'Programming', 'eeeeeeeeeeeeee', '2017-12-04 19:53:15.222451'), (10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-04 21:19:00,737 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:19:00] "GET /note HTTP/1.1" 200 -
[2017-12-04 21:19:00,908 : INFO : views.py : 40 :             notes_db() ] started note db form
[2017-12-04 21:19:00,908 : DEBUG : sqlalchemy_statments.py : 38 :              get_all() ] [(15, 'daaaaaaaaaaaa', 'Programming', 'aaaaadd', '2017-12-04 20:27:38.226627'), (13, 'qqqqqqqqqqqqqqqqq', 'Programming', 'qqqqqqqqqqaaaaaaaa', '2017-12-04 20:26:54.765365'), (12, 'aaaaaaaaaaa', 'Programming', 'aaaaaaaaaaaaaaaa', '2017-12-04 19:55:04.143725'), (11, 'eeeeeeeeeeeeee', 'Programming', 'eeeeeeeeeeeeee', '2017-12-04 19:53:15.222451'), (10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-04 21:19:00,908 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:19:00] "GET /note HTTP/1.1" 200 -
[2017-12-04 21:19:03,784 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:19:03] "GET /continue HTTP/1.1" 200 -
[2017-12-04 21:19:08,222 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:19:08] "POST /continue HTTP/1.1" 200 -
[2017-12-04 21:19:11,925 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:19:11] "POST /continue HTTP/1.1" 302 -
[2017-12-04 21:19:11,941 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:19:11] "GET /note HTTP/1.1" 200 -
[2017-12-04 21:19:14,191 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:19:14] "GET / HTTP/1.1" 200 -
[2017-12-04 21:19:48,292 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:19:48] "GET /note HTTP/1.1" 200 -
[2017-12-04 21:20:48,982 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:20:48] "GET /note HTTP/1.1" 200 -
[2017-12-04 21:20:48,998 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:20:48] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-04 21:20:48,998 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:20:48] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-04 21:20:48,998 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:20:48] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-04 21:20:48,998 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:20:48] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-04 21:20:56,043 : DEBUG : sqlalchemy_statments.py : 56 :         get_all_user() ] [(1, 'espen', 'master')]
[2017-12-04 21:20:56,043 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:20:56] "GET /account HTTP/1.1" 200 -
[2017-12-04 21:22:17,166 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:22:17] "GET /note HTTP/1.1" 200 -
[2017-12-04 21:22:17,174 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:22:17] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-04 21:22:17,174 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:22:17] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-04 21:22:17,189 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:22:17] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-04 21:22:17,189 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:22:17] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-04 21:22:24,221 : DEBUG : sqlalchemy_statments.py : 56 :         get_all_user() ] [(1, 'espen', 'master')]
[2017-12-04 21:22:24,299 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:22:24] "GET /account HTTP/1.1" 500 -
[2017-12-04 21:22:24,331 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:22:24] "GET /account?__debugger__=yes&cmd=resource&f=style.css HTTP/1.1" 200 -
[2017-12-04 21:22:24,331 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:22:24] "GET /account?__debugger__=yes&cmd=resource&f=jquery.js HTTP/1.1" 200 -
[2017-12-04 21:22:24,346 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:22:24] "GET /account?__debugger__=yes&cmd=resource&f=debugger.js HTTP/1.1" 200 -
[2017-12-04 21:22:24,378 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:22:24] "GET /account?__debugger__=yes&cmd=resource&f=console.png HTTP/1.1" 200 -
[2017-12-04 21:22:24,456 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:22:24] "GET /account?__debugger__=yes&cmd=resource&f=ubuntu.ttf HTTP/1.1" 200 -
[2017-12-04 21:22:24,471 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:22:24] "GET /account?__debugger__=yes&cmd=resource&f=console.png HTTP/1.1" 200 -
[2017-12-04 21:22:47,627 : DEBUG : sqlalchemy_statments.py : 56 :         get_all_user() ] [(1, 'espen', 'master')]
[2017-12-04 21:22:47,630 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:22:47] "GET /account HTTP/1.1" 200 -
[2017-12-04 21:22:47,649 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:22:47] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-04 21:22:47,652 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:22:47] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-04 21:22:47,658 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:22:47] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-04 21:22:47,661 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:22:47] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-04 21:22:54,678 : DEBUG : sqlalchemy_statments.py : 56 :         get_all_user() ] [(1, 'espen', 'master')]
[2017-12-04 21:22:54,678 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:22:54] "GET /account HTTP/1.1" 200 -
[2017-12-04 21:23:04,314 : DEBUG : sqlalchemy_statments.py : 56 :         get_all_user() ] [(1, 'espen', 'master')]
[2017-12-04 21:23:04,316 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:23:04] "GET /account HTTP/1.1" 200 -
[2017-12-04 21:23:04,320 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:23:04] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-04 21:23:04,335 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:23:04] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-04 21:23:04,335 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:23:04] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-04 21:23:04,335 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:23:04] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-04 21:23:24,089 : DEBUG : sqlalchemy_statments.py : 56 :         get_all_user() ] [(1, 'espen', 'master')]
[2017-12-04 21:23:24,095 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:23:24] "GET /account HTTP/1.1" 200 -
[2017-12-04 21:23:24,112 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:23:24] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-04 21:23:24,115 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:23:24] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-04 21:23:24,118 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:23:24] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-04 21:23:24,122 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:23:24] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-04 21:23:58,939 : DEBUG : sqlalchemy_statments.py : 56 :         get_all_user() ] [(1, 'espen', 'master')]
[2017-12-04 21:23:58,955 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:23:58] "GET /account HTTP/1.1" 200 -
[2017-12-04 21:23:58,955 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:23:58] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-04 21:23:58,970 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:23:58] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-04 21:23:58,970 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:23:58] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-04 21:23:58,970 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:23:58] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-04 21:26:42,773 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_home\\views.py', reloading
[2017-12-04 21:26:42,811 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 21:26:43,415 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 21:26:43,418 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 21:26:43,426 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 21:27:28,977 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_home\\views.py', reloading
[2017-12-04 21:27:29,029 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 21:27:29,667 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 21:27:29,667 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 21:27:29,683 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 21:29:22,752 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_home\\views.py', reloading
[2017-12-04 21:29:22,787 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 21:30:33,266 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 21:30:33,797 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 21:30:33,813 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 21:30:33,813 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 21:30:44,090 : DEBUG : sqlalchemy_statments.py : 56 :         get_all_user() ] [(1, 'espen', 'master')]
[2017-12-04 21:30:44,137 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:30:44] "GET /account HTTP/1.1" 500 -
[2017-12-04 21:30:44,168 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:30:44] "GET /account?__debugger__=yes&cmd=resource&f=style.css HTTP/1.1" 200 -
[2017-12-04 21:30:44,168 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:30:44] "GET /account?__debugger__=yes&cmd=resource&f=jquery.js HTTP/1.1" 200 -
[2017-12-04 21:30:44,168 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:30:44] "GET /account?__debugger__=yes&cmd=resource&f=debugger.js HTTP/1.1" 200 -
[2017-12-04 21:30:44,199 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:30:44] "GET /account?__debugger__=yes&cmd=resource&f=console.png HTTP/1.1" 200 -
[2017-12-04 21:30:44,231 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:30:44] "GET /account?__debugger__=yes&cmd=resource&f=ubuntu.ttf HTTP/1.1" 200 -
[2017-12-04 21:30:44,262 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:30:44] "GET /account?__debugger__=yes&cmd=resource&f=console.png HTTP/1.1" 200 -
[2017-12-04 21:31:25,872 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 21:31:26,450 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 21:31:26,450 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 21:31:26,450 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 21:31:35,295 : DEBUG : sqlalchemy_statments.py : 56 :         get_all_user() ] [(1, 'espen', 'master')]
[2017-12-04 21:31:35,342 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:31:35] "GET /account HTTP/1.1" 500 -
[2017-12-04 21:31:35,373 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:31:35] "GET /account?__debugger__=yes&cmd=resource&f=style.css HTTP/1.1" 200 -
[2017-12-04 21:31:35,373 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:31:35] "GET /account?__debugger__=yes&cmd=resource&f=jquery.js HTTP/1.1" 200 -
[2017-12-04 21:31:35,373 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:31:35] "GET /account?__debugger__=yes&cmd=resource&f=debugger.js HTTP/1.1" 200 -
[2017-12-04 21:31:35,404 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:31:35] "GET /account?__debugger__=yes&cmd=resource&f=console.png HTTP/1.1" 200 -
[2017-12-04 21:31:35,467 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:31:35] "GET /account?__debugger__=yes&cmd=resource&f=console.png HTTP/1.1" 200 -
[2017-12-04 21:32:15,210 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_home\\views.py', reloading
[2017-12-04 21:32:15,236 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 21:35:56,244 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 21:35:56,791 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 21:35:56,791 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 21:35:56,791 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 21:36:00,639 : DEBUG : sqlalchemy_statments.py : 56 :         get_all_user() ] [(1, 'espen', 'master')]
[2017-12-04 21:36:00,655 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:36:00] "GET /account HTTP/1.1" 200 -
[2017-12-04 21:36:00,670 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:36:00] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-04 21:36:00,670 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:36:00] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-04 21:36:00,686 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:36:00] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-04 21:36:00,686 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:36:00] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-04 21:36:03,060 : DEBUG : sqlalchemy_statments.py : 56 :         get_all_user() ] [(1, 'espen', 'master')]
[2017-12-04 21:36:03,060 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:36:03] "POST /account HTTP/1.1" 200 -
[2017-12-04 21:36:05,529 : DEBUG : sqlalchemy_statments.py : 56 :         get_all_user() ] [(1, 'espen', 'master')]
[2017-12-04 21:36:05,529 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:36:05] "POST /account HTTP/1.1" 200 -
[2017-12-04 21:36:16,010 : DEBUG : sqlalchemy_statments.py : 56 :         get_all_user() ] [(1, 'espen', 'master')]
[2017-12-04 21:36:16,010 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:36:16] "POST /account HTTP/1.1" 200 -
[2017-12-04 21:36:17,151 : DEBUG : sqlalchemy_statments.py : 56 :         get_all_user() ] [(1, 'espen', 'master')]
[2017-12-04 21:36:17,151 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:36:17] "POST /account HTTP/1.1" 200 -
[2017-12-04 21:36:17,682 : DEBUG : sqlalchemy_statments.py : 56 :         get_all_user() ] [(1, 'espen', 'master')]
[2017-12-04 21:36:17,682 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:36:17] "POST /account HTTP/1.1" 200 -
[2017-12-04 21:36:17,854 : DEBUG : sqlalchemy_statments.py : 56 :         get_all_user() ] [(1, 'espen', 'master')]
[2017-12-04 21:36:17,870 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:36:17] "POST /account HTTP/1.1" 200 -
[2017-12-04 21:36:18,026 : DEBUG : sqlalchemy_statments.py : 56 :         get_all_user() ] [(1, 'espen', 'master')]
[2017-12-04 21:36:18,026 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:36:18] "POST /account HTTP/1.1" 200 -
[2017-12-04 21:36:18,229 : DEBUG : sqlalchemy_statments.py : 56 :         get_all_user() ] [(1, 'espen', 'master')]
[2017-12-04 21:36:18,229 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:36:18] "POST /account HTTP/1.1" 200 -
[2017-12-04 21:36:18,417 : DEBUG : sqlalchemy_statments.py : 56 :         get_all_user() ] [(1, 'espen', 'master')]
[2017-12-04 21:36:18,417 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:36:18] "POST /account HTTP/1.1" 200 -
[2017-12-04 21:36:18,588 : DEBUG : sqlalchemy_statments.py : 56 :         get_all_user() ] [(1, 'espen', 'master')]
[2017-12-04 21:36:18,588 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:36:18] "POST /account HTTP/1.1" 200 -
[2017-12-04 21:36:18,776 : DEBUG : sqlalchemy_statments.py : 56 :         get_all_user() ] [(1, 'espen', 'master')]
[2017-12-04 21:36:18,792 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:36:18] "POST /account HTTP/1.1" 200 -
[2017-12-04 21:36:18,979 : DEBUG : sqlalchemy_statments.py : 56 :         get_all_user() ] [(1, 'espen', 'master')]
[2017-12-04 21:36:18,979 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:36:18] "POST /account HTTP/1.1" 200 -
[2017-12-04 21:36:31,636 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_home\\views.py', reloading
[2017-12-04 21:36:31,679 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 21:36:32,352 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 21:36:32,357 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 21:36:32,366 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 21:36:52,422 : DEBUG : sqlalchemy_statments.py : 56 :         get_all_user() ] [(1, 'espen', 'master')]
[2017-12-04 21:36:52,435 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:36:52] "POST /account HTTP/1.1" 200 -
[2017-12-04 21:37:16,798 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_home\\views.py', reloading
[2017-12-04 21:37:16,835 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 21:37:17,522 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 21:37:17,525 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 21:37:17,533 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 21:37:28,012 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_home\\views.py', reloading
[2017-12-04 21:37:28,043 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 21:37:28,713 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 21:37:28,729 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 21:37:28,737 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 21:37:38,297 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_home\\views.py', reloading
[2017-12-04 21:37:38,383 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 21:37:39,021 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 21:37:39,024 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 21:37:39,032 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 21:37:47,441 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_home\\views.py', reloading
[2017-12-04 21:37:47,476 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 21:37:48,224 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 21:37:48,227 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 21:37:48,235 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 21:38:01,437 : DEBUG : sqlalchemy_statments.py : 56 :         get_all_user() ] [(1, 'espen', 'master')]
[2017-12-04 21:38:01,453 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:38:01] "POST /account HTTP/1.1" 200 -
[2017-12-04 21:38:01,468 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:38:01] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-04 21:38:01,468 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:38:01] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-04 21:38:01,484 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:38:01] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-04 21:38:01,484 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:38:01] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-04 21:38:03,938 : DEBUG : sqlalchemy_statments.py : 56 :         get_all_user() ] [(1, 'espen', 'master')]
[2017-12-04 21:38:03,938 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:38:03] "POST /account HTTP/1.1" 200 -
[2017-12-04 21:38:27,649 : DEBUG : sqlalchemy_statments.py : 56 :         get_all_user() ] [(1, 'espen', 'master')]
[2017-12-04 21:38:27,649 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:38:27] "POST /account HTTP/1.1" 200 -
[2017-12-04 21:39:11,807 : DEBUG : sqlalchemy_statments.py : 56 :         get_all_user() ] [(1, 'espen', 'master')]
[2017-12-04 21:39:11,823 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:39:11] "POST /account HTTP/1.1" 200 -
[2017-12-04 21:39:11,838 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:39:11] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-04 21:39:11,838 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:39:11] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-04 21:39:11,854 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:39:11] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-04 21:39:11,854 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:39:11] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-04 21:39:19,995 : DEBUG : sqlalchemy_statments.py : 56 :         get_all_user() ] [(1, 'espen', 'master')]
[2017-12-04 21:39:19,995 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:39:19] "POST /account HTTP/1.1" 200 -
[2017-12-04 21:39:22,417 : DEBUG : sqlalchemy_statments.py : 56 :         get_all_user() ] [(1, 'espen', 'master')]
[2017-12-04 21:39:22,417 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:39:22] "POST /account HTTP/1.1" 200 -
[2017-12-04 21:39:30,822 : DEBUG : sqlalchemy_statments.py : 56 :         get_all_user() ] [(1, 'espen', 'master')]
[2017-12-04 21:39:30,824 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:39:30] "POST /account HTTP/1.1" 200 -
[2017-12-04 21:39:49,706 : DEBUG : sqlalchemy_statments.py : 56 :         get_all_user() ] [(1, 'espen', 'master')]
[2017-12-04 21:39:49,706 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:39:49] "POST /account HTTP/1.1" 200 -
[2017-12-04 21:39:49,738 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:39:49] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-04 21:39:49,738 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:39:49] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-04 21:39:49,753 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:39:49] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-04 21:39:49,753 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:39:49] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-04 21:39:53,472 : DEBUG : sqlalchemy_statments.py : 56 :         get_all_user() ] [(1, 'espen', 'master')]
[2017-12-04 21:39:53,472 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:39:53] "POST /account HTTP/1.1" 200 -
[2017-12-04 21:40:20,371 : DEBUG : sqlalchemy_statments.py : 56 :         get_all_user() ] [(1, 'espen', 'master')]
[2017-12-04 21:40:20,387 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:40:20] "POST /account HTTP/1.1" 200 -
[2017-12-04 21:40:20,402 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:40:20] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-04 21:40:20,402 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:40:20] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-04 21:40:20,418 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:40:20] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-04 21:40:20,418 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:40:20] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-04 21:40:21,684 : DEBUG : sqlalchemy_statments.py : 56 :         get_all_user() ] [(1, 'espen', 'master')]
[2017-12-04 21:40:21,684 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:40:21] "POST /account HTTP/1.1" 200 -
[2017-12-04 21:40:36,930 : DEBUG : sqlalchemy_statments.py : 56 :         get_all_user() ] [(1, 'espen', 'master')]
[2017-12-04 21:40:36,946 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:40:36] "POST /account HTTP/1.1" 200 -
[2017-12-04 21:40:36,962 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:40:36] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-04 21:40:36,962 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:40:36] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-04 21:40:36,977 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:40:36] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-04 21:40:36,977 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:40:36] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-04 21:40:38,384 : DEBUG : sqlalchemy_statments.py : 56 :         get_all_user() ] [(1, 'espen', 'master')]
[2017-12-04 21:40:38,384 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:40:38] "POST /account HTTP/1.1" 200 -
[2017-12-04 21:40:41,931 : DEBUG : sqlalchemy_statments.py : 56 :         get_all_user() ] [(1, 'espen', 'master')]
[2017-12-04 21:40:41,931 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:40:41] "POST /account HTTP/1.1" 200 -
[2017-12-04 21:41:55,784 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_home\\views.py', reloading
[2017-12-04 21:41:55,831 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 21:41:56,435 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 21:41:56,438 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 21:41:56,445 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 21:41:59,050 : DEBUG : sqlalchemy_statments.py : 56 :         get_all_user() ] [(1, 'espen', 'master')]
[2017-12-04 21:41:59,066 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:41:59] "POST /account HTTP/1.1" 400 -
[2017-12-04 21:43:31,918 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\__init__.py', reloading
[2017-12-04 21:43:31,951 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 21:43:32,743 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 21:43:32,766 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 21:43:32,774 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 21:43:41,957 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:43:41] "GET / HTTP/1.1" 200 -
[2017-12-04 21:43:44,087 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:43:44] "GET /note HTTP/1.1" 200 -
[2017-12-04 21:43:45,831 : DEBUG : sqlalchemy_statments.py : 56 :         get_all_user() ] [(1, 'espen', 'master')]
[2017-12-04 21:43:45,838 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:43:45] "GET /account HTTP/1.1" 200 -
[2017-12-04 21:43:48,990 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:43:48] "POST / HTTP/1.1" 405 -
[2017-12-04 21:43:57,878 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:43:57] "POST / HTTP/1.1" 405 -
[2017-12-04 21:44:32,392 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\__init__.py', reloading
[2017-12-04 21:44:32,434 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 21:44:33,147 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 21:44:33,150 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 21:44:33,161 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 21:45:06,845 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:45:06] "GET / HTTP/1.1" 200 -
[2017-12-04 21:45:09,492 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:45:09] "GET /note HTTP/1.1" 200 -
[2017-12-04 21:45:11,363 : DEBUG : sqlalchemy_statments.py : 56 :         get_all_user() ] [(1, 'espen', 'master')]
[2017-12-04 21:45:11,378 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:45:11] "GET /account HTTP/1.1" 200 -
[2017-12-04 21:45:13,880 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:45:13] "POST / HTTP/1.1" 200 -
[2017-12-04 21:45:22,334 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:45:22] "GET /note HTTP/1.1" 200 -
[2017-12-04 21:46:18,214 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_home\\views.py', reloading
[2017-12-04 21:46:18,245 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 21:46:18,802 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 21:46:18,802 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 21:46:18,802 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 21:46:30,400 : DEBUG : sqlalchemy_statments.py : 56 :         get_all_user() ] [(1, 'espen', 'master')]
[2017-12-04 21:46:30,463 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:46:30] "GET /account HTTP/1.1" 200 -
[2017-12-04 21:46:32,197 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:46:32] "POST / HTTP/1.1" 200 -
[2017-12-04 21:47:28,932 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_home\\views.py', reloading
[2017-12-04 21:47:29,016 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 21:47:29,604 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 21:47:29,607 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 21:47:29,615 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 21:47:55,764 : DEBUG : sqlalchemy_statments.py : 56 :         get_all_user() ] [(1, 'espen', 'master')]
[2017-12-04 21:47:55,780 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:47:55] "GET /account HTTP/1.1" 200 -
[2017-12-04 21:47:55,796 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:47:55] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-04 21:47:55,796 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:47:55] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-04 21:47:55,796 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:47:55] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-04 21:47:55,796 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:47:55] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-04 21:47:57,236 : DEBUG : sqlalchemy_statments.py : 56 :         get_all_user() ] [(1, 'espen', 'master')]
[2017-12-04 21:47:57,236 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:47:57] "POST /account HTTP/1.1" 200 -
[2017-12-04 21:48:00,721 : DEBUG : sqlalchemy_statments.py : 56 :         get_all_user() ] [(1, 'espen', 'master')]
[2017-12-04 21:48:00,721 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:48:00] "POST /account HTTP/1.1" 200 -
[2017-12-04 21:48:21,082 : DEBUG : sqlalchemy_statments.py : 56 :         get_all_user() ] [(1, 'espen', 'master')]
[2017-12-04 21:48:21,082 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:48:21] "POST /account HTTP/1.1" 200 -
[2017-12-04 21:48:21,113 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:48:21] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-04 21:48:21,113 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:48:21] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-04 21:48:21,113 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:48:21] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-04 21:48:21,113 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:48:21] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-04 21:48:22,848 : DEBUG : sqlalchemy_statments.py : 56 :         get_all_user() ] [(1, 'espen', 'master')]
[2017-12-04 21:48:22,848 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:48:22] "POST /account HTTP/1.1" 200 -
[2017-12-04 21:48:26,395 : DEBUG : sqlalchemy_statments.py : 56 :         get_all_user() ] [(1, 'espen', 'master')]
[2017-12-04 21:48:26,395 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:48:26] "POST /account HTTP/1.1" 200 -
[2017-12-04 21:48:27,583 : DEBUG : sqlalchemy_statments.py : 56 :         get_all_user() ] [(1, 'espen', 'master')]
[2017-12-04 21:48:27,583 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:48:27] "POST /account HTTP/1.1" 200 -
[2017-12-04 21:49:12,271 : DEBUG : sqlalchemy_statments.py : 56 :         get_all_user() ] [(1, 'espen', 'master')]
[2017-12-04 21:49:12,271 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:49:12] "POST /account HTTP/1.1" 200 -
[2017-12-04 21:49:12,302 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:49:12] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-04 21:49:12,302 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:49:12] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-04 21:49:12,302 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:49:12] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-04 21:49:12,302 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:49:12] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-04 21:49:33,498 : DEBUG : sqlalchemy_statments.py : 56 :         get_all_user() ] [(1, 'espen', 'master')]
[2017-12-04 21:49:33,514 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:49:33] "POST /account HTTP/1.1" 200 -
[2017-12-04 21:49:33,545 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:49:33] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-04 21:49:33,545 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:49:33] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-04 21:49:33,545 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:49:33] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-04 21:49:33,545 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:49:33] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-04 21:49:44,309 : DEBUG : sqlalchemy_statments.py : 56 :         get_all_user() ] [(1, 'espen', 'master')]
[2017-12-04 21:49:44,309 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:49:44] "POST /account HTTP/1.1" 200 -
[2017-12-04 21:49:44,340 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:49:44] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-04 21:49:44,340 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:49:44] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-04 21:49:44,340 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:49:44] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-04 21:49:44,340 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:49:44] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-04 21:50:12,849 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_home\\accountform.py', reloading
[2017-12-04 21:50:12,880 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 21:50:13,510 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 21:50:13,510 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 21:50:13,526 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 21:50:15,616 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_home\\accountform.py', reloading
[2017-12-04 21:50:15,692 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 21:50:16,270 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 21:50:16,273 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 21:50:16,280 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 21:50:17,106 : DEBUG : sqlalchemy_statments.py : 56 :         get_all_user() ] [(1, 'espen', 'master')]
[2017-12-04 21:50:17,125 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:50:17] "POST /account HTTP/1.1" 200 -
[2017-12-04 21:50:20,856 : DEBUG : sqlalchemy_statments.py : 56 :         get_all_user() ] [(1, 'espen', 'master')]
[2017-12-04 21:50:20,856 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:50:20] "POST /account HTTP/1.1" 200 -
[2017-12-04 21:50:25,653 : DEBUG : sqlalchemy_statments.py : 56 :         get_all_user() ] [(1, 'espen', 'master')]
[2017-12-04 21:50:25,653 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:50:25] "POST /account HTTP/1.1" 200 -
[2017-12-04 21:50:35,217 : DEBUG : sqlalchemy_statments.py : 56 :         get_all_user() ] [(1, 'espen', 'master')]
[2017-12-04 21:50:35,232 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:50:35] "POST /account HTTP/1.1" 200 -
[2017-12-04 21:50:38,861 : DEBUG : sqlalchemy_statments.py : 56 :         get_all_user() ] [(1, 'espen', 'master')]
[2017-12-04 21:50:38,862 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:50:38] "POST /account HTTP/1.1" 200 -
[2017-12-04 21:50:42,587 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_home\\accountform.py', reloading
[2017-12-04 21:50:42,618 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 21:50:43,231 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 21:50:43,247 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 21:50:43,247 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 21:51:08,467 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_home\\views.py', reloading
[2017-12-04 21:51:08,522 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 21:51:09,196 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 21:51:09,196 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 21:51:09,196 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 21:51:15,567 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_home\\views.py', reloading
[2017-12-04 21:51:15,602 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 21:51:16,273 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 21:51:16,277 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 21:51:16,286 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 21:51:18,359 : DEBUG : sqlalchemy_statments.py : 56 :         get_all_user() ] [(1, 'espen', 'master')]
[2017-12-04 21:51:18,374 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:51:18] "POST /account HTTP/1.1" 200 -
[2017-12-04 21:51:18,390 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:51:18] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-04 21:51:18,390 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:51:18] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-04 21:51:18,390 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:51:18] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-04 21:51:18,405 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:51:18] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-04 21:51:22,690 : DEBUG : sqlalchemy_statments.py : 56 :         get_all_user() ] [(1, 'espen', 'master')]
[2017-12-04 21:51:22,690 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:51:22] "POST /account HTTP/1.1" 200 -
[2017-12-04 21:51:34,150 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_home\\views.py', reloading
[2017-12-04 21:51:34,183 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 21:51:34,857 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 21:51:34,861 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 21:51:34,869 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 21:51:48,475 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_home\\views.py', reloading
[2017-12-04 21:51:48,503 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 21:51:49,169 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 21:51:49,173 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 21:51:49,182 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 21:51:52,171 : DEBUG : sqlalchemy_statments.py : 56 :         get_all_user() ] [(1, 'espen', 'master')]
[2017-12-04 21:51:52,187 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:51:52] "POST /account HTTP/1.1" 200 -
[2017-12-04 21:51:52,202 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:51:52] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-04 21:51:52,218 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:51:52] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-04 21:51:52,218 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:51:52] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-04 21:51:52,218 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:51:52] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-04 21:51:53,187 : DEBUG : sqlalchemy_statments.py : 56 :         get_all_user() ] [(1, 'espen', 'master')]
[2017-12-04 21:51:53,187 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:51:53] "POST /account HTTP/1.1" 200 -
[2017-12-04 21:51:57,437 : DEBUG : sqlalchemy_statments.py : 56 :         get_all_user() ] [(1, 'espen', 'master')]
[2017-12-04 21:51:57,437 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:51:57] "POST /account HTTP/1.1" 200 -
[2017-12-04 21:52:00,617 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_home\\views.py', reloading
[2017-12-04 21:52:00,685 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 21:52:01,264 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 21:52:01,264 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 21:52:01,264 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 21:53:00,071 : DEBUG : sqlalchemy_statments.py : 56 :         get_all_user() ] [(1, 'espen', 'master')]
[2017-12-04 21:53:00,087 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:53:00] "POST /account HTTP/1.1" 200 -
[2017-12-04 21:53:00,118 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:53:00] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-04 21:53:00,118 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:53:00] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-04 21:53:00,118 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:53:00] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-04 21:53:00,118 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:53:00] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-04 21:53:19,868 : DEBUG : sqlalchemy_statments.py : 56 :         get_all_user() ] [(1, 'espen', 'master')]
[2017-12-04 21:53:19,868 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:53:19] "POST /account HTTP/1.1" 200 -
[2017-12-04 21:53:19,899 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:53:19] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-04 21:53:19,899 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:53:19] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-04 21:53:19,899 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:53:19] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-04 21:53:19,899 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:53:19] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-04 21:54:07,246 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_home\\accountform.py', reloading
[2017-12-04 21:54:07,288 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 21:54:07,842 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 21:54:07,842 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 21:54:07,858 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 21:54:14,230 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_home\\accountform.py', reloading
[2017-12-04 21:54:14,277 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 21:54:14,841 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 21:54:14,841 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 21:54:14,841 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 21:54:16,936 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_home\\accountform.py', reloading
[2017-12-04 21:54:16,968 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 21:54:17,517 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 21:54:17,517 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 21:54:17,532 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 21:54:45,956 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_home\\views.py', reloading
[2017-12-04 21:54:45,989 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 21:54:46,615 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 21:54:46,615 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 21:54:46,631 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 21:55:35,591 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_home\\views.py', reloading
[2017-12-04 21:55:35,656 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 21:55:36,219 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 21:55:36,219 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 21:55:36,219 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 21:56:28,135 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_home\\views.py', reloading
[2017-12-04 21:56:28,180 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 21:56:28,850 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 21:56:28,850 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 21:56:28,865 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 21:56:44,731 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_home\\views.py', reloading
[2017-12-04 21:56:44,776 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 21:57:24,641 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 21:57:25,172 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 21:57:25,187 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 21:57:25,187 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 21:57:33,864 : DEBUG : sqlalchemy_statments.py : 56 :         get_all_user() ] [(1, 'espen', 'master')]
[2017-12-04 21:57:33,926 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:57:33] "GET /account HTTP/1.1" 200 -
[2017-12-04 21:57:35,630 : DEBUG : sqlalchemy_statments.py : 56 :         get_all_user() ] [(1, 'espen', 'master')]
[2017-12-04 21:57:35,645 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:57:35] "POST /account HTTP/1.1" 200 -
[2017-12-04 21:57:45,834 : DEBUG : sqlalchemy_statments.py : 56 :         get_all_user() ] [(1, 'espen', 'master')]
[2017-12-04 21:57:45,834 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:57:45] "POST /account HTTP/1.1" 200 -
[2017-12-04 21:57:58,956 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_home\\views.py', reloading
[2017-12-04 21:57:58,991 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 21:57:59,655 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 21:57:59,658 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 21:57:59,667 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 21:58:00,150 : DEBUG : sqlalchemy_statments.py : 56 :         get_all_user() ] [(1, 'espen', 'master')]
[2017-12-04 21:58:00,175 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:58:00] "POST /account HTTP/1.1" 200 -
[2017-12-04 21:58:20,398 : DEBUG : sqlalchemy_statments.py : 56 :         get_all_user() ] [(1, 'espen', 'master')]
[2017-12-04 21:58:20,398 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:58:20] "POST /account HTTP/1.1" 200 -
[2017-12-04 21:58:26,195 : DEBUG : sqlalchemy_statments.py : 56 :         get_all_user() ] [(1, 'espen', 'master')]
[2017-12-04 21:58:26,195 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:58:26] "POST /account HTTP/1.1" 200 -
[2017-12-04 21:58:33,649 : DEBUG : sqlalchemy_statments.py : 56 :         get_all_user() ] [(1, 'espen', 'master')]
[2017-12-04 21:58:33,649 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:58:33] "POST /account HTTP/1.1" 200 -
[2017-12-04 21:59:37,516 : DEBUG : sqlalchemy_statments.py : 56 :         get_all_user() ] [(1, 'espen', 'master')]
[2017-12-04 21:59:37,516 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 21:59:37] "POST /account HTTP/1.1" 200 -
[2017-12-04 21:59:40,411 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_home\\views.py', reloading
[2017-12-04 21:59:40,476 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 21:59:41,037 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 21:59:41,037 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 21:59:41,037 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 22:00:14,974 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_home\\accountform.py', reloading
[2017-12-04 22:00:15,021 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 22:00:15,571 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 22:00:15,586 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 22:00:15,586 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 22:00:19,792 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_home\\accountform.py', reloading
[2017-12-04 22:00:19,830 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 22:00:20,482 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 22:00:20,486 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 22:00:20,495 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 22:00:21,536 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_home\\accountform.py', reloading
[2017-12-04 22:00:21,613 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 22:00:22,258 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 22:00:22,261 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 22:00:22,269 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 22:00:26,465 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_home\\views.py', reloading
[2017-12-04 22:00:26,511 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 22:00:27,084 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 22:00:27,089 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 22:00:27,103 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 22:00:31,327 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_home\\views.py', reloading
[2017-12-04 22:00:31,435 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 22:00:31,991 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 22:00:31,991 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 22:00:32,007 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 22:00:34,112 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_home\\views.py', reloading
[2017-12-04 22:00:34,176 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 22:00:34,707 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 22:00:34,723 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 22:00:34,723 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 22:00:38,962 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_home\\views.py', reloading
[2017-12-04 22:00:38,998 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 22:00:39,553 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 22:00:39,556 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 22:00:39,563 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 22:01:01,669 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_home\\views.py', reloading
[2017-12-04 22:01:01,757 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 22:01:02,305 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 22:01:02,321 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 22:01:02,321 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 22:03:49,302 : DEBUG : sqlalchemy_statments.py : 56 :         get_all_user() ] [(1, 'espen', 'master')]
[2017-12-04 22:03:49,333 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 22:03:49] "POST /account HTTP/1.1" 200 -
[2017-12-04 22:03:49,349 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 22:03:49] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-04 22:03:49,349 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 22:03:49] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-04 22:03:49,349 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 22:03:49] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-04 22:03:49,349 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 22:03:49] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-04 22:04:11,876 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_home\\views.py', reloading
[2017-12-04 22:04:11,923 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 22:04:12,486 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 22:04:12,486 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 22:04:12,502 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 22:04:24,969 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_home\\accountform.py', reloading
[2017-12-04 22:04:25,065 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 22:04:25,651 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 22:04:25,651 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 22:04:25,667 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 22:06:10,840 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_home\\accountform.py', reloading
[2017-12-04 22:06:10,965 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 22:06:11,619 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 22:06:11,622 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 22:06:11,630 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 22:06:37,973 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_home\\accountform.py', reloading
[2017-12-04 22:06:38,007 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 22:06:38,592 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 22:06:38,595 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 22:06:38,604 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 22:06:46,079 : DEBUG : sqlalchemy_statments.py : 56 :         get_all_user() ] [(1, 'espen', 'master')]
[2017-12-04 22:06:46,095 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 22:06:46] "POST /account HTTP/1.1" 200 -
[2017-12-04 22:06:46,126 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 22:06:46] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-04 22:06:46,126 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 22:06:46] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-04 22:06:46,126 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 22:06:46] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-04 22:06:46,126 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 22:06:46] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-04 22:06:58,143 : DEBUG : sqlalchemy_statments.py : 56 :         get_all_user() ] [(1, 'espen', 'master')]
[2017-12-04 22:06:58,143 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 22:06:58] "POST /account HTTP/1.1" 200 -
[2017-12-04 22:07:09,863 : DEBUG : sqlalchemy_statments.py : 56 :         get_all_user() ] [(1, 'espen', 'master')]
[2017-12-04 22:07:09,863 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 22:07:09] "POST /account HTTP/1.1" 200 -
[2017-12-04 22:07:23,333 : DEBUG : sqlalchemy_statments.py : 56 :         get_all_user() ] [(1, 'espen', 'master')]
[2017-12-04 22:07:23,333 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 22:07:23] "POST /account HTTP/1.1" 200 -
[2017-12-04 22:07:24,896 : DEBUG : sqlalchemy_statments.py : 56 :         get_all_user() ] [(1, 'espen', 'master')]
[2017-12-04 22:07:24,896 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 22:07:24] "POST /account HTTP/1.1" 200 -
[2017-12-04 22:07:25,677 : DEBUG : sqlalchemy_statments.py : 56 :         get_all_user() ] [(1, 'espen', 'master')]
[2017-12-04 22:07:25,677 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 22:07:25] "POST /account HTTP/1.1" 200 -
[2017-12-04 22:07:25,912 : DEBUG : sqlalchemy_statments.py : 56 :         get_all_user() ] [(1, 'espen', 'master')]
[2017-12-04 22:07:25,912 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 22:07:25] "POST /account HTTP/1.1" 200 -
[2017-12-04 22:07:32,272 : DEBUG : sqlalchemy_statments.py : 56 :         get_all_user() ] [(1, 'espen', 'master')]
[2017-12-04 22:07:32,272 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 22:07:32] "POST /account HTTP/1.1" 200 -
[2017-12-04 22:07:39,985 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_home\\accountform.py', reloading
[2017-12-04 22:07:40,000 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 22:07:40,665 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 22:07:40,669 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 22:07:40,679 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 22:07:41,599 : DEBUG : sqlalchemy_statments.py : 56 :         get_all_user() ] [(1, 'espen', 'master')]
[2017-12-04 22:07:41,616 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 22:07:41] "POST /account HTTP/1.1" 200 -
[2017-12-04 22:07:47,384 : DEBUG : sqlalchemy_statments.py : 56 :         get_all_user() ] [(1, 'espen', 'master')]
[2017-12-04 22:07:47,384 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 22:07:47] "POST /account HTTP/1.1" 200 -
[2017-12-04 22:07:54,371 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_home\\accountform.py', reloading
[2017-12-04 22:07:54,403 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 22:07:55,044 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 22:07:55,047 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 22:07:55,055 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 22:08:05,754 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 22:08:05] "GET / HTTP/1.1" 200 -
[2017-12-04 22:08:05,770 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 22:08:05] "GET /note HTTP/1.1" 200 -
[2017-12-04 22:08:07,551 : DEBUG : sqlalchemy_statments.py : 56 :         get_all_user() ] [(1, 'espen', 'master')]
[2017-12-04 22:08:07,567 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 22:08:07] "GET /account HTTP/1.1" 200 -
[2017-12-04 22:08:09,473 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 22:08:09] "GET /note HTTP/1.1" 200 -
[2017-12-04 22:08:13,396 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 22:08:13] "POST /login HTTP/1.1" 302 -
[2017-12-04 22:08:13,411 : INFO : views.py : 40 :             notes_db() ] started note db form
[2017-12-04 22:08:13,411 : DEBUG : sqlalchemy_statments.py : 38 :              get_all() ] [(15, 'daaaaaaaaaaaa', 'Programming', 'aaaaadd', '2017-12-04 20:27:38.226627'), (13, 'qqqqqqqqqqqqqqqqq', 'Programming', 'qqqqqqqqqqaaaaaaaa', '2017-12-04 20:26:54.765365'), (12, 'aaaaaaaaaaa', 'Programming', 'aaaaaaaaaaaaaaaa', '2017-12-04 19:55:04.143725'), (11, 'eeeeeeeeeeeeee', 'Programming', 'eeeeeeeeeeeeee', '2017-12-04 19:53:15.222451'), (10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-04 22:08:13,427 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 22:08:13] "GET /note HTTP/1.1" 200 -
[2017-12-04 22:08:16,083 : INFO : views.py : 40 :             notes_db() ] started note db form
[2017-12-04 22:08:16,083 : DEBUG : sqlalchemy_statments.py : 38 :              get_all() ] [(15, 'daaaaaaaaaaaa', 'Programming', 'aaaaadd', '2017-12-04 20:27:38.226627'), (13, 'qqqqqqqqqqqqqqqqq', 'Programming', 'qqqqqqqqqqaaaaaaaa', '2017-12-04 20:26:54.765365'), (12, 'aaaaaaaaaaa', 'Programming', 'aaaaaaaaaaaaaaaa', '2017-12-04 19:55:04.143725'), (11, 'eeeeeeeeeeeeee', 'Programming', 'eeeeeeeeeeeeee', '2017-12-04 19:53:15.222451'), (10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-04 22:08:16,083 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 22:08:16] "GET /note HTTP/1.1" 200 -
[2017-12-04 22:08:16,677 : INFO : views.py : 40 :             notes_db() ] started note db form
[2017-12-04 22:08:16,677 : DEBUG : sqlalchemy_statments.py : 38 :              get_all() ] [(15, 'daaaaaaaaaaaa', 'Programming', 'aaaaadd', '2017-12-04 20:27:38.226627'), (13, 'qqqqqqqqqqqqqqqqq', 'Programming', 'qqqqqqqqqqaaaaaaaa', '2017-12-04 20:26:54.765365'), (12, 'aaaaaaaaaaa', 'Programming', 'aaaaaaaaaaaaaaaa', '2017-12-04 19:55:04.143725'), (11, 'eeeeeeeeeeeeee', 'Programming', 'eeeeeeeeeeeeee', '2017-12-04 19:53:15.222451'), (10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-04 22:08:16,677 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 22:08:16] "GET /note HTTP/1.1" 200 -
[2017-12-04 22:08:18,615 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 22:08:18] "GET /continue HTTP/1.1" 200 -
[2017-12-04 22:08:19,756 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 22:08:19] "POST /continue HTTP/1.1" 200 -
[2017-12-04 22:08:22,725 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 22:08:22] "POST /continue HTTP/1.1" 302 -
[2017-12-04 22:08:22,756 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 22:08:22] "GET /note HTTP/1.1" 200 -
[2017-12-04 22:08:24,975 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 22:08:24] "GET /note HTTP/1.1" 200 -
[2017-12-04 22:09:17,283 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_home\\views.py', reloading
[2017-12-04 22:09:17,345 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-04 22:09:17,972 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-04 22:09:17,975 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-04 22:09:17,982 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-04 22:09:25,981 : DEBUG : sqlalchemy_statments.py : 56 :         get_all_user() ] [(1, 'espen', 'master')]
[2017-12-04 22:09:26,013 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 22:09:26] "GET /account HTTP/1.1" 200 -
[2017-12-04 22:09:44,422 : DEBUG : sqlalchemy_statments.py : 56 :         get_all_user() ] [(1, 'espen', 'master')]
[2017-12-04 22:09:44,422 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 22:09:44] "GET /account HTTP/1.1" 200 -
[2017-12-04 22:09:44,453 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 22:09:44] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-04 22:09:44,453 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 22:09:44] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-04 22:09:44,453 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 22:09:44] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-04 22:09:44,453 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 22:09:44] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-04 22:09:45,987 : DEBUG : sqlalchemy_statments.py : 56 :         get_all_user() ] [(1, 'espen', 'master')]
[2017-12-04 22:09:45,987 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [04/Dec/2017 22:09:45] "POST /account HTTP/1.1" 200 -
[2017-12-05 19:27:47,488 : DEBUG : sqlalchemy_statments.py : 56 :         get_all_user() ] [(1, 'espen', 'master')]
[2017-12-05 19:27:47,504 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 19:27:47] "POST /account HTTP/1.1" 200 -
[2017-12-05 19:27:47,520 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 19:27:47] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-05 19:27:47,520 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 19:27:47] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-05 19:27:47,535 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 19:27:47] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-05 19:27:47,535 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 19:27:47] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-05 19:27:55,317 : DEBUG : sqlalchemy_statments.py : 56 :         get_all_user() ] [(1, 'espen', 'master')]
[2017-12-05 19:27:55,317 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 19:27:55] "POST /account HTTP/1.1" 200 -
[2017-12-05 19:28:03,224 : DEBUG : sqlalchemy_statments.py : 56 :         get_all_user() ] [(1, 'espen', 'master')]
[2017-12-05 19:28:03,224 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 19:28:03] "POST /account HTTP/1.1" 200 -
[2017-12-05 22:23:24,085 : DEBUG : sqlalchemy_statments.py : 56 :         get_all_user() ] [(1, 'espen', 'master')]
[2017-12-05 22:23:24,101 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:23:24] "POST /account HTTP/1.1" 200 -
[2017-12-05 22:23:24,116 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:23:24] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-05 22:23:24,116 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:23:24] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-05 22:23:24,132 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:23:24] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-05 22:23:24,132 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:23:24] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-05 22:23:25,882 : DEBUG : sqlalchemy_statments.py : 56 :         get_all_user() ] [(1, 'espen', 'master')]
[2017-12-05 22:23:25,882 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:23:25] "POST /account HTTP/1.1" 200 -
[2017-12-05 22:24:23,230 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_home\\views.py', reloading
[2017-12-05 22:24:23,262 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-05 22:24:24,216 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-05 22:24:24,221 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-05 22:24:24,231 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-05 22:24:40,970 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_tips\\views.py', reloading
[2017-12-05 22:24:41,008 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-05 22:24:41,619 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-05 22:24:41,622 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-05 22:24:41,629 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-05 22:25:32,427 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_technology\\views.py', reloading
[2017-12-05 22:25:32,458 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-05 22:25:33,125 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-05 22:25:33,125 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-05 22:25:33,141 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-05 22:32:20,792 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_technology\\views.py', reloading
[2017-12-05 22:32:20,874 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-05 22:32:21,463 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-05 22:32:21,463 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-05 22:32:21,479 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-05 22:33:18,490 : DEBUG : sqlalchemy_statments.py : 56 :         get_all_user() ] [(1, 'espen', 'master')]
[2017-12-05 22:33:18,521 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:33:18] "POST /account HTTP/1.1" 200 -
[2017-12-05 22:33:18,537 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:33:18] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-05 22:33:18,537 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:33:18] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-05 22:33:18,537 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:33:18] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-05 22:33:18,552 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:33:18] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-05 22:33:26,553 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:33:26] "GET /sqliteonline HTTP/1.1" 200 -
[2017-12-05 22:33:26,631 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:33:26] "GET /static/img/sqlite/select.jpg HTTP/1.1" 200 -
[2017-12-05 22:33:47,786 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:33:47] "GET /sqliteonline HTTP/1.1" 200 -
[2017-12-05 22:33:47,817 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:33:47] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-05 22:33:47,817 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:33:47] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-05 22:33:47,833 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:33:47] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-05 22:33:47,833 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:33:47] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-05 22:33:47,868 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:33:47] "GET /static/img/sqlite/select.jpg HTTP/1.1" 304 -
[2017-12-05 22:34:07,305 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:34:07] "GET /sqliteonline HTTP/1.1" 200 -
[2017-12-05 22:34:07,336 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:34:07] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-05 22:34:07,336 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:34:07] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-05 22:34:07,336 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:34:07] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-05 22:34:07,336 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:34:07] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-05 22:34:07,367 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:34:07] "GET /static/img/sqlite/select.jpg HTTP/1.1" 304 -
[2017-12-05 22:35:05,897 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:35:05] "GET /sqliteonline HTTP/1.1" 200 -
[2017-12-05 22:35:05,912 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:35:05] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-05 22:35:05,928 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:35:05] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-05 22:35:05,928 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:35:05] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-05 22:35:05,928 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:35:05] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-05 22:35:05,959 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:35:05] "GET /static/img/sqlite/select.jpg HTTP/1.1" 304 -
[2017-12-05 22:35:15,023 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:35:15] "GET /grafana HTTP/1.1" 200 -
[2017-12-05 22:35:15,085 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:35:15] "GET /static/img/grafana/grafana_start.jpg HTTP/1.1" 304 -
[2017-12-05 22:35:15,085 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:35:15] "GET /static/img/grafana/grafana_dash.jpg HTTP/1.1" 304 -
[2017-12-05 22:35:15,085 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:35:15] "GET /static/img/grafana/table_postgre.jpg HTTP/1.1" 304 -
[2017-12-05 22:35:15,085 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:35:15] "GET /static/img/grafana/grafana_datasource.jpg HTTP/1.1" 304 -
[2017-12-05 22:35:15,101 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:35:15] "GET /static/img/grafana/grafana_panel.jpg HTTP/1.1" 304 -
[2017-12-05 22:35:15,101 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:35:15] "GET /static/img/grafana/grafana_query.jpg HTTP/1.1" 304 -
[2017-12-05 22:35:15,101 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:35:15] "GET /static/img/grafana/grafana_result.jpg HTTP/1.1" 304 -
[2017-12-05 22:35:47,926 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:35:47] "GET /grafana HTTP/1.1" 200 -
[2017-12-05 22:35:47,949 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:35:47] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-05 22:35:47,951 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:35:47] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-05 22:35:47,954 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:35:47] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-05 22:35:47,960 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:35:47] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-05 22:35:47,997 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:35:47] "GET /static/img/grafana/grafana_start.jpg HTTP/1.1" 304 -
[2017-12-05 22:35:48,001 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:35:48] "GET /static/img/grafana/grafana_dash.jpg HTTP/1.1" 304 -
[2017-12-05 22:35:48,003 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:35:48] "GET /static/img/grafana/table_postgre.jpg HTTP/1.1" 304 -
[2017-12-05 22:35:48,009 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:35:48] "GET /static/img/grafana/grafana_datasource.jpg HTTP/1.1" 304 -
[2017-12-05 22:35:48,012 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:35:48] "GET /static/img/grafana/grafana_panel.jpg HTTP/1.1" 304 -
[2017-12-05 22:35:48,015 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:35:48] "GET /static/img/grafana/grafana_query.jpg HTTP/1.1" 304 -
[2017-12-05 22:35:48,018 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:35:48] "GET /static/img/grafana/grafana_result.jpg HTTP/1.1" 304 -
[2017-12-05 22:35:52,928 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:35:52] "GET /grafana HTTP/1.1" 200 -
[2017-12-05 22:35:52,944 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:35:52] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-05 22:35:52,944 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:35:52] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-05 22:35:52,959 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:35:52] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-05 22:35:52,959 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:35:52] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-05 22:35:52,990 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:35:52] "GET /static/img/grafana/grafana_start.jpg HTTP/1.1" 304 -
[2017-12-05 22:35:52,990 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:35:52] "GET /static/img/grafana/grafana_dash.jpg HTTP/1.1" 304 -
[2017-12-05 22:35:52,990 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:35:52] "GET /static/img/grafana/table_postgre.jpg HTTP/1.1" 304 -
[2017-12-05 22:35:52,990 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:35:52] "GET /static/img/grafana/grafana_datasource.jpg HTTP/1.1" 304 -
[2017-12-05 22:35:53,006 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:35:53] "GET /static/img/grafana/grafana_panel.jpg HTTP/1.1" 304 -
[2017-12-05 22:35:53,006 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:35:53] "GET /static/img/grafana/grafana_query.jpg HTTP/1.1" 304 -
[2017-12-05 22:35:53,006 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:35:53] "GET /static/img/grafana/grafana_result.jpg HTTP/1.1" 304 -
[2017-12-05 22:36:28,179 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:36:28] "GET /grafana HTTP/1.1" 200 -
[2017-12-05 22:36:28,194 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:36:28] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-05 22:36:28,194 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:36:28] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-05 22:36:28,194 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:36:28] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-05 22:36:28,210 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:36:28] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-05 22:36:28,241 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:36:28] "GET /static/img/grafana/grafana_start.jpg HTTP/1.1" 304 -
[2017-12-05 22:36:28,241 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:36:28] "GET /static/img/grafana/grafana_dash.jpg HTTP/1.1" 304 -
[2017-12-05 22:36:28,241 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:36:28] "GET /static/img/grafana/table_postgre.jpg HTTP/1.1" 304 -
[2017-12-05 22:36:28,241 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:36:28] "GET /static/img/grafana/grafana_datasource.jpg HTTP/1.1" 304 -
[2017-12-05 22:36:28,241 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:36:28] "GET /static/img/grafana/grafana_panel.jpg HTTP/1.1" 304 -
[2017-12-05 22:36:28,257 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:36:28] "GET /static/img/grafana/grafana_query.jpg HTTP/1.1" 304 -
[2017-12-05 22:36:28,257 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:36:28] "GET /static/img/grafana/grafana_result.jpg HTTP/1.1" 304 -
[2017-12-05 22:36:34,960 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:36:34] "GET /sqliteonline HTTP/1.1" 200 -
[2017-12-05 22:36:58,541 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:36:58] "GET /sqliteonline HTTP/1.1" 200 -
[2017-12-05 22:36:58,557 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:36:58] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-05 22:36:58,557 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:36:58] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-05 22:36:58,557 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:36:58] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-05 22:36:58,574 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:36:58] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-05 22:36:58,605 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:36:58] "GET /static/img/sqlite/select.jpg HTTP/1.1" 304 -
[2017-12-05 22:37:54,536 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:37:54] "GET /sqliteonline HTTP/1.1" 200 -
[2017-12-05 22:37:54,552 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:37:54] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-05 22:37:54,552 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:37:54] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-05 22:37:54,567 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:37:54] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-05 22:37:54,567 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:37:54] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-05 22:37:54,567 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:37:54] "GET /static/img/sqlite/open.jpg HTTP/1.1" 200 -
[2017-12-05 22:37:54,599 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:37:54] "GET /static/img/sqlite/select.jpg HTTP/1.1" 304 -
[2017-12-05 22:38:09,294 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:38:09] "GET /sqliteonline HTTP/1.1" 200 -
[2017-12-05 22:38:09,312 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:38:09] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-05 22:38:09,318 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:38:09] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-05 22:38:09,322 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:38:09] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-05 22:38:09,324 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:38:09] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-05 22:38:09,357 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:38:09] "GET /static/img/sqlite/open.jpg HTTP/1.1" 304 -
[2017-12-05 22:38:09,360 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:38:09] "GET /static/img/sqlite/select.jpg HTTP/1.1" 304 -
[2017-12-05 22:38:10,608 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:38:10] "GET /sqliteonline HTTP/1.1" 200 -
[2017-12-05 22:38:10,624 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:38:10] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-05 22:38:10,624 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:38:10] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-05 22:38:10,624 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:38:10] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-05 22:38:10,639 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:38:10] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-05 22:38:10,671 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:38:10] "GET /static/img/sqlite/open.jpg HTTP/1.1" 304 -
[2017-12-05 22:38:10,671 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:38:10] "GET /static/img/sqlite/select.jpg HTTP/1.1" 304 -
[2017-12-05 22:38:17,607 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:38:17] "GET /sqliteonline HTTP/1.1" 200 -
[2017-12-05 22:38:17,621 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:38:17] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-05 22:38:17,625 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:38:17] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-05 22:38:17,629 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:38:17] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-05 22:38:17,633 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:38:17] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-05 22:38:17,665 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:38:17] "GET /static/img/sqlite/open.jpg HTTP/1.1" 304 -
[2017-12-05 22:38:17,669 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:38:17] "GET /static/img/sqlite/select.jpg HTTP/1.1" 304 -
[2017-12-05 22:38:33,137 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:38:33] "GET /sqliteonline HTTP/1.1" 200 -
[2017-12-05 22:38:33,152 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:38:33] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-05 22:38:33,168 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:38:33] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-05 22:38:33,168 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:38:33] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-05 22:38:33,168 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:38:33] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-05 22:38:33,199 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:38:33] "GET /static/img/sqlite/open.jpg HTTP/1.1" 304 -
[2017-12-05 22:38:33,199 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:38:33] "GET /static/img/sqlite/select.jpg HTTP/1.1" 304 -
[2017-12-05 22:42:12,488 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:42:12] "GET /sqliteonline HTTP/1.1" 200 -
[2017-12-05 22:42:12,504 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:42:12] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-05 22:42:12,504 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:42:12] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-05 22:42:12,519 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:42:12] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-05 22:42:12,519 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:42:12] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-05 22:42:12,519 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:42:12] "GET /static/img/sqlite/db.jpg HTTP/1.1" 200 -
[2017-12-05 22:42:12,551 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:42:12] "GET /static/img/sqlite/open.jpg HTTP/1.1" 304 -
[2017-12-05 22:42:12,551 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:42:12] "GET /static/img/sqlite/select.jpg HTTP/1.1" 304 -
[2017-12-05 22:42:21,541 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:42:21] "GET /sqliteonline HTTP/1.1" 200 -
[2017-12-05 22:42:21,559 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:42:21] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-05 22:42:21,561 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:42:21] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-05 22:42:21,566 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:42:21] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-05 22:42:21,571 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:42:21] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-05 22:42:21,607 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:42:21] "GET /static/img/sqlite/open.jpg HTTP/1.1" 304 -
[2017-12-05 22:42:21,609 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:42:21] "GET /static/img/sqlite/db.jpg HTTP/1.1" 304 -
[2017-12-05 22:42:21,612 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:42:21] "GET /static/img/sqlite/select.jpg HTTP/1.1" 304 -
[2017-12-05 22:42:33,612 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:42:33] "GET /sqliteonline HTTP/1.1" 200 -
[2017-12-05 22:42:33,627 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:42:33] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-05 22:42:33,627 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:42:33] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-05 22:42:33,643 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:42:33] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-05 22:42:33,643 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:42:33] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-05 22:42:33,674 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:42:33] "GET /static/img/sqlite/open.jpg HTTP/1.1" 304 -
[2017-12-05 22:42:33,674 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:42:33] "GET /static/img/sqlite/db.jpg HTTP/1.1" 304 -
[2017-12-05 22:42:33,674 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:42:33] "GET /static/img/sqlite/select.jpg HTTP/1.1" 304 -
[2017-12-05 22:42:35,205 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:42:35] "GET /sqliteonline HTTP/1.1" 200 -
[2017-12-05 22:42:35,220 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:42:35] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-05 22:42:35,220 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:42:35] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-05 22:42:35,236 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:42:35] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-05 22:42:35,236 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:42:35] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-05 22:42:35,267 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:42:35] "GET /static/img/sqlite/open.jpg HTTP/1.1" 304 -
[2017-12-05 22:42:35,267 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:42:35] "GET /static/img/sqlite/db.jpg HTTP/1.1" 304 -
[2017-12-05 22:42:35,283 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:42:35] "GET /static/img/sqlite/select.jpg HTTP/1.1" 304 -
[2017-12-05 22:42:43,853 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:42:43] "GET /sqliteonline HTTP/1.1" 200 -
[2017-12-05 22:42:43,876 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:42:43] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-05 22:42:43,879 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:42:43] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-05 22:42:43,883 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:42:43] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-05 22:42:43,886 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:42:43] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-05 22:42:43,925 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:42:43] "GET /static/img/sqlite/open.jpg HTTP/1.1" 304 -
[2017-12-05 22:42:43,928 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:42:43] "GET /static/img/sqlite/db.jpg HTTP/1.1" 304 -
[2017-12-05 22:42:43,931 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:42:43] "GET /static/img/sqlite/select.jpg HTTP/1.1" 304 -
[2017-12-05 22:42:54,127 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:42:54] "GET /sqliteonline HTTP/1.1" 200 -
[2017-12-05 22:42:54,143 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:42:54] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-05 22:42:54,143 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:42:54] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-05 22:42:54,143 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:42:54] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-05 22:42:54,159 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:42:54] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-05 22:42:54,190 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:42:54] "GET /static/img/sqlite/open.jpg HTTP/1.1" 304 -
[2017-12-05 22:42:54,190 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:42:54] "GET /static/img/sqlite/db.jpg HTTP/1.1" 304 -
[2017-12-05 22:42:54,190 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:42:54] "GET /static/img/sqlite/select.jpg HTTP/1.1" 304 -
[2017-12-05 22:43:01,845 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:43:01] "GET /sqliteonline HTTP/1.1" 200 -
[2017-12-05 22:43:01,861 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:43:01] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-05 22:43:01,861 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:43:01] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-05 22:43:01,861 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:43:01] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-05 22:43:01,876 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:43:01] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-05 22:43:01,908 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:43:01] "GET /static/img/sqlite/open.jpg HTTP/1.1" 304 -
[2017-12-05 22:43:01,908 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:43:01] "GET /static/img/sqlite/db.jpg HTTP/1.1" 304 -
[2017-12-05 22:43:01,908 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:43:01] "GET /static/img/sqlite/select.jpg HTTP/1.1" 304 -
[2017-12-05 22:43:24,865 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:43:24] "GET /sqliteonline HTTP/1.1" 200 -
[2017-12-05 22:43:24,879 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:43:24] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-05 22:43:24,879 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:43:24] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-05 22:43:24,879 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:43:24] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-05 22:43:24,879 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:43:24] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-05 22:43:24,910 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:43:24] "GET /static/img/sqlite/open.jpg HTTP/1.1" 304 -
[2017-12-05 22:43:24,926 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:43:24] "GET /static/img/sqlite/db.jpg HTTP/1.1" 304 -
[2017-12-05 22:43:24,926 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:43:24] "GET /static/img/sqlite/select.jpg HTTP/1.1" 304 -
[2017-12-05 22:44:42,582 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:44:42] "GET /sqliteonline HTTP/1.1" 200 -
[2017-12-05 22:44:42,599 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:44:42] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-05 22:44:42,601 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:44:42] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-05 22:44:42,604 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:44:42] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-05 22:44:42,609 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:44:42] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-05 22:44:42,612 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:44:42] "GET /static/img/sqlite/save.jpg HTTP/1.1" 200 -
[2017-12-05 22:44:42,641 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:44:42] "GET /static/img/sqlite/open.jpg HTTP/1.1" 304 -
[2017-12-05 22:44:42,645 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:44:42] "GET /static/img/sqlite/db.jpg HTTP/1.1" 304 -
[2017-12-05 22:44:42,647 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:44:42] "GET /static/img/sqlite/select.jpg HTTP/1.1" 304 -
[2017-12-05 22:45:06,019 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:45:06] "GET /sqliteonline HTTP/1.1" 200 -
[2017-12-05 22:45:06,041 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:45:06] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-05 22:45:06,043 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:45:06] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-05 22:45:06,047 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:45:06] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-05 22:45:06,051 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:45:06] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-05 22:45:06,087 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:45:06] "GET /static/img/sqlite/open.jpg HTTP/1.1" 304 -
[2017-12-05 22:45:06,090 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:45:06] "GET /static/img/sqlite/db.jpg HTTP/1.1" 304 -
[2017-12-05 22:45:06,093 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:45:06] "GET /static/img/sqlite/select.jpg HTTP/1.1" 304 -
[2017-12-05 22:45:06,095 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:45:06] "GET /static/img/sqlite/save.jpg HTTP/1.1" 304 -
[2017-12-05 22:46:17,975 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:46:17] "GET /sqliteonline HTTP/1.1" 200 -
[2017-12-05 22:46:17,990 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:46:17] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-05 22:46:17,990 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:46:17] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-05 22:46:17,990 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:46:17] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-05 22:46:18,006 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:46:18] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-05 22:46:18,037 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:46:18] "GET /static/img/sqlite/open.jpg HTTP/1.1" 304 -
[2017-12-05 22:46:18,037 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:46:18] "GET /static/img/sqlite/db.jpg HTTP/1.1" 304 -
[2017-12-05 22:46:18,037 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:46:18] "GET /static/img/sqlite/select.jpg HTTP/1.1" 304 -
[2017-12-05 22:46:18,037 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:46:18] "GET /static/img/sqlite/save.jpg HTTP/1.1" 304 -
[2017-12-05 22:46:25,112 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:46:25] "GET /note HTTP/1.1" 200 -
[2017-12-05 22:46:29,237 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:46:29] "POST /login HTTP/1.1" 302 -
[2017-12-05 22:46:29,253 : INFO : views.py : 40 :             notes_db() ] started note db form
[2017-12-05 22:46:29,253 : DEBUG : sqlalchemy_statments.py : 38 :              get_all() ] [(15, 'daaaaaaaaaaaa', 'Programming', 'aaaaadd', '2017-12-04 20:27:38.226627'), (13, 'qqqqqqqqqqqqqqqqq', 'Programming', 'qqqqqqqqqqaaaaaaaa', '2017-12-04 20:26:54.765365'), (12, 'aaaaaaaaaaa', 'Programming', 'aaaaaaaaaaaaaaaa', '2017-12-04 19:55:04.143725'), (11, 'eeeeeeeeeeeeee', 'Programming', 'eeeeeeeeeeeeee', '2017-12-04 19:53:15.222451'), (10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-05 22:46:29,284 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:46:29] "GET /note HTTP/1.1" 200 -
[2017-12-05 22:46:29,347 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:46:29] "GET /static/fonts/glyphicons-halflings-regular.woff2 HTTP/1.1" 304 -
[2017-12-05 22:46:30,800 : INFO : views.py : 40 :             notes_db() ] started note db form
[2017-12-05 22:46:30,800 : DEBUG : sqlalchemy_statments.py : 38 :              get_all() ] [(15, 'daaaaaaaaaaaa', 'Programming', 'aaaaadd', '2017-12-04 20:27:38.226627'), (13, 'qqqqqqqqqqqqqqqqq', 'Programming', 'qqqqqqqqqqaaaaaaaa', '2017-12-04 20:26:54.765365'), (12, 'aaaaaaaaaaa', 'Programming', 'aaaaaaaaaaaaaaaa', '2017-12-04 19:55:04.143725'), (11, 'eeeeeeeeeeeeee', 'Programming', 'eeeeeeeeeeeeee', '2017-12-04 19:53:15.222451'), (10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-05 22:46:30,800 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:46:30] "GET /note HTTP/1.1" 200 -
[2017-12-05 22:46:32,425 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:46:32] "GET /continue HTTP/1.1" 200 -
[2017-12-05 22:46:33,535 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:46:33] "POST /continue HTTP/1.1" 200 -
[2017-12-05 22:46:36,848 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:46:36] "POST /continue HTTP/1.1" 302 -
[2017-12-05 22:46:36,879 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:46:36] "GET /note HTTP/1.1" 200 -
[2017-12-05 22:46:39,582 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:46:39] "GET /sqliteonline HTTP/1.1" 200 -
[2017-12-05 22:46:42,926 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:46:42] "GET /grafana HTTP/1.1" 200 -
[2017-12-05 22:46:50,052 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [05/Dec/2017 22:46:50] "GET /about HTTP/1.1" 200 -
[2017-12-06 20:37:33,771 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 20:37:33] "GET / HTTP/1.1" 200 -
[2017-12-06 20:37:33,798 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 20:37:33] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-06 20:37:33,798 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 20:37:33] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-06 20:37:33,798 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 20:37:33] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-06 20:37:33,798 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 20:37:33] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-06 20:41:18,079 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 20:41:18] "GET / HTTP/1.1" 200 -
[2017-12-06 20:41:18,110 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 20:41:18] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-06 20:41:18,110 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 20:41:18] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-06 20:41:18,110 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 20:41:18] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-06 20:41:18,110 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 20:41:18] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-06 20:41:39,158 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 20:41:39] "GET / HTTP/1.1" 200 -
[2017-12-06 20:41:39,189 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 20:41:39] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-06 20:41:39,189 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 20:41:39] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-06 20:41:39,189 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 20:41:39] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-06 20:41:39,189 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 20:41:39] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-06 20:41:51,225 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 20:41:51] "GET /note HTTP/1.1" 200 -
[2017-12-06 20:42:13,165 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 20:42:13] "GET /sqliteonline HTTP/1.1" 200 -
[2017-12-06 20:42:13,227 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 20:42:13] "GET /static/img/sqlite/open.jpg HTTP/1.1" 304 -
[2017-12-06 20:42:13,227 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 20:42:13] "GET /static/img/sqlite/db.jpg HTTP/1.1" 304 -
[2017-12-06 20:42:13,243 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 20:42:13] "GET /static/img/sqlite/select.jpg HTTP/1.1" 304 -
[2017-12-06 20:42:13,243 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 20:42:13] "GET /static/img/sqlite/save.jpg HTTP/1.1" 304 -
[2017-12-06 20:42:20,256 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 20:42:20] "GET / HTTP/1.1" 200 -
[2017-12-06 20:42:20,271 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 20:42:20] "GET /note HTTP/1.1" 200 -
[2017-12-06 20:42:50,088 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-06 20:42:50,153 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 20:42:50,942 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 20:42:50,946 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 20:42:50,949 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 20:42:52,997 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-06 20:42:53,063 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 20:42:53,673 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 20:42:53,676 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 20:42:53,684 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 20:43:10,543 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-06 20:43:10,632 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 20:43:11,185 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 20:43:11,185 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 20:43:11,201 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 20:43:35,411 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\config.py', reloading
[2017-12-06 20:43:35,438 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 20:43:37,181 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 20:43:49,288 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 20:43:49] "GET /about HTTP/1.1" 200 -
[2017-12-06 20:43:53,413 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 20:43:53] "GET /note HTTP/1.1" 200 -
[2017-12-06 20:44:00,086 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 20:44:00] "POST /login HTTP/1.1" 302 -
[2017-12-06 20:44:00,086 : INFO : views.py : 40 :             notes_db() ] started note db form
[2017-12-06 20:44:00,102 : DEBUG : sqlalchemy_statments.py : 38 :              get_all() ] [(15, 'daaaaaaaaaaaa', 'Programming', 'aaaaadd', '2017-12-04 20:27:38.226627'), (13, 'qqqqqqqqqqqqqqqqq', 'Programming', 'qqqqqqqqqqaaaaaaaa', '2017-12-04 20:26:54.765365'), (12, 'aaaaaaaaaaa', 'Programming', 'aaaaaaaaaaaaaaaa', '2017-12-04 19:55:04.143725'), (11, 'eeeeeeeeeeeeee', 'Programming', 'eeeeeeeeeeeeee', '2017-12-04 19:53:15.222451'), (10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-06 20:44:00,133 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 20:44:00] "GET /note HTTP/1.1" 200 -
[2017-12-06 20:44:00,180 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 20:44:00] "GET /static/fonts/glyphicons-halflings-regular.woff2 HTTP/1.1" 304 -
[2017-12-06 20:44:09,321 : INFO : views.py : 40 :             notes_db() ] started note db form
[2017-12-06 20:44:09,321 : DEBUG : sqlalchemy_statments.py : 38 :              get_all() ] [(15, 'daaaaaaaaaaaa', 'Programming', 'aaaaadd', '2017-12-04 20:27:38.226627'), (13, 'qqqqqqqqqqqqqqqqq', 'Programming', 'qqqqqqqqqqaaaaaaaa', '2017-12-04 20:26:54.765365'), (12, 'aaaaaaaaaaa', 'Programming', 'aaaaaaaaaaaaaaaa', '2017-12-04 19:55:04.143725'), (11, 'eeeeeeeeeeeeee', 'Programming', 'eeeeeeeeeeeeee', '2017-12-04 19:53:15.222451'), (10, 'loging', 'Html', 'loging', '2017-12-03 21:35:50.941147'), (9, 'wwwwwwwwwwwwwww', 'Programming', 'wwwwwwwwwwwwwww', '2017-12-02 13:36:37.369621'), (8, 'espenahhahhahfhhgisihahghivhagiaoihoihoiOIHAGIOSIHVJHOIHAGOIOISHHOIHGOAOIHOIHOGIAOSHOIH', 'Html', 'HFIAUHIHHFOPAHHPAOHI', '2017-11-25 20:55:30.213354'), (7, 'WWWWWWWWWWWWW', 'Programming', 'WWWWWWWWWWWWW', '2017-11-25 13:54:07.178630'), (6, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQQQQQQ', '2017-11-25 13:53:30.238391'), (5, 'QQQQQQQQQQQQQQQ', 'Programming', 'QQQQQQQQQQQQQQQQ', '2017-11-25 13:53:14.062529'), (4, 'Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components.  Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they値l naturally fill the full width of its parent element. This is easily customized with our various sizing options.', 'html', 'https://v4-alpha.getbootstrap.com/components/card/', '2017-11-18 17:29:34.954090'), (3, 'sqlite python delete', 'Sql', 'http://www.sqlitetutorial.net/sqlite-python/delete/', '2017-11-12 21:47:53.364441'), (2, 'PEP 8 Python', 'Programming', 'https://www.python.org/dev/peps/pep-0008/#naming-conventions', '2017-11-12 21:46:04.969567')]
[2017-12-06 20:44:09,321 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 20:44:09] "GET /note HTTP/1.1" 200 -
[2017-12-06 20:44:31,091 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 20:44:31] "GET /continue HTTP/1.1" 200 -
[2017-12-06 20:44:32,388 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 20:44:32] "POST /continue HTTP/1.1" 200 -
[2017-12-06 20:44:35,264 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 20:44:35] "POST /continue HTTP/1.1" 302 -
[2017-12-06 20:44:35,264 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 20:44:35] "GET /note HTTP/1.1" 200 -
[2017-12-06 20:44:36,701 : DEBUG : sqlalchemy_statments.py : 56 :         get_all_user() ] [(1, 'espen', 'master')]
[2017-12-06 20:44:36,717 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 20:44:36] "GET /account HTTP/1.1" 200 -
[2017-12-06 20:44:42,311 : DEBUG : sqlalchemy_statments.py : 56 :         get_all_user() ] [(1, 'espen', 'master')]
[2017-12-06 20:44:42,327 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 20:44:42] "POST /account HTTP/1.1" 200 -
[2017-12-06 20:45:48,310 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 20:45:48] "GET / HTTP/1.1" 200 -
[2017-12-06 20:45:51,529 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 20:45:51] "GET /py HTTP/1.1" 200 -
[2017-12-06 20:45:51,545 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 20:45:51] "GET /static/img/import_cls/app_form_mod.jpg HTTP/1.1" 304 -
[2017-12-06 20:45:56,311 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 20:45:56] "GET /static/img/import_cls/add_init.jpg HTTP/1.1" 304 -
[2017-12-06 21:38:42,558 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 21:38:43,105 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 21:38:43,105 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 21:38:43,120 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 21:38:50,121 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 21:38:50] "GET / HTTP/1.1" 200 -
[2017-12-06 21:38:52,433 : DEBUG : sqlalchemy_statments.py : 56 :             get_user() ] None
[2017-12-06 21:38:52,449 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 21:38:52] "GET /note HTTP/1.1" 500 -
[2017-12-06 21:38:52,465 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 21:38:52] "GET /note?__debugger__=yes&cmd=resource&f=style.css HTTP/1.1" 200 -
[2017-12-06 21:38:57,153 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 21:38:57] "GET /note?__debugger__=yes&cmd=resource&f=jquery.js HTTP/1.1" 200 -
[2017-12-06 21:38:57,246 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 21:38:57] "GET /note?__debugger__=yes&cmd=resource&f=debugger.js HTTP/1.1" 200 -
[2017-12-06 21:38:57,246 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 21:38:57] "GET /note?__debugger__=yes&cmd=resource&f=console.png HTTP/1.1" 200 -
[2017-12-06 21:38:57,262 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 21:38:57] "GET /note?__debugger__=yes&cmd=resource&f=console.png HTTP/1.1" 200 -
[2017-12-06 21:38:57,309 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 21:38:57] "GET /note?__debugger__=yes&cmd=resource&f=ubuntu.ttf HTTP/1.1" 200 -
[2017-12-06 21:39:22,438 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-06 21:39:22,473 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 21:39:23,228 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 21:39:23,235 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 21:39:23,245 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 21:39:28,050 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 21:39:28,581 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 21:39:28,597 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 21:39:28,597 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 21:39:38,784 : DEBUG : sqlalchemy_statments.py : 56 :             get_user() ] None
[2017-12-06 21:39:38,831 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 21:39:38] "GET /note HTTP/1.1" 500 -
[2017-12-06 21:39:38,862 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 21:39:38] "GET /note?__debugger__=yes&cmd=resource&f=style.css HTTP/1.1" 200 -
[2017-12-06 21:39:38,862 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 21:39:38] "GET /note?__debugger__=yes&cmd=resource&f=jquery.js HTTP/1.1" 200 -
[2017-12-06 21:39:38,862 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 21:39:38] "GET /note?__debugger__=yes&cmd=resource&f=debugger.js HTTP/1.1" 200 -
[2017-12-06 21:39:38,893 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 21:39:38] "GET /note?__debugger__=yes&cmd=resource&f=console.png HTTP/1.1" 200 -
[2017-12-06 21:39:38,956 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 21:39:38] "GET /note?__debugger__=yes&cmd=resource&f=console.png HTTP/1.1" 200 -
[2017-12-06 21:39:42,558 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 21:39:42] "GET / HTTP/1.1" 200 -
[2017-12-06 21:39:44,667 : DEBUG : sqlalchemy_statments.py : 56 :             get_user() ] None
[2017-12-06 21:39:44,667 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 21:39:44] "GET /note HTTP/1.1" 500 -
[2017-12-06 21:39:44,699 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 21:39:44] "GET /note?__debugger__=yes&cmd=resource&f=style.css HTTP/1.1" 200 -
[2017-12-06 21:39:49,594 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 21:39:49] "GET /note?__debugger__=yes&cmd=resource&f=jquery.js HTTP/1.1" 200 -
[2017-12-06 21:39:49,610 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 21:39:49] "GET /note?__debugger__=yes&cmd=resource&f=debugger.js HTTP/1.1" 200 -
[2017-12-06 21:39:49,625 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 21:39:49] "GET /note?__debugger__=yes&cmd=resource&f=console.png HTTP/1.1" 200 -
[2017-12-06 21:39:49,672 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 21:39:49] "GET /note?__debugger__=yes&cmd=resource&f=console.png HTTP/1.1" 200 -
[2017-12-06 21:39:59,851 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 21:40:00,398 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 21:40:00,398 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 21:40:00,414 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 21:40:20,312 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-06 21:40:20,337 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 21:40:21,037 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 21:40:21,041 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 21:40:21,051 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 21:40:40,038 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-06 21:40:40,057 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 21:40:40,757 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 21:40:40,762 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 21:40:40,770 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 21:40:47,018 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-06 21:40:47,049 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 21:40:47,732 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 21:40:47,737 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 21:40:47,746 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 21:40:54,122 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-06 21:40:54,169 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 21:40:54,738 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 21:40:54,738 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 21:40:54,738 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 21:43:12,612 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-06 21:43:12,655 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 21:43:13,363 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 21:43:13,369 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 21:43:13,379 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 21:44:19,082 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-06 21:44:19,160 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 21:44:19,790 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 21:44:19,793 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 21:44:19,799 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 21:44:26,071 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-06 21:44:26,098 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 21:44:27,563 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 21:44:27,566 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 21:44:27,574 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 21:44:44,515 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-06 21:44:44,561 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 21:44:45,217 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 21:44:45,217 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 21:44:45,217 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 21:44:50,522 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-06 21:44:50,587 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 21:44:51,182 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 21:44:51,182 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 21:44:51,198 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 21:45:15,479 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-06 21:45:15,529 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 21:45:16,202 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 21:45:16,205 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 21:45:16,214 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 21:45:45,968 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-06 21:45:46,000 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 21:45:46,728 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 21:45:46,733 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 21:45:46,742 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 21:45:53,062 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-06 21:45:53,096 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 21:45:53,768 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 21:45:53,768 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 21:45:53,768 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 21:45:55,865 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-06 21:45:55,925 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 21:45:56,523 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 21:45:56,523 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 21:45:56,538 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 21:45:58,624 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-06 21:45:58,667 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 21:45:59,311 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 21:45:59,316 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 21:45:59,324 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 21:46:47,151 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-06 21:46:47,189 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 21:46:47,919 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 21:46:47,927 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 21:46:47,936 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 21:46:57,313 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-06 21:46:57,394 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 21:47:12,210 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 21:47:12,741 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 21:47:12,757 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 21:47:12,757 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 21:47:29,796 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-06 21:47:29,864 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 21:47:30,417 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 21:47:30,417 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 21:47:30,432 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 21:47:49,592 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-06 21:47:49,679 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 21:47:50,353 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 21:47:50,355 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 21:47:50,362 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 21:48:15,827 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-06 21:48:15,858 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 21:48:16,519 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 21:48:16,519 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 21:48:16,519 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 21:48:26,047 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-06 21:48:26,087 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 21:48:26,749 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 21:48:26,752 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 21:48:26,762 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 21:48:52,258 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-06 21:48:52,274 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 21:48:52,964 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 21:48:52,964 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 21:48:52,964 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 21:49:04,589 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-06 21:49:04,641 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 21:49:05,309 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 21:49:05,309 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 21:49:05,325 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 21:49:09,432 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-06 21:49:09,469 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 21:49:29,812 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 21:49:30,343 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 21:49:30,343 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 21:49:30,359 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 21:49:50,453 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-06 21:49:50,473 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 21:49:51,133 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 21:49:51,137 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 21:49:51,147 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 21:49:59,598 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-06 21:49:59,637 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 21:50:00,292 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 21:50:00,297 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 21:50:00,306 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 21:50:11,890 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-06 21:50:11,952 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 21:50:12,514 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 21:50:12,517 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 21:50:12,525 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 21:50:48,363 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-06 21:50:48,403 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 21:50:50,118 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 21:50:50,121 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 21:50:50,130 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 21:50:56,431 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-06 21:50:56,469 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 21:50:57,157 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 21:50:57,160 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 21:50:57,168 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 21:51:07,613 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-06 21:51:07,676 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 21:51:08,366 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 21:51:08,366 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 21:51:08,382 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 21:51:23,188 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-06 21:51:23,233 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 21:51:23,918 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 21:51:23,921 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 21:51:23,930 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 21:52:14,850 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-06 21:52:14,928 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 21:52:15,519 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 21:52:15,522 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 21:52:15,529 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 21:52:20,704 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 21:52:20] "GET / HTTP/1.1" 200 -
[2017-12-06 21:52:22,876 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 21:52:22] "GET / HTTP/1.1" 200 -
[2017-12-06 21:52:22,892 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 21:52:22] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-06 21:52:22,892 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 21:52:22] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-06 21:52:22,907 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 21:52:22] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-06 21:52:22,907 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 21:52:22] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-06 21:52:29,955 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 21:52:29] "GET /py HTTP/1.1" 200 -
[2017-12-06 21:52:31,877 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 21:52:31] "GET /note HTTP/1.1" 200 -
[2017-12-06 21:52:36,549 : DEBUG : sqlalchemy_statments.py : 56 :             get_user() ] None
[2017-12-06 21:52:36,565 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 21:52:36] "POST /login HTTP/1.1" 500 -
[2017-12-06 21:52:36,596 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 21:52:36] "GET /login?__debugger__=yes&cmd=resource&f=style.css HTTP/1.1" 200 -
[2017-12-06 21:52:36,596 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 21:52:36] "GET /login?__debugger__=yes&cmd=resource&f=jquery.js HTTP/1.1" 200 -
[2017-12-06 21:52:36,596 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 21:52:36] "GET /login?__debugger__=yes&cmd=resource&f=debugger.js HTTP/1.1" 200 -
[2017-12-06 21:52:36,627 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 21:52:36] "GET /login?__debugger__=yes&cmd=resource&f=ubuntu.ttf HTTP/1.1" 200 -
[2017-12-06 21:52:36,627 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 21:52:36] "GET /login?__debugger__=yes&cmd=resource&f=console.png HTTP/1.1" 200 -
[2017-12-06 21:52:36,690 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 21:52:36] "GET /login?__debugger__=yes&cmd=resource&f=console.png HTTP/1.1" 200 -
[2017-12-06 21:53:48,825 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_statments.py', reloading
[2017-12-06 21:53:48,921 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 21:53:49,540 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 21:53:49,543 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 21:53:49,544 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 21:54:21,234 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-06 21:54:21,295 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 21:54:21,961 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 21:54:21,965 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 21:54:21,974 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 21:54:49,477 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_statments.py', reloading
[2017-12-06 21:54:49,503 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 21:54:50,224 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 21:54:50,228 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 21:54:50,236 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 21:55:25,069 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_statments.py', reloading
[2017-12-06 21:55:25,103 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 21:55:25,753 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 21:55:25,753 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 21:55:25,769 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 21:55:41,687 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_statments.py', reloading
[2017-12-06 21:55:41,706 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 21:55:42,399 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 21:55:42,402 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 21:55:42,411 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 21:55:55,123 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_statments.py', reloading
[2017-12-06 21:55:55,155 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 21:55:55,919 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 21:55:55,922 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 21:55:55,930 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 21:58:19,659 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_statments.py', reloading
[2017-12-06 21:58:19,690 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 21:58:20,314 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 21:58:20,314 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 21:58:20,330 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 21:59:29,176 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_statments.py', reloading
[2017-12-06 21:59:29,257 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 21:59:29,852 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 21:59:29,867 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 21:59:29,867 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 21:59:34,101 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_statments.py', reloading
[2017-12-06 21:59:34,214 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 21:59:34,807 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 21:59:34,807 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 21:59:34,823 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 21:59:43,254 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_statments.py', reloading
[2017-12-06 21:59:43,298 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 22:00:01,192 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 22:00:01,739 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 22:00:01,739 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 22:00:01,739 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 22:00:31,432 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_statments.py', reloading
[2017-12-06 22:00:31,541 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 22:00:32,120 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 22:00:32,123 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 22:00:32,129 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 22:00:57,535 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_statments.py', reloading
[2017-12-06 22:00:57,596 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 22:00:58,202 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 22:00:58,218 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 22:00:58,218 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 22:01:34,947 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 22:01:34] "GET / HTTP/1.1" 200 -
[2017-12-06 22:01:44,042 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 22:01:44] "GET /note HTTP/1.1" 200 -
[2017-12-06 22:02:11,518 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-06 22:02:11,580 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 22:02:12,129 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 22:02:12,129 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 22:02:12,145 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 22:03:25,888 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_declarative.py', reloading
[2017-12-06 22:03:25,969 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 22:03:26,562 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 22:03:26,565 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 22:03:26,574 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 22:03:33,905 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_statments.py', reloading
[2017-12-06 22:03:33,991 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 22:03:34,571 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 22:03:34,571 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 22:03:34,571 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 22:03:53,565 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_statments.py', reloading
[2017-12-06 22:03:53,596 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 22:03:54,374 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 22:03:54,379 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 22:03:54,390 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 22:04:02,626 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 22:04:03,173 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 22:04:03,173 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 22:04:03,173 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 22:04:21,105 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_statments.py', reloading
[2017-12-06 22:04:21,139 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 22:04:21,860 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 22:04:21,865 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 22:04:21,875 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 22:04:34,468 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_statments.py', reloading
[2017-12-06 22:04:34,527 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 22:04:35,235 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 22:04:35,235 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 22:04:35,235 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 22:04:55,397 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_statments.py', reloading
[2017-12-06 22:04:55,439 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 22:04:56,107 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 22:04:56,107 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 22:04:56,123 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 22:05:24,612 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_declarative.py', reloading
[2017-12-06 22:05:24,646 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 22:05:25,327 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 22:05:25,330 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 22:05:25,337 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 22:05:28,431 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_declarative.py', reloading
[2017-12-06 22:05:28,471 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 22:05:29,172 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 22:05:29,177 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 22:05:29,186 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 22:05:38,674 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_declarative.py', reloading
[2017-12-06 22:05:38,725 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 22:05:39,384 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 22:05:39,384 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 22:05:39,399 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 22:05:54,190 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_declarative.py', reloading
[2017-12-06 22:05:54,246 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 22:05:54,918 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 22:05:54,921 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 22:05:54,930 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 22:06:26,754 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_declarative.py', reloading
[2017-12-06 22:06:26,782 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 22:06:27,471 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 22:06:27,476 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 22:06:27,486 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 22:06:56,029 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_statments.py', reloading
[2017-12-06 22:06:56,064 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 22:06:56,728 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 22:06:56,728 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 22:06:56,728 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 22:07:17,925 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_statments.py', reloading
[2017-12-06 22:07:17,956 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 22:07:18,663 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 22:07:18,666 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 22:07:18,673 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 22:07:35,545 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_declarative.py', reloading
[2017-12-06 22:07:35,581 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 22:07:36,263 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 22:07:36,266 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 22:07:36,274 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 22:07:49,868 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_declarative.py', reloading
[2017-12-06 22:07:49,898 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 22:07:50,547 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 22:07:50,547 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 22:07:50,563 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 22:08:06,530 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_statments.py', reloading
[2017-12-06 22:08:06,572 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 22:08:07,262 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 22:08:07,268 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 22:08:07,276 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 22:08:27,203 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_statments.py', reloading
[2017-12-06 22:08:27,235 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 22:08:27,900 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 22:08:27,905 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 22:08:27,913 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 22:08:33,205 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_statments.py', reloading
[2017-12-06 22:08:33,250 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 22:08:33,838 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 22:08:33,838 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 22:08:33,838 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 22:09:14,967 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_declarative.py', reloading
[2017-12-06 22:09:15,033 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 22:09:15,628 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 22:09:15,631 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 22:09:15,639 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 22:18:59,246 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 22:18:59,793 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 22:18:59,793 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 22:18:59,793 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 22:19:05,190 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 22:19:05] "GET /note HTTP/1.1" 200 -
[2017-12-06 22:19:05,221 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 22:19:05] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-06 22:19:05,221 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 22:19:05] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-06 22:19:05,221 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 22:19:05] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-06 22:19:05,221 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 22:19:05] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-06 22:19:08,190 : DEBUG : sqlalchemy_statments.py : 57 :             get_user() ] ('espen',)
[2017-12-06 22:19:08,190 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 22:19:08] "POST /login HTTP/1.1" 500 -
[2017-12-06 22:19:08,222 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 22:19:08] "GET /login?__debugger__=yes&cmd=resource&f=style.css HTTP/1.1" 200 -
[2017-12-06 22:19:08,222 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 22:19:08] "GET /login?__debugger__=yes&cmd=resource&f=jquery.js HTTP/1.1" 200 -
[2017-12-06 22:19:08,222 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 22:19:08] "GET /login?__debugger__=yes&cmd=resource&f=debugger.js HTTP/1.1" 200 -
[2017-12-06 22:19:08,253 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 22:19:08] "GET /login?__debugger__=yes&cmd=resource&f=console.png HTTP/1.1" 200 -
[2017-12-06 22:19:08,315 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 22:19:08] "GET /login?__debugger__=yes&cmd=resource&f=console.png HTTP/1.1" 200 -
[2017-12-06 22:19:21,991 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-06 22:19:22,022 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 22:19:22,689 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 22:19:22,692 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 22:19:22,696 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 22:19:26,152 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 22:19:26] "GET / HTTP/1.1" 200 -
[2017-12-06 22:19:27,980 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 22:19:27] "GET /note HTTP/1.1" 200 -
[2017-12-06 22:19:33,215 : DEBUG : sqlalchemy_statments.py : 57 :             get_user() ] ('espen',)
[2017-12-06 22:19:33,246 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 22:19:33] "POST /login HTTP/1.1" 500 -
[2017-12-06 22:19:33,278 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 22:19:33] "GET /login?__debugger__=yes&cmd=resource&f=style.css HTTP/1.1" 200 -
[2017-12-06 22:19:33,278 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 22:19:33] "GET /login?__debugger__=yes&cmd=resource&f=jquery.js HTTP/1.1" 200 -
[2017-12-06 22:19:33,293 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 22:19:33] "GET /login?__debugger__=yes&cmd=resource&f=debugger.js HTTP/1.1" 200 -
[2017-12-06 22:19:33,325 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 22:19:33] "GET /login?__debugger__=yes&cmd=resource&f=console.png HTTP/1.1" 200 -
[2017-12-06 22:19:33,387 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 22:19:33] "GET /login?__debugger__=yes&cmd=resource&f=console.png HTTP/1.1" 200 -
[2017-12-06 22:19:56,660 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-06 22:19:56,690 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 22:19:57,431 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 22:19:57,434 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 22:19:57,443 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 22:20:05,051 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 22:20:05,598 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 22:20:05,598 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 22:20:05,614 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 22:20:40,509 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-06 22:20:40,540 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 22:20:41,231 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 22:20:41,236 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 22:20:41,245 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 22:21:06,456 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-06 22:21:06,487 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 22:21:07,163 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 22:21:07,163 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 22:21:07,178 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 22:21:16,617 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_statments.py', reloading
[2017-12-06 22:21:16,654 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 22:21:17,380 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 22:21:17,383 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 22:21:17,393 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 22:21:31,063 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-06 22:21:31,078 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 22:21:31,829 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 22:21:31,832 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 22:21:31,840 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 22:21:52,043 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-06 22:21:52,059 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 22:21:52,737 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 22:21:52,741 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 22:21:52,748 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 22:22:04,287 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-06 22:22:04,315 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 22:22:05,008 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 22:22:05,012 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 22:22:05,023 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 22:22:11,333 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-06 22:22:11,364 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 22:22:12,051 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 22:22:12,054 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 22:22:12,063 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 22:22:17,355 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-06 22:22:17,395 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 22:22:18,068 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 22:22:18,072 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 22:22:18,081 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 22:22:36,111 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-06 22:22:36,144 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 22:22:36,826 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 22:22:36,829 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 22:22:36,838 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 22:22:52,675 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-06 22:22:52,710 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 22:23:06,778 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 22:23:07,341 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 22:23:07,357 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 22:23:07,357 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 22:23:15,782 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-06 22:23:15,813 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 22:23:16,475 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 22:23:16,475 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 22:23:16,491 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 22:23:50,373 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_statments.py', reloading
[2017-12-06 22:23:50,405 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 22:23:51,080 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 22:23:51,080 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 22:23:51,096 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 22:24:01,513 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-06 22:24:01,544 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 22:24:02,190 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 22:24:02,206 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 22:24:02,206 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 22:24:08,556 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-06 22:24:08,590 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 22:24:09,306 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 22:24:09,309 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 22:24:09,317 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 22:24:11,384 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-06 22:24:11,444 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 22:24:12,095 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 22:24:12,095 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 22:24:12,095 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 22:24:17,775 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 22:24:17] "GET / HTTP/1.1" 200 -
[2017-12-06 22:24:20,025 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 22:24:20] "GET /note HTTP/1.1" 200 -
[2017-12-06 22:24:21,948 : DEBUG : sqlalchemy_statments.py : 57 :             get_user() ] ('espen',)
[2017-12-06 22:24:21,948 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 22:24:21] "POST /login HTTP/1.1" 200 -
[2017-12-06 22:24:26,511 : DEBUG : sqlalchemy_statments.py : 57 :             get_user() ] ('espen',)
[2017-12-06 22:24:26,526 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 22:24:26] "POST /login HTTP/1.1" 302 -
[2017-12-06 22:24:26,526 : INFO : views.py : 47 :             notes_db() ] started note db form
[2017-12-06 22:24:26,526 : DEBUG : sqlalchemy_statments.py : 38 :              get_all() ] [(2, 'Test note', 'topic', 'www.bla.com', '2017-12-06 22:05:39.230148'), (1, 'Test note', 'topic', 'www.bla.com', '2017-12-06 22:05:29.000496')]
[2017-12-06 22:24:26,542 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 22:24:26] "GET /note HTTP/1.1" 200 -
[2017-12-06 22:24:32,139 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-06 22:24:32,170 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 22:24:32,726 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 22:24:32,726 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 22:24:32,742 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 22:24:38,004 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-06 22:24:38,069 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 22:24:38,677 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 22:24:38,677 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 22:24:38,693 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 22:26:58,510 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-06 22:26:58,548 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 22:26:59,249 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 22:26:59,253 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 22:26:59,263 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 22:29:04,944 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_declarative.py', reloading
[2017-12-06 22:29:04,975 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 22:29:05,682 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 22:29:05,686 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 22:29:05,696 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 22:29:08,833 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_declarative.py', reloading
[2017-12-06 22:29:08,857 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 22:29:09,559 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 22:29:09,564 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 22:29:09,572 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 22:29:12,729 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_declarative.py', reloading
[2017-12-06 22:29:12,761 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 22:29:13,443 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 22:29:13,447 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 22:29:13,457 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 22:29:15,544 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_declarative.py', reloading
[2017-12-06 22:29:15,583 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 22:29:16,260 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 22:29:16,263 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 22:29:16,264 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 22:29:18,300 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_declarative.py', reloading
[2017-12-06 22:29:18,341 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 22:29:19,040 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 22:29:19,040 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 22:29:19,040 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 22:30:00,116 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_declarative.py', reloading
[2017-12-06 22:30:00,142 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 22:30:00,805 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 22:30:00,808 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 22:30:00,816 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 22:30:08,164 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_declarative.py', reloading
[2017-12-06 22:30:08,195 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 22:30:08,862 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 22:30:08,878 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 22:30:08,878 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 22:31:47,677 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_statments.py', reloading
[2017-12-06 22:31:47,724 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 22:31:48,288 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 22:31:48,288 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 22:31:48,307 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 22:32:07,301 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-06 22:32:07,332 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 22:32:08,036 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 22:32:08,040 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 22:32:08,049 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 22:32:28,172 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-06 22:32:28,208 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 22:32:28,965 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 22:32:28,970 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 22:32:28,981 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 22:32:40,770 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 22:32:40] "GET /continue HTTP/1.1" 200 -
[2017-12-06 22:32:44,270 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 22:32:44] "POST /continue HTTP/1.1" 200 -
[2017-12-06 22:32:47,833 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 22:32:47] "POST /continue HTTP/1.1" 302 -
[2017-12-06 22:32:47,880 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 22:32:47] "GET /note HTTP/1.1" 200 -
[2017-12-06 22:32:49,974 : DEBUG : sqlalchemy_statments.py : 57 :             get_user() ] ('espen',)
[2017-12-06 22:32:49,974 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 22:32:49] "POST /login HTTP/1.1" 200 -
[2017-12-06 22:32:53,943 : DEBUG : sqlalchemy_statments.py : 57 :             get_user() ] ('espen',)
[2017-12-06 22:32:53,943 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 22:32:53] "POST /login HTTP/1.1" 302 -
[2017-12-06 22:32:53,943 : INFO : views.py : 47 :             notes_db() ] started note db form
[2017-12-06 22:32:53,943 : DEBUG : sqlalchemy_statments.py : 38 :              get_all() ] [(2, 'Test note', 'topic', 'www.bla.com', '2017-12-06 22:05:39.230148'), (1, 'Test note', 'topic', 'www.bla.com', '2017-12-06 22:05:29.000496')]
[2017-12-06 22:32:53,959 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 22:32:53] "GET /note HTTP/1.1" 200 -
[2017-12-06 22:32:58,514 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-06 22:32:58,578 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 22:32:59,159 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 22:32:59,162 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 22:32:59,169 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 22:33:19,302 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-06 22:33:19,427 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 22:33:20,074 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 22:33:20,077 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 22:33:20,084 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 22:34:35,119 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_statments.py', reloading
[2017-12-06 22:34:35,162 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 22:34:35,902 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 22:34:35,906 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 22:34:35,914 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 22:35:48,019 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_statments.py', reloading
[2017-12-06 22:35:48,054 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 22:35:48,701 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 22:35:48,705 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 22:35:48,714 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 22:36:25,642 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_statments.py', reloading
[2017-12-06 22:36:25,689 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 22:38:35,703 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 22:38:36,241 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 22:38:36,241 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 22:38:36,257 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 22:38:41,552 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_statments.py', reloading
[2017-12-06 22:38:41,599 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 22:38:42,214 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 22:38:42,217 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 22:38:42,224 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 22:40:58,380 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_statments.py', reloading
[2017-12-06 22:40:58,430 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 22:40:59,156 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 22:40:59,160 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 22:40:59,169 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 22:43:39,245 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_statments.py', reloading
[2017-12-06 22:43:39,279 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 22:43:39,968 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 22:43:39,971 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 22:43:39,980 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 22:43:53,872 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 22:43:53] "GET /note HTTP/1.1" 200 -
[2017-12-06 22:43:55,529 : DEBUG : sqlalchemy_statments.py : 57 :             get_user() ] ('espen',)
[2017-12-06 22:43:55,529 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 22:43:55] "POST /login HTTP/1.1" 200 -
[2017-12-06 22:43:59,138 : DEBUG : sqlalchemy_statments.py : 57 :             get_user() ] ('espen',)
[2017-12-06 22:43:59,138 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 22:43:59] "POST /login HTTP/1.1" 302 -
[2017-12-06 22:43:59,138 : INFO : views.py : 47 :             notes_db() ] started note db form
[2017-12-06 22:43:59,138 : DEBUG : sqlalchemy_statments.py : 38 :              get_all() ] [(2, 'Test note', 'topic', 'www.bla.com', '2017-12-06 22:05:39.230148'), (1, 'Test note', 'topic', 'www.bla.com', '2017-12-06 22:05:29.000496')]
[2017-12-06 22:43:59,170 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 22:43:59] "GET /note HTTP/1.1" 200 -
[2017-12-06 22:44:00,514 : INFO : views.py : 47 :             notes_db() ] started note db form
[2017-12-06 22:44:00,514 : DEBUG : sqlalchemy_statments.py : 38 :              get_all() ] [(2, 'Test note', 'topic', 'www.bla.com', '2017-12-06 22:05:39.230148'), (1, 'Test note', 'topic', 'www.bla.com', '2017-12-06 22:05:29.000496')]
[2017-12-06 22:44:00,529 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 22:44:00] "GET /note HTTP/1.1" 200 -
[2017-12-06 22:44:01,529 : INFO : views.py : 47 :             notes_db() ] started note db form
[2017-12-06 22:44:01,529 : DEBUG : sqlalchemy_statments.py : 38 :              get_all() ] [(2, 'Test note', 'topic', 'www.bla.com', '2017-12-06 22:05:39.230148'), (1, 'Test note', 'topic', 'www.bla.com', '2017-12-06 22:05:29.000496')]
[2017-12-06 22:44:01,529 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 22:44:01] "GET /note HTTP/1.1" 200 -
[2017-12-06 22:44:01,701 : INFO : views.py : 47 :             notes_db() ] started note db form
[2017-12-06 22:44:01,701 : DEBUG : sqlalchemy_statments.py : 38 :              get_all() ] [(2, 'Test note', 'topic', 'www.bla.com', '2017-12-06 22:05:39.230148'), (1, 'Test note', 'topic', 'www.bla.com', '2017-12-06 22:05:29.000496')]
[2017-12-06 22:44:01,717 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 22:44:01] "GET /note HTTP/1.1" 200 -
[2017-12-06 22:44:01,907 : INFO : views.py : 47 :             notes_db() ] started note db form
[2017-12-06 22:44:01,907 : DEBUG : sqlalchemy_statments.py : 38 :              get_all() ] [(2, 'Test note', 'topic', 'www.bla.com', '2017-12-06 22:05:39.230148'), (1, 'Test note', 'topic', 'www.bla.com', '2017-12-06 22:05:29.000496')]
[2017-12-06 22:44:01,907 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 22:44:01] "GET /note HTTP/1.1" 200 -
[2017-12-06 22:44:38,036 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_statments.py', reloading
[2017-12-06 22:44:38,098 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 22:44:38,718 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 22:44:38,718 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 22:44:38,718 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 22:44:44,886 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_declarative.py', reloading
[2017-12-06 22:44:44,995 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 22:44:45,548 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 22:44:45,548 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 22:44:45,563 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 22:44:52,893 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_statments.py', reloading
[2017-12-06 22:44:52,989 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 22:44:53,551 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 22:44:53,551 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 22:44:53,551 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 22:45:27,350 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_statments.py', reloading
[2017-12-06 22:45:27,389 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 22:45:28,090 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 22:45:28,096 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 22:45:28,105 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 22:45:31,287 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_statments.py', reloading
[2017-12-06 22:45:31,354 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 22:45:31,949 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 22:45:31,952 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 22:45:31,961 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 22:45:42,614 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_statments.py', reloading
[2017-12-06 22:45:42,677 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 22:45:43,226 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 22:45:43,226 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 22:45:43,226 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 22:47:03,246 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\__init__.py', reloading
[2017-12-06 22:47:03,325 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 22:47:03,958 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 22:47:03,958 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 22:47:03,974 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 22:47:20,850 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_statments.py', reloading
[2017-12-06 22:47:20,892 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 22:47:21,576 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 22:47:21,576 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 22:47:21,592 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 22:47:26,856 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_statments.py', reloading
[2017-12-06 22:47:26,916 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 22:47:27,468 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 22:47:27,468 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 22:47:27,483 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 22:48:06,499 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_statments.py', reloading
[2017-12-06 22:48:06,530 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 22:48:07,244 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 22:48:07,247 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 22:48:07,255 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 22:48:18,890 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_statments.py', reloading
[2017-12-06 22:48:18,921 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 22:48:19,580 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 22:48:19,586 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 22:48:19,595 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 22:50:18,213 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_statments.py', reloading
[2017-12-06 22:50:18,255 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 22:50:31,122 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 22:50:31,667 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 22:50:31,667 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 22:50:31,667 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 22:50:36,905 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-06 22:50:36,966 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 22:50:37,559 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 22:50:37,562 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 22:50:37,570 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 23:05:14,548 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-06 23:05:14,597 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 23:05:15,403 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 23:05:15,407 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 23:05:15,418 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 23:06:49,215 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-06 23:06:49,247 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 23:06:50,070 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 23:06:50,080 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 23:06:50,091 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 23:06:51,110 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-06 23:06:51,145 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 23:06:51,845 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 23:06:51,849 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 23:06:51,859 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 23:06:58,508 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 23:06:58] "GET /note HTTP/1.1" 200 -
[2017-12-06 23:06:58,524 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 23:06:58] "GET /static/css/bootstrap.min.css HTTP/1.1" 304 -
[2017-12-06 23:06:58,524 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 23:06:58] "GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 304 -
[2017-12-06 23:06:58,524 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 23:06:58] "GET /static/js/bootstrap.min.js HTTP/1.1" 304 -
[2017-12-06 23:06:58,539 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 23:06:58] "GET /static/main.css HTTP/1.1" 304 -
[2017-12-06 23:06:59,852 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 23:06:59] "POST /login HTTP/1.1" 200 -
[2017-12-06 23:07:03,415 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 23:07:03] "POST /login HTTP/1.1" 302 -
[2017-12-06 23:07:03,430 : INFO : views.py : 48 :             notes_db() ] started note db form
[2017-12-06 23:07:03,430 : DEBUG : sqlalchemy_statments.py : 39 :              get_all() ] [(2, 'Test note', 'topic', 'www.bla.com', '2017-12-06 22:05:39.230148'), (1, 'Test note', 'topic', 'www.bla.com', '2017-12-06 22:05:29.000496')]
[2017-12-06 23:07:03,446 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 23:07:03] "GET /note HTTP/1.1" 200 -
[2017-12-06 23:07:58,360 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-06 23:07:58,411 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 23:07:59,054 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 23:07:59,058 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 23:07:59,067 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 23:08:39,022 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-06 23:08:39,084 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 23:08:39,742 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 23:08:39,746 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 23:08:39,755 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 23:09:54,159 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-06 23:09:54,203 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 23:09:55,063 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 23:09:55,068 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 23:09:55,078 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 23:10:49,723 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_blog\\views.py', reloading
[2017-12-06 23:10:49,755 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 23:10:50,569 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 23:10:50,574 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 23:10:50,583 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 23:11:50,577 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\mod_db\\sqlalchemy_statments.py', reloading
[2017-12-06 23:11:50,609 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 23:12:10,225 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 23:12:10,835 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 23:12:10,850 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 23:12:10,850 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 23:12:20,725 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 23:12:20] "GET /continue HTTP/1.1" 200 -
[2017-12-06 23:12:22,710 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 23:12:22] "POST /continue HTTP/1.1" 200 -
[2017-12-06 23:12:26,647 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 23:12:26] "POST /continue HTTP/1.1" 302 -
[2017-12-06 23:12:26,647 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 23:12:26] "GET /note HTTP/1.1" 200 -
[2017-12-06 23:12:27,913 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 23:12:27] "GET /account HTTP/1.1" 500 -
[2017-12-06 23:12:27,929 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 23:12:27] "GET /account?__debugger__=yes&cmd=resource&f=style.css HTTP/1.1" 200 -
[2017-12-06 23:12:33,711 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 23:12:33] "GET /account?__debugger__=yes&cmd=resource&f=jquery.js HTTP/1.1" 200 -
[2017-12-06 23:12:33,789 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 23:12:33] "GET /account?__debugger__=yes&cmd=resource&f=debugger.js HTTP/1.1" 200 -
[2017-12-06 23:12:33,789 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 23:12:33] "GET /account?__debugger__=yes&cmd=resource&f=console.png HTTP/1.1" 200 -
[2017-12-06 23:12:33,804 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 23:12:33] "GET /account?__debugger__=yes&cmd=resource&f=console.png HTTP/1.1" 200 -
[2017-12-06 23:12:33,836 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 23:12:33] "GET /account?__debugger__=yes&cmd=resource&f=ubuntu.ttf HTTP/1.1" 200 -
[2017-12-06 23:12:58,963 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_home\\views.py', reloading
[2017-12-06 23:12:59,012 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 23:12:59,757 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 23:12:59,762 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 23:12:59,772 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 23:13:08,623 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 23:13:09,232 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 23:13:09,232 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 23:13:09,232 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 23:13:17,639 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 23:13:17] "GET /account HTTP/1.1" 500 -
[2017-12-06 23:13:17,670 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 23:13:17] "GET /account?__debugger__=yes&cmd=resource&f=style.css HTTP/1.1" 200 -
[2017-12-06 23:13:17,670 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 23:13:17] "GET /account?__debugger__=yes&cmd=resource&f=jquery.js HTTP/1.1" 200 -
[2017-12-06 23:13:17,686 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 23:13:17] "GET /account?__debugger__=yes&cmd=resource&f=debugger.js HTTP/1.1" 200 -
[2017-12-06 23:13:17,717 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 23:13:17] "GET /account?__debugger__=yes&cmd=resource&f=console.png HTTP/1.1" 200 -
[2017-12-06 23:13:17,779 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 23:13:17] "GET /account?__debugger__=yes&cmd=resource&f=console.png HTTP/1.1" 200 -
[2017-12-06 23:13:26,152 : INFO : _internal.py : 87 :                 _log() ]  * Detected change in 'C:\\Users\\espen\\virtualEnvs\\web\\app\\dir_home\\views.py', reloading
[2017-12-06 23:13:26,183 : INFO : _internal.py : 87 :                 _log() ]  * Restarting with stat
[2017-12-06 23:13:26,977 : WARNING : _internal.py : 87 :                 _log() ]  * Debugger is active!
[2017-12-06 23:13:26,981 : INFO : _internal.py : 87 :                 _log() ]  * Debugger PIN: 707-408-214
[2017-12-06 23:13:26,992 : INFO : _internal.py : 87 :                 _log() ]  * Running on http://127.0.0.1:5050/ (Press CTRL+C to quit)
[2017-12-06 23:13:34,029 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 23:13:34] "GET /account HTTP/1.1" 200 -
[2017-12-06 23:13:35,419 : INFO : _internal.py : 87 :                 _log() ] 127.0.0.1 - - [06/Dec/2017 23:13:35] "POST /account HTTP/1.1" 200 -
